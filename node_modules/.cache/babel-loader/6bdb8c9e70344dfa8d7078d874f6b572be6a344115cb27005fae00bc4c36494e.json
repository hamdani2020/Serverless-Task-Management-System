{"ast":null,"code":"import _objectSpread from\"/home/user/Task-Manager-Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useRef,useState,useEffect}from\"react\";import axios from\"axios\";import{useAuth}from\"react-oidc-context\";import{Alert,Snackbar,Dialog,DialogTitle,DialogContent,DialogActions}from\"@mui/material\";import{AppBar,Toolbar,Typography,Button,Container,TextField,Grid,Card,CardContent,CardActions,Select,MenuItem,FormControl,InputLabel,Box,Paper,IconButton}from\"@mui/material\";import{Lock as LockIcon,Edit as EditIcon}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _auth$user5;const auth=useAuth();const[tasks,setTasks]=useState([]);const[users,setUsers]=useState([]);const[userRole,setUserRole]=useState('');const[newTask,setNewTask]=useState({title:\"\",description:\"\",assignee:\"\",deadline:\"\",status:\"PENDING\"});const[error,setError]=useState(\"\");const[teamMembers,setTeamMembers]=useState([]);const API_URLS={fetchTask:\"https://71aos5nio2.execute-api.eu-west-1.amazonaws.com/getTask\",createTask:\"https://plaaw9qjn7.execute-api.eu-west-1.amazonaws.com/createTask\",updateTask:\"https://rlyzlu0dl0.execute-api.eu-west-1.amazonaws.com/updateTask\",deleteTask:\"https://1b4916boze.execute-api.eu-west-1.amazonaws.com/delete\",fetchUsers:\"https://your-api-url/getUsers\",sendNotification:\"https://yjja5gnwql.execute-api.eu-west-1.amazonaws.com/sendNotification\"};// Separate useEffect for authentication and role setting\nuseEffect(()=>{if(auth.isAuthenticated){var _auth$user;const username=(_auth$user=auth.user)===null||_auth$user===void 0?void 0:_auth$user.profile[\"cognito:username\"];const role=username===\"admin\"?\"ADMIN\":\"MEMBER\";setUserRole(role);console.log(\"Logged in as \".concat(role));}},[auth.isAuthenticated,auth.user]);// Separate useEffect for fetching tasks after role is set\nuseEffect(()=>{if(auth.isAuthenticated&&userRole){console.log(\"Fetching tasks for role:\",userRole);fetchTasks();if(userRole==='ADMIN'){fetchTeamMembers();}}},[auth.isAuthenticated,userRole]);const fetchUserRole=()=>{var _auth$user2;// In a real application, the username and roles would typically come from your authentication system.\nconst username=(_auth$user2=auth.user)===null||_auth$user2===void 0?void 0:_auth$user2.profile[\"cognito:username\"];if(username===\"admin\"){// Assign 'ADMIN' role if username matches 'admin'\nsetUserRole(\"ADMIN\");console.log(\"Logged in as admin\");}else{// Default to 'MEMBER' role otherwise\nsetUserRole(\"MEMBER\");console.log(\"Logged in as a normal user without admin privileges\");}};const titleRef=useRef();const descriptionRef=useRef();const assigneeRef=useRef();const deadlineRef=useRef();const isAdmin=()=>userRole==='ADMIN';const fetchUsers=async()=>{try{var _auth$user3;const response=await axios.get(API_URLS.fetchUsers,{headers:{Authorization:\"Bearer \".concat((_auth$user3=auth.user)===null||_auth$user3===void 0?void 0:_auth$user3.access_token)}});setUsers(response.data);}catch(err){setError(\"Failed to fetch users\");}};// Add new state for notifications\nconst[notifications,setNotifications]=useState([]);const[showNotification,setShowNotification]=useState(false);const[notificationMessage,setNotificationMessage]=useState(\"\");// Function to check if a deadline is approaching (within 3 days)\nconst isDeadlineApproaching=deadline=>{const deadlineDate=new Date(deadline);const today=new Date();const diffTime=deadlineDate-today;const diffDays=Math.ceil(diffTime/(1000*60*60*24));return diffDays<=3&&diffDays>=0;};// Function to check if a deadline has passed\nconst isDeadlinePassed=deadline=>{const deadlineDate=new Date(deadline);const today=new Date();return deadlineDate<today;};// Function to get card background color based on deadline\nconst getCardColor=(deadline,status)=>{if(status===\"COMPLETED\")return\"#e8f5e9\";// Light green for completed tasks\nif(isDeadlinePassed(deadline))return\"#ffebee\";// Red for passed deadline\nif(isDeadlineApproaching(deadline))return\"#fff3e0\";// Orange for approaching deadline\nreturn\"white\";// Default color\n};// Function to send email notification via SNS\nconst sendDeadlineNotification=async task=>{try{const response=await axios.post(API_URLS.sendNotification,{email:task.assignee,taskTitle:task.title,deadline:task.deadline,message:\"Task \\\"\".concat(task.title,\"\\\" is due on \").concat(new Date(task.deadline).toLocaleDateString(),\". Please complete it soon.\")});console.log(\"Notification sent successfully:\",response.data);}catch(error){console.error(\"Failed to send notification:\",error);setError(\"Failed to send email notification\");}};const fetchTasks=async()=>{try{var _auth$user4;console.log(\"Fetching tasks...\");const url=new URL(API_URLS.fetchTask);const response=await fetch(url);if(!response.ok){throw new Error(\"Error: \".concat(response.status));}const data=await response.json();console.log(\"Fetched tasks:\",data);// Filter tasks based on user role and assignee\nconst userEmail=(_auth$user4=auth.user)===null||_auth$user4===void 0?void 0:_auth$user4.profile.email;const relevantTasks=userRole==='ADMIN'?data:data.filter(task=>task.assignee===userEmail);// Check for approaching deadlines and send notifications\nconst approachingDeadlines=relevantTasks.filter(task=>isDeadlineApproaching(task.deadline)&&task.status!==\"COMPLETED\");// Send email notifications for approaching deadlines\nfor(const task of approachingDeadlines){await sendDeadlineNotification(task);}// Set UI notifications\nif(approachingDeadlines.length>0){setNotificationMessage(\"You have \".concat(approachingDeadlines.length,\" task(s) with approaching deadlines! Check your email for details.\"));setShowNotification(true);}setTasks(relevantTasks);}catch(err){console.error(\"Error fetching tasks:\",err);setError(err.message||\"Failed to fetch tasks\");}};const fetchTeamMembers=async()=>{try{const response=await fetch('https://vwjwg4yut4.execute-api.eu-west-1.amazonaws.com/user');if(!response.ok){throw new Error('Failed to fetch team members');}const data=await response.json();console.log(data);console.log(data.users);const members=data.users.filter(user=>user);console.log({members});setTeamMembers(members);}catch(error){setError(error.message);}};const handleCreateTask=async()=>{if(!isAdmin())return;const newTask={title:titleRef.current.value,description:descriptionRef.current.value,assignee:assigneeRef.current.value,deadline:deadlineRef.current.value,status:\"PENDING\"};try{const response=await axios.post(API_URLS.createTask,newTask,{headers:{\"Content-Type\":\"application/json\"}});setError(\"\");console.log(\"Task created:\",response.data);fetchTasks();// Refresh tasks after creating a new one\n}catch(err){setError(\"Failed to create task\");console.error(\"Error creating task:\",err);}};const handleUpdateTask=async(taskId,newStatus)=>{if(!isAdmin())return;try{const response=await axios.put(API_URLS.updateTask,{status:newStatus,id:taskId},{headers:{\"Content-Type\":\"application/json\"}});console.log(\"Task updated:\",response.data);fetchTasks();// Refresh all tasks after update\n}catch(err){console.error(\"Failed to update task:\",err.message);setError(\"Failed to update task\");}};const notifyTask=async data=>{const response=await fetch(\"https://efd8swtncb.execute-api.eu-west-1.amazonaws.com/notify\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)});const result=await response.json();console.log(result);};const handleDeleteTask=async taskId=>{if(!isAdmin())return;try{await axios.delete(API_URLS.deleteTask,{data:{TaskID:taskId},headers:{\"Content-Type\":\"application/json\"}});fetchTasks();// Refresh tasks after deletion\n}catch(err){console.error(\"Error deleting task:\",err);setError(\"Failed to delete task\");}};useEffect(()=>{fetchTeamMembers();},[]);const AdminTaskCreation=()=>/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Create Task\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Title\",inputRef:titleRef,margin:\"normal\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Description\",inputRef:descriptionRef,margin:\"normal\"}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Assignee\"}),/*#__PURE__*/_jsx(Select,{inputRef:assigneeRef,defaultValue:\"\",children:teamMembers.map(user=>/*#__PURE__*/_jsx(MenuItem,{value:user.email,children:user.email},user.email))})]}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"date\",label:\"Deadline\",inputRef:deadlineRef,margin:\"normal\",InputLabelProps:{shrink:true}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleCreateTask,sx:{mt:2},children:\"Create Task\"}),error&&/*#__PURE__*/_jsx(Typography,{color:\"error\",children:error})]});const SignInPage=()=>/*#__PURE__*/_jsxs(Box,{sx:{height:'100vh',overflow:'hidden',background:'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",sx:{background:'transparent',boxShadow:'none'},children:/*#__PURE__*/_jsx(Toolbar,{children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{flexGrow:1,color:'white'},children:\"Task Management App\"})})}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"sm\",sx:{flex:1,display:'flex',flexDirection:'column',justifyContent:'center',gap:3,py:4},children:[/*#__PURE__*/_jsx(Card,{sx:{p:4,textAlign:'center',boxShadow:'0 8px 24px rgba(0,0,0,0.1)',borderRadius:2},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(LockIcon,{size:48,className:\"mx-auto mb-4\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,sx:{mb:3},children:\"Welcome\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",sx:{mb:4},children:\"Please sign in to access your task management dashboard\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"large\",onClick:()=>auth.signinRedirect(),sx:{py:1.5,px:4,borderRadius:2,textTransform:'none',fontSize:'1.1rem'},children:\"Sign In\"})]})}),/*#__PURE__*/_jsx(Card,{sx:{p:3,boxShadow:'0 4px 12px rgba(0,0,0,0.1)',borderRadius:2},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Key Features\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'grid',gridTemplateColumns:{xs:'1fr',sm:'1fr 1fr'},gap:2,mt:1},children:['Task Creation and Assignment','Deadline Management','Progress Tracking','Team Collaboration'].map((feature,index)=>/*#__PURE__*/_jsx(Paper,{elevation:0,sx:{p:2,backgroundColor:'rgba(33, 150, 243, 0.05)',borderRadius:1},children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:feature})},index))})]})})]})]});const[editingTask,setEditingTask]=useState(null);const[editDialogOpen,setEditDialogOpen]=useState(false);// Add new function to handle task updates by regular users\nconst handleUserUpdateTask=async(taskId,updatedData)=>{try{const response=await axios.put(API_URLS.updateTask,_objectSpread({id:taskId},updatedData),{headers:{\"Content-Type\":\"application/json\"}});const updatedTask=response.data;setTasks(prevTasks=>prevTasks.map(task=>task.TaskID===taskId?_objectSpread(_objectSpread({},task),updatedData):task));setEditDialogOpen(false);setEditingTask(null);console.log(\"Task successfully updated:\",updatedTask);}catch(err){console.error(\"Failed to update task:\",err.message);setError(\"Failed to update task\");}};const EditTaskDialog=_ref=>{let{task,open,onClose}=_ref;const[editedTask,setEditedTask]=useState(task);const handleSubmit=()=>{handleUserUpdateTask(task.TaskID,editedTask);onClose();};return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Edit Task\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{pt:2,display:'flex',flexDirection:'column',gap:2},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Title\",value:editedTask.title,onChange:e=>setEditedTask(_objectSpread(_objectSpread({},editedTask),{},{title:e.target.value}))}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Description\",multiline:true,rows:4,value:editedTask.description,onChange:e=>setEditedTask(_objectSpread(_objectSpread({},editedTask),{},{description:e.target.value}))}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:\"date\",label:\"Deadline\",value:editedTask.deadline,onChange:e=>setEditedTask(_objectSpread(_objectSpread({},editedTask),{},{deadline:e.target.value})),InputLabelProps:{shrink:true}}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Status\"}),/*#__PURE__*/_jsxs(Select,{value:editedTask.status,onChange:e=>setEditedTask(_objectSpread(_objectSpread({},editedTask),{},{status:e.target.value})),label:\"Status\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"PENDING\",children:\"Pending\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"IN_PROGRESS\",children:\"In Progress\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"COMPLETED\",children:\"Completed\"})]})]})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit,variant:\"contained\",color:\"primary\",children:\"Save Changes\"})]})]});};const TaskCard=_ref2=>{let{task}=_ref2;return/*#__PURE__*/_jsxs(Card,{sx:{mb:2,mr:2,minWidth:300,maxWidth:345,backgroundColor:getCardColor(task.deadline,task.status),transition:'transform 0.2s','&:hover':{transform:'translateY(-4px)',boxShadow:'0 4px 20px rgba(0,0,0,0.12)'}},children:[/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{fontWeight:600},children:task.title}),!isAdmin()&&/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{setEditingTask(task);setEditDialogOpen(true);},sx:{ml:1},children:/*#__PURE__*/_jsx(EditIcon,{size:20})})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mb:2},children:task.description}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',alignItems:'center',mb:1,p:1,backgroundColor:'rgba(0,0,0,0.03)',borderRadius:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{fontWeight:500},children:[\"Status: \",task.status]})}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:isDeadlinePassed(task.deadline)&&task.status!==\"COMPLETED\"?'error.main':'text.secondary'},children:[\"Deadline: \",new Date(task.deadline).toLocaleDateString(),isDeadlineApproaching(task.deadline)&&task.status!==\"COMPLETED\"&&\" (Approaching!)\",isDeadlinePassed(task.deadline)&&task.status!==\"COMPLETED\"&&\" (Overdue!)\"]}),isAdmin()&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{mt:1},children:[\"Assignee: \",task.assignee]})]}),isAdmin()&&/*#__PURE__*/_jsxs(CardActions,{sx:{flexWrap:'wrap',gap:1,p:2},children:[/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"contained\",color:\"success\",onClick:()=>handleUpdateTask(task.TaskID,\"COMPLETED\"),children:\"Complete\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"contained\",color:\"warning\",onClick:()=>handleUpdateTask(task.TaskID,\"IN_PROGRESS\"),children:\"In Progress\"}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"contained\",color:\"error\",onClick:()=>handleDeleteTask(task.TaskID),children:\"Delete\"})]})]});};const TaskList=()=>/*#__PURE__*/_jsxs(Box,{sx:{p:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,sx:{mb:4},children:isAdmin()?\"All Tasks\":\"My Tasks\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:3},children:tasks.length===0?/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No tasks available\"}):tasks.map(task=>/*#__PURE__*/_jsx(TaskCard,{task:task},task.TaskID))})]});if(auth.isLoading){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',minHeight:'100vh'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Loading...\"})});}if(!auth.isAuthenticated){return/*#__PURE__*/_jsx(SignInPage,{});}return/*#__PURE__*/_jsxs(Box,{sx:{minHeight:'100vh',backgroundColor:'#f5f5f5'},children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",sx:{backgroundColor:'#1976d2'},children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{flexGrow:1},children:[\"Task Management App (\",userRole,\")\"]}),/*#__PURE__*/_jsx(Button,{color:\"inherit\",onClick:()=>auth.removeUser(),children:\"Sign Out\"})]})}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"xl\",sx:{mt:4},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",gutterBottom:true,sx:{mb:4},children:[\"Welcome, \",(_auth$user5=auth.user)===null||_auth$user5===void 0?void 0:_auth$user5.profile[\"cognito:username\"]]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[isAdmin()&&/*#__PURE__*/_jsx(AdminTaskCreation,{}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TaskList,{})})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2},children:error}),/*#__PURE__*/_jsx(Snackbar,{open:showNotification,autoHideDuration:6000,onClose:()=>setShowNotification(false),anchorOrigin:{vertical:'bottom',horizontal:'right'},children:/*#__PURE__*/_jsx(Alert,{onClose:()=>setShowNotification(false),severity:\"warning\",sx:{width:'100%'},children:notificationMessage})})]}),editingTask&&/*#__PURE__*/_jsx(EditTaskDialog,{task:editingTask,open:editDialogOpen,onClose:()=>{setEditDialogOpen(false);setEditingTask(null);}})]});}export default App;","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","useAuth","Alert","Snackbar","Dialog","DialogTitle","DialogContent","DialogActions","AppBar","Toolbar","Typography","Button","Container","TextField","Grid","Card","CardContent","CardActions","Select","MenuItem","FormControl","InputLabel","Box","Paper","IconButton","Lock","LockIcon","Edit","EditIcon","jsx","_jsx","jsxs","_jsxs","App","_auth$user5","auth","tasks","setTasks","users","setUsers","userRole","setUserRole","newTask","setNewTask","title","description","assignee","deadline","status","error","setError","teamMembers","setTeamMembers","API_URLS","fetchTask","createTask","updateTask","deleteTask","fetchUsers","sendNotification","isAuthenticated","_auth$user","username","user","profile","role","console","log","concat","fetchTasks","fetchTeamMembers","fetchUserRole","_auth$user2","titleRef","descriptionRef","assigneeRef","deadlineRef","isAdmin","_auth$user3","response","get","headers","Authorization","access_token","data","err","notifications","setNotifications","showNotification","setShowNotification","notificationMessage","setNotificationMessage","isDeadlineApproaching","deadlineDate","Date","today","diffTime","diffDays","Math","ceil","isDeadlinePassed","getCardColor","sendDeadlineNotification","task","post","email","taskTitle","message","toLocaleDateString","_auth$user4","url","URL","fetch","ok","Error","json","userEmail","relevantTasks","filter","approachingDeadlines","length","members","handleCreateTask","current","value","handleUpdateTask","taskId","newStatus","put","id","notifyTask","method","body","JSON","stringify","result","handleDeleteTask","delete","TaskID","AdminTaskCreation","item","xs","md","children","variant","fullWidth","label","inputRef","margin","defaultValue","map","type","InputLabelProps","shrink","color","onClick","sx","mt","SignInPage","height","overflow","background","display","flexDirection","position","boxShadow","flexGrow","maxWidth","flex","justifyContent","gap","py","p","textAlign","borderRadius","size","className","gutterBottom","mb","signinRedirect","px","textTransform","fontSize","gridTemplateColumns","sm","feature","index","elevation","backgroundColor","editingTask","setEditingTask","editDialogOpen","setEditDialogOpen","handleUserUpdateTask","updatedData","_objectSpread","updatedTask","prevTasks","EditTaskDialog","_ref","open","onClose","editedTask","setEditedTask","handleSubmit","pt","onChange","e","target","multiline","rows","TaskCard","_ref2","mr","minWidth","transition","transform","alignItems","fontWeight","ml","flexWrap","TaskList","isLoading","minHeight","removeUser","container","spacing","severity","autoHideDuration","anchorOrigin","vertical","horizontal","width"],"sources":["/home/user/Task-Manager-Frontend/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"react-oidc-context\";\nimport { Alert, Snackbar, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Container,\n  TextField,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Box,\n  Paper,\n  IconButton,\n} from \"@mui/material\";\nimport { Lock as LockIcon, Edit as EditIcon } from 'lucide-react';\n\nfunction App() {\n  const auth = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    assignee: \"\",\n    deadline: \"\",\n    status: \"PENDING\"\n  });\n  const [error, setError] = useState(\"\");\n  const [teamMembers, setTeamMembers] = useState([]);\n\n  const API_URLS = {\n    fetchTask: \"https://71aos5nio2.execute-api.eu-west-1.amazonaws.com/getTask\",\n    createTask: \"https://plaaw9qjn7.execute-api.eu-west-1.amazonaws.com/createTask\",\n    updateTask: \"https://rlyzlu0dl0.execute-api.eu-west-1.amazonaws.com/updateTask\",\n    deleteTask: \"https://1b4916boze.execute-api.eu-west-1.amazonaws.com/delete\",\n    fetchUsers: \"https://your-api-url/getUsers\",\n    sendNotification: \"https://yjja5gnwql.execute-api.eu-west-1.amazonaws.com/sendNotification\"\n  };\n\n  // Separate useEffect for authentication and role setting\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      const username = auth.user?.profile[\"cognito:username\"];\n      const role = username === \"admin\" ? \"ADMIN\" : \"MEMBER\";\n      setUserRole(role);\n      console.log(`Logged in as ${role}`);\n    }\n  }, [auth.isAuthenticated, auth.user]);\n\n  // Separate useEffect for fetching tasks after role is set\n  useEffect(() => {\n    if (auth.isAuthenticated && userRole) {\n      console.log(\"Fetching tasks for role:\", userRole);\n      fetchTasks();\n      if (userRole === 'ADMIN') {\n        fetchTeamMembers();\n      }\n    }\n  }, [auth.isAuthenticated, userRole]);\n\n\n  const fetchUserRole = () => {\n    // In a real application, the username and roles would typically come from your authentication system.\n    const username = auth.user?.profile[\"cognito:username\"];\n\n    if (username === \"admin\") {\n      // Assign 'ADMIN' role if username matches 'admin'\n      setUserRole(\"ADMIN\");\n      console.log(\"Logged in as admin\");\n    } else {\n      // Default to 'MEMBER' role otherwise\n      setUserRole(\"MEMBER\");\n      console.log(\"Logged in as a normal user without admin privileges\");\n    }\n  };\n\n\n\n  const titleRef = useRef();\n  const descriptionRef = useRef();\n  const assigneeRef = useRef();\n  const deadlineRef = useRef();\n\n  const isAdmin = () => userRole === 'ADMIN';\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(API_URLS.fetchUsers, {\n        headers: { Authorization: `Bearer ${auth.user?.access_token}` },\n      });\n      setUsers(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch users\");\n    }\n  };\n\n\n\n  // Add new state for notifications\n  const [notifications, setNotifications] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n\n  // Function to check if a deadline is approaching (within 3 days)\n  const isDeadlineApproaching = (deadline) => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    const diffTime = deadlineDate - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays <= 3 && diffDays >= 0;\n  };\n\n  // Function to check if a deadline has passed\n  const isDeadlinePassed = (deadline) => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    return deadlineDate < today;\n  };\n\n  // Function to get card background color based on deadline\n  const getCardColor = (deadline, status) => {\n    if (status === \"COMPLETED\") return \"#e8f5e9\"; // Light green for completed tasks\n    if (isDeadlinePassed(deadline)) return \"#ffebee\"; // Red for passed deadline\n    if (isDeadlineApproaching(deadline)) return \"#fff3e0\"; // Orange for approaching deadline\n    return \"white\"; // Default color\n  };\n\n\n  // Function to send email notification via SNS\n  const sendDeadlineNotification = async (task) => {\n    try {\n      const response = await axios.post(API_URLS.sendNotification, {\n        email: task.assignee,\n        taskTitle: task.title,\n        deadline: task.deadline,\n        message: `Task \"${task.title}\" is due on ${new Date(task.deadline).toLocaleDateString()}. Please complete it soon.`\n      });\n      console.log(\"Notification sent successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Failed to send notification:\", error);\n      setError(\"Failed to send email notification\");\n    }\n  };\n\n  const fetchTasks = async () => {\n    try {\n      console.log(\"Fetching tasks...\");\n      const url = new URL(API_URLS.fetchTask);\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log(\"Fetched tasks:\", data);\n\n      // Filter tasks based on user role and assignee\n      const userEmail = auth.user?.profile.email;\n      const relevantTasks = userRole === 'ADMIN' ? data : data.filter(task => task.assignee === userEmail);\n\n      // Check for approaching deadlines and send notifications\n      const approachingDeadlines = relevantTasks.filter(\n        task => isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\"\n      );\n\n      // Send email notifications for approaching deadlines\n      for (const task of approachingDeadlines) {\n        await sendDeadlineNotification(task);\n      }\n\n      // Set UI notifications\n      if (approachingDeadlines.length > 0) {\n        setNotificationMessage(`You have ${approachingDeadlines.length} task(s) with approaching deadlines! Check your email for details.`);\n        setShowNotification(true);\n      }\n\n      setTasks(relevantTasks);\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err);\n      setError(err.message || \"Failed to fetch tasks\");\n    }\n  };\n\n  const fetchTeamMembers = async () => {\n    try {\n      const response = await fetch('https://vwjwg4yut4.execute-api.eu-west-1.amazonaws.com/user');\n      if (!response.ok) {\n        throw new Error('Failed to fetch team members');\n      }\n      const data = await response.json();\n      console.log(data)\n      console.log(data.users)\n      const members = data.users.filter((user) => user);\n      console.log({ members })\n      setTeamMembers(members);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const handleCreateTask = async () => {\n    if (!isAdmin()) return;\n\n    const newTask = {\n      title: titleRef.current.value,\n      description: descriptionRef.current.value,\n      assignee: assigneeRef.current.value,\n      deadline: deadlineRef.current.value,\n      status: \"PENDING\",\n    };\n\n    try {\n      const response = await axios.post(API_URLS.createTask, newTask, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setError(\"\");\n      console.log(\"Task created:\", response.data);\n      fetchTasks(); // Refresh tasks after creating a new one\n    } catch (err) {\n      setError(\"Failed to create task\");\n      console.error(\"Error creating task:\", err);\n    }\n  };\n\n\n  const handleUpdateTask = async (taskId, newStatus) => {\n    if (!isAdmin()) return;\n\n    try {\n      const response = await axios.put(\n        API_URLS.updateTask,\n        { status: newStatus, id: taskId },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          }\n        }\n      );\n\n      console.log(\"Task updated:\", response.data);\n      fetchTasks(); // Refresh all tasks after update\n    } catch (err) {\n      console.error(\"Failed to update task:\", err.message);\n      setError(\"Failed to update task\");\n    }\n  };\n\n\n\n  const notifyTask = async (data) => {\n    const response = await fetch(\"https://efd8swtncb.execute-api.eu-west-1.amazonaws.com/notify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    const result = await response.json();\n    console.log(result);\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    if (!isAdmin()) return;\n    try {\n      await axios.delete(API_URLS.deleteTask, {\n        data: { TaskID: taskId },\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      fetchTasks(); // Refresh tasks after deletion\n    } catch (err) {\n      console.error(\"Error deleting task:\", err);\n      setError(\"Failed to delete task\");\n    }\n  };\n\n  useEffect(() => {\n    fetchTeamMembers();\n  }, []);\n\n  const AdminTaskCreation = () => (\n\n    <Grid item xs={12} md={6}>\n      <Typography variant=\"h5\">Create Task</Typography>\n\n      {/* Title Input */}\n      <TextField\n        fullWidth\n        label=\"Title\"\n        inputRef={titleRef}\n        margin=\"normal\"\n      />\n\n      {/* Description Input */}\n      <TextField\n        fullWidth\n        label=\"Description\"\n        inputRef={descriptionRef}\n        margin=\"normal\"\n      />\n\n      {/* Assignee Select */}\n      <FormControl fullWidth margin=\"normal\">\n        <InputLabel>Assignee</InputLabel>\n        <Select\n          inputRef={assigneeRef}\n          defaultValue=\"\"\n        >\n          {teamMembers.map((user) => (\n            <MenuItem key={user.email} value={user.email}>\n              {user.email}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      {/* Deadline Input */}\n      <TextField\n        fullWidth\n        type=\"date\"\n        label=\"Deadline\"\n        inputRef={deadlineRef}\n        margin=\"normal\"\n        InputLabelProps={{ shrink: true }}\n      />\n\n      {/* Create Task Button */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleCreateTask}\n        sx={{ mt: 2 }}\n      >\n        Create Task\n      </Button>\n\n      {/* Error Message */}\n      {error && <Typography color=\"error\">{error}</Typography>}\n    </Grid>\n  );\n\n\n  const SignInPage = () => (\n    <Box\n      sx={{\n        height: '100vh',\n        overflow: 'hidden',\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        display: 'flex',\n        flexDirection: 'column'\n      }}\n    >\n      <AppBar position=\"static\" sx={{ background: 'transparent', boxShadow: 'none' }}>\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1, color: 'white' }}>\n            Task Management App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      \n      <Container \n        maxWidth=\"sm\" \n        sx={{ \n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          gap: 3,\n          py: 4\n        }}\n      >\n        <Card sx={{ \n          p: 4, \n          textAlign: 'center',\n          boxShadow: '0 8px 24px rgba(0,0,0,0.1)',\n          borderRadius: 2\n        }}>\n          <CardContent>\n            <LockIcon size={48} className=\"mx-auto mb-4\" />\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 3 }}>\n              Welcome\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\n              Please sign in to access your task management dashboard\n            </Typography>\n            <Button \n              variant=\"contained\" \n              size=\"large\"\n              onClick={() => auth.signinRedirect()}\n              sx={{\n                py: 1.5,\n                px: 4,\n                borderRadius: 2,\n                textTransform: 'none',\n                fontSize: '1.1rem'\n              }}\n            >\n              Sign In\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card sx={{ \n          p: 3,\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          borderRadius: 2\n        }}>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Key Features\n            </Typography>\n            <Box sx={{ \n              display: 'grid', \n              gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr' }, \n              gap: 2,\n              mt: 1 \n            }}>\n              {[\n                'Task Creation and Assignment',\n                'Deadline Management',\n                'Progress Tracking',\n                'Team Collaboration'\n              ].map((feature, index) => (\n                <Paper \n                  elevation={0}\n                  key={index}\n                  sx={{ \n                    p: 2,\n                    backgroundColor: 'rgba(33, 150, 243, 0.05)',\n                    borderRadius: 1\n                  }}\n                >\n                  <Typography variant=\"body2\">{feature}</Typography>\n                </Paper>\n              ))}\n            </Box>\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n\n  const [editingTask, setEditingTask] = useState(null);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n  // Add new function to handle task updates by regular users\n  const handleUserUpdateTask = async (taskId, updatedData) => {\n    try {\n      const response = await axios.put(\n        API_URLS.updateTask,\n        {\n          id: taskId,\n          ...updatedData\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          }\n        }\n      );\n\n      const updatedTask = response.data;\n\n      setTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.TaskID === taskId ? { ...task, ...updatedData } : task\n        )\n      );\n\n      setEditDialogOpen(false);\n      setEditingTask(null);\n      console.log(\"Task successfully updated:\", updatedTask);\n    } catch (err) {\n      console.error(\"Failed to update task:\", err.message);\n      setError(\"Failed to update task\");\n    }\n  };\n\n  const EditTaskDialog = ({ task, open, onClose }) => {\n    const [editedTask, setEditedTask] = useState(task);\n\n    const handleSubmit = () => {\n      handleUserUpdateTask(task.TaskID, editedTask);\n      onClose();\n    };\n\n    return (\n      <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Edit Task</DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField\n              fullWidth\n              label=\"Title\"\n              value={editedTask.title}\n              onChange={(e) => setEditedTask({ ...editedTask, title: e.target.value })}\n            />\n            <TextField\n              fullWidth\n              label=\"Description\"\n              multiline\n              rows={4}\n              value={editedTask.description}\n              onChange={(e) => setEditedTask({ ...editedTask, description: e.target.value })}\n            />\n            <TextField\n              fullWidth\n              type=\"date\"\n              label=\"Deadline\"\n              value={editedTask.deadline}\n              onChange={(e) => setEditedTask({ ...editedTask, deadline: e.target.value })}\n              InputLabelProps={{ shrink: true }}\n            />\n            <FormControl fullWidth>\n              <InputLabel>Status</InputLabel>\n              <Select\n                value={editedTask.status}\n                onChange={(e) => setEditedTask({ ...editedTask, status: e.target.value })}\n                label=\"Status\"\n              >\n                <MenuItem value=\"PENDING\">Pending</MenuItem>\n                <MenuItem value=\"IN_PROGRESS\">In Progress</MenuItem>\n                <MenuItem value=\"COMPLETED\">Completed</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>Cancel</Button>\n          <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n\n  const TaskCard = ({ task }) => (\n    <Card\n      sx={{\n        mb: 2,\n        mr: 2,\n        minWidth: 300,\n        maxWidth: 345,\n        backgroundColor: getCardColor(task.deadline, task.status),\n        transition: 'transform 0.2s',\n        '&:hover': {\n          transform: 'translateY(-4px)',\n          boxShadow: '0 4px 20px rgba(0,0,0,0.12)'\n        }\n      }}\n    >\n      <CardContent>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n          <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 600 }}>\n            {task.title}\n          </Typography>\n          {!isAdmin() && (\n            <IconButton\n              size=\"small\"\n              onClick={() => {\n                setEditingTask(task);\n                setEditDialogOpen(true);\n              }}\n              sx={{ ml: 1 }}\n            >\n              <EditIcon size={20} />\n            </IconButton>\n          )}\n        </Box>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          {task.description}\n        </Typography>\n        <Box sx={{\n          display: 'flex',\n          alignItems: 'center',\n          mb: 1,\n          p: 1,\n          backgroundColor: 'rgba(0,0,0,0.03)',\n          borderRadius: 1\n        }}>\n          <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n            Status: {task.status}\n          </Typography>\n        </Box>\n        <Typography\n          variant=\"body2\"\n          sx={{\n            color: isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\"\n              ? 'error.main'\n              : 'text.secondary'\n          }}\n        >\n          Deadline: {new Date(task.deadline).toLocaleDateString()}\n          {isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\" &&\n            \" (Approaching!)\"}\n          {isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\" &&\n            \" (Overdue!)\"}\n        </Typography>\n        {isAdmin() && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n            Assignee: {task.assignee}\n          </Typography>\n        )}\n      </CardContent>\n      {isAdmin() && (\n        <CardActions sx={{ flexWrap: 'wrap', gap: 1, p: 2 }}>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => handleUpdateTask(task.TaskID, \"COMPLETED\")}\n          >\n            Complete\n          </Button>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"warning\"\n            onClick={() => handleUpdateTask(task.TaskID, \"IN_PROGRESS\")}\n          >\n            In Progress\n          </Button>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => handleDeleteTask(task.TaskID)}\n          >\n            Delete\n          </Button>\n        </CardActions>\n      )}\n    </Card>\n  );\n\n  const TaskList = () => (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h5\" gutterBottom sx={{ mb: 4 }}>\n        {isAdmin() ? \"All Tasks\" : \"My Tasks\"}\n      </Typography>\n      <Box sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 3\n      }}>\n        {tasks.length === 0 ? (\n          <Typography color=\"text.secondary\">No tasks available</Typography>\n        ) : (\n          tasks.map((task) => (\n            <TaskCard key={task.TaskID} task={task} />\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n\n  if (auth.isLoading) {\n    return (\n      <Box sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh'\n      }}>\n        <Typography variant=\"h6\">Loading...</Typography>\n      </Box>\n    );\n  }\n\n  if (!auth.isAuthenticated) {\n    return <SignInPage />;\n  }\n\n  return (\n    <Box sx={{ minHeight: '100vh', backgroundColor: '#f5f5f5' }}>\n      <AppBar position=\"static\" sx={{ backgroundColor: '#1976d2' }}>\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            Task Management App ({userRole})\n          </Typography>\n          <Button color=\"inherit\" onClick={() => auth.removeUser()}>\n            Sign Out\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n        <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\n          Welcome, {auth.user?.profile[\"cognito:username\"]}\n        </Typography>\n        <Grid container spacing={3}>\n          {isAdmin() && <AdminTaskCreation />}\n          <Grid item xs={12}>\n            <TaskList />\n          </Grid>\n        </Grid>\n        {error && (\n          <Alert severity=\"error\" sx={{ mt: 2 }}>\n            {error}\n          </Alert>\n        )}\n        <Snackbar\n          open={showNotification}\n          autoHideDuration={6000}\n          onClose={() => setShowNotification(false)}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        >\n          <Alert\n            onClose={() => setShowNotification(false)}\n            severity=\"warning\"\n            sx={{ width: '100%' }}\n          >\n            {notificationMessage}\n          </Alert>\n        </Snackbar>\n      </Container>\n      {editingTask && (\n        <EditTaskDialog\n          task={editingTask}\n          open={editDialogOpen}\n          onClose={() => {\n            setEditDialogOpen(false);\n            setEditingTask(null);\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}