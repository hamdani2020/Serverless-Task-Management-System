{"ast":null,"code":"var _jsxFileName = \"/home/user/Task-Manager/task-manager-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskForm from './components/TaskForm.js';\nimport { useAuth } from \"react-oidc-context\";\nimport { Alert, Snackbar } from \"@mui/material\"; // Add these imports\nimport { AppBar, Toolbar, Typography, Button, Container, TextField, Grid, Card, CardContent, CardActions, Select, MenuItem, FormControl, InputLabel } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const auth = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    assignee: \"\",\n    deadline: \"\",\n    status: \"PENDING\"\n  });\n  const [error, setError] = useState(\"\");\n  const [teamMembers, setTeamMembers] = useState([]);\n  const API_URLS = {\n    fetchTask: \"https://71aos5nio2.execute-api.eu-west-1.amazonaws.com/getTask\",\n    createTask: \"https://plaaw9qjn7.execute-api.eu-west-1.amazonaws.com/createTask\",\n    updateTask: \"https://rlyzlu0dl0.execute-api.eu-west-1.amazonaws.com/updateTask\",\n    deleteTask: \"https://1b4916boze.execute-api.eu-west-1.amazonaws.com/delete\",\n    fetchUsers: \"https://your-api-url/getUsers\"\n  };\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      fetchUserRole();\n      fetchTasks();\n      if (isAdmin()) {\n        fetchUsers();\n      }\n    }\n  }, [auth.isAuthenticated]);\n  const fetchUserRole = () => {\n    var _auth$user;\n    // In a real application, the username and roles would typically come from your authentication system.\n    const username = (_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.profile[\"cognito:username\"];\n    if (username === \"admin\") {\n      // Assign 'ADMIN' role if username matches 'admin'\n      setUserRole(\"ADMIN\");\n      console.log(\"Logged in as admin\");\n    } else {\n      // Default to 'MEMBER' role otherwise\n      setUserRole(\"MEMBER\");\n      console.log(\"Logged in as a normal user without admin privileges\");\n    }\n  };\n  const titleRef = useRef();\n  const descriptionRef = useRef();\n  const assigneeRef = useRef();\n  const deadlineRef = useRef();\n  const isAdmin = () => userRole === 'ADMIN';\n  const fetchUsers = async () => {\n    try {\n      var _auth$user2;\n      const response = await axios.get(API_URLS.fetchUsers, {\n        headers: {\n          Authorization: `Bearer ${(_auth$user2 = auth.user) === null || _auth$user2 === void 0 ? void 0 : _auth$user2.access_token}`\n        }\n      });\n      setUsers(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch users\");\n    }\n  };\n\n  // Add new state for notifications\n  const [notifications, setNotifications] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n\n  // Function to check if a deadline is approaching (within 3 days)\n  const isDeadlineApproaching = deadline => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    const diffTime = deadlineDate - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays <= 3 && diffDays >= 0;\n  };\n\n  // Function to check if a deadline has passed\n  const isDeadlinePassed = deadline => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    return deadlineDate < today;\n  };\n\n  // Function to get card background color based on deadline\n  const getCardColor = (deadline, status) => {\n    if (status === \"COMPLETED\") return \"#e8f5e9\"; // Light green for completed tasks\n    if (isDeadlinePassed(deadline)) return \"#ffebee\"; // Red for passed deadline\n    if (isDeadlineApproaching(deadline)) return \"#fff3e0\"; // Orange for approaching deadline\n    return \"white\"; // Default color\n  };\n  const fetchTasks = async () => {\n    try {\n      var _auth$user3, _auth$user4;\n      const token = (_auth$user3 = auth.user) === null || _auth$user3 === void 0 ? void 0 : _auth$user3.access_token;\n      const url = new URL(API_URLS.fetchTask);\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const data = await response.json();\n\n      // Filter tasks based on user role and assignee\n      const userEmail = (_auth$user4 = auth.user) === null || _auth$user4 === void 0 ? void 0 : _auth$user4.profile.email;\n      const relevantTasks = isAdmin() ? data : data.filter(task => task.assignee === userEmail);\n\n      // Check for approaching deadlines\n      const approachingDeadlines = relevantTasks.filter(task => isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\");\n\n      // Set notifications for approaching deadlines\n      if (approachingDeadlines.length > 0) {\n        setNotificationMessage(`You have ${approachingDeadlines.length} task(s) with approaching deadlines!`);\n        setShowNotification(true);\n      }\n      setTasks(relevantTasks);\n    } catch (err) {\n      console.log(err);\n      setError(err.message || \"Failed to fetch tasks\");\n    }\n  };\n  const fetchTeamMembers = async () => {\n    try {\n      const response = await fetch('https://vwjwg4yut4.execute-api.eu-west-1.amazonaws.com/user');\n      if (!response.ok) {\n        throw new Error('Failed to fetch team members');\n      }\n      const data = await response.json();\n      console.log(data);\n      console.log(data.users);\n      const members = data.users.filter(user => user);\n      console.log({\n        members\n      });\n      setTeamMembers(members);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleCreateTask = async () => {\n    if (!isAdmin()) return;\n    const newTask = {\n      title: titleRef.current.value,\n      description: descriptionRef.current.value,\n      assignee: assigneeRef.current.value,\n      deadline: deadlineRef.current.value,\n      status: \"PENDING\"\n    };\n    try {\n      const response = await axios.post(API_URLS.createTask, newTask, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setError(\"\");\n      console.log(\"Task created:\", response.data);\n      // Refresh tasks after creating a new one\n      fetchTasks();\n    } catch (err) {\n      setError(\"Failed to create task\");\n    }\n  };\n  const handleUpdateTask = async (taskId, newStatus) => {\n    if (!isAdmin()) return;\n    try {\n      const response = await axios.put(API_URLS.updateTask,\n      // Use TaskID query parameter\n      {\n        status: newStatus,\n        id: taskId\n      },\n      // Payload matches Lambda's expected structure\n      {\n        headers: {\n          \"Content-Type\": \"application/json\"\n          //Authorization: `Bearer ${auth.user?.access_token}`\n        }\n      });\n      const updatedTask = response.data;\n      console.log(updatedTask);\n\n      // Update task state with the new values\n      setTasks(prevTasks => prevTasks.map(task => task.TaskID === taskId ? {\n        ...task,\n        ...updatedTask\n      } : task));\n      console.log(\"Task successfully updated:\", updatedTask);\n    } catch (err) {\n      console.error(\"Failed to update task:\", err.message);\n      setError(\"Failed to update task\");\n    }\n  };\n  const notifyTask = async data => {\n    const response = await fetch(\"https://efd8swtncb.execute-api.eu-west-1.amazonaws.com/notify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    console.log(result);\n  };\n\n  // Example usage:\n\n  const handleDeleteTask = async taskId => {\n    if (!isAdmin()) return;\n    try {\n      await axios.delete(API_URLS.deleteTask, {\n        data: {\n          TaskID: taskId\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setTasks(prevTasks => prevTasks.filter(task => task.TaskID !== taskId));\n    } catch (err) {\n      console.error(err); // Log the error for debugging\n      setError(\"Failed to delete task\");\n    }\n  };\n  useEffect(() => {\n    fetchTeamMembers();\n  }, []);\n  const AdminTaskCreation = () => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Title\",\n      inputRef: titleRef,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Description\",\n      inputRef: descriptionRef,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      margin: \"normal\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Assignee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        inputRef: assigneeRef,\n        defaultValue: \"\",\n        children: teamMembers.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: user.email,\n          children: user.email\n        }, user.email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      type: \"date\",\n      label: \"Deadline\",\n      inputRef: deadlineRef,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleCreateTask,\n      sx: {\n        mt: 2\n      },\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 3\n  }, this);\n  const TaskList = () => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: isAdmin() ? 6 : 12,\n    sx: !isAdmin() ? {\n      marginTop: 4\n    } : {},\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    justifyContent: isAdmin() ? \"flex-start\" : \"flex-start\",\n    wrap: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: isAdmin() ? \"All Tasks\" : \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 2,\n        mr: isAdmin() ? 9 : 2,\n        minWidth: 275,\n        backgroundColor: getCardColor(task.deadline, task.status)\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Status: \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\" ? 'error.main' : 'inherit'\n          },\n          children: [\"Deadline: \", new Date(task.deadline).toLocaleDateString(), isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\" && \" (Approaching!)\", isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\" && \" (Overdue!)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 15\n        }, this), isAdmin() && /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Assignee: \", task.assignee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this), isAdmin() && /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: () => handleUpdateTask(task.TaskID, \"COMPLETED\"),\n          children: \"Mark as Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"warning\",\n          onClick: () => handleUpdateTask(task.TaskID, \"IN_PROGRESS\"),\n          children: \"Mark as In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: () => handleDeleteTask(task.TaskID),\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }, this)]\n    }, task.TaskID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n  if (auth.isLoading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 12\n    }, this);\n  }\n  if (auth.error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"error\",\n      children: [\"Encountering error... \", auth.error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this);\n  }\n  if (auth.isAuthenticated) {\n    var _auth$user5;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1\n            },\n            children: [\"Task Management App (\", userRole, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: () => auth.removeUser(),\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: [\"Welcome, \", (_auth$user5 = auth.user) === null || _auth$user5 === void 0 ? void 0 : _auth$user5.profile[\"cognito:username\"]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isAdmin() && /*#__PURE__*/_jsxDEV(AdminTaskCreation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          sx: {\n            mt: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: showNotification,\n          autoHideDuration: 6000,\n          onClose: () => setShowNotification(false),\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: () => setShowNotification(false),\n            severity: \"warning\",\n            sx: {\n              width: '100%'\n            },\n            children: notificationMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Task Management App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => auth.signinRedirect(),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Please sign in to manage tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oWOaOe4DZV+vtmI57A5ARN4njjE=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","TaskForm","useAuth","Alert","Snackbar","AppBar","Toolbar","Typography","Button","Container","TextField","Grid","Card","CardContent","CardActions","Select","MenuItem","FormControl","InputLabel","jsxDEV","_jsxDEV","App","_s","auth","tasks","setTasks","users","setUsers","userRole","setUserRole","newTask","setNewTask","title","description","assignee","deadline","status","error","setError","teamMembers","setTeamMembers","API_URLS","fetchTask","createTask","updateTask","deleteTask","fetchUsers","isAuthenticated","fetchUserRole","fetchTasks","isAdmin","_auth$user","username","user","profile","console","log","titleRef","descriptionRef","assigneeRef","deadlineRef","_auth$user2","response","get","headers","Authorization","access_token","data","err","notifications","setNotifications","showNotification","setShowNotification","notificationMessage","setNotificationMessage","isDeadlineApproaching","deadlineDate","Date","today","diffTime","diffDays","Math","ceil","isDeadlinePassed","getCardColor","_auth$user3","_auth$user4","token","url","URL","fetch","ok","Error","json","userEmail","email","relevantTasks","filter","task","approachingDeadlines","length","message","fetchTeamMembers","members","handleCreateTask","current","value","post","handleUpdateTask","taskId","newStatus","put","id","updatedTask","prevTasks","map","TaskID","notifyTask","method","body","JSON","stringify","result","handleDeleteTask","delete","AdminTaskCreation","item","xs","md","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","inputRef","margin","defaultValue","type","InputLabelProps","shrink","color","onClick","sx","mt","TaskList","marginTop","container","direction","spacing","justifyContent","wrap","gutterBottom","mb","mr","minWidth","backgroundColor","toLocaleDateString","isLoading","_auth$user5","position","flexGrow","removeUser","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","width","signinRedirect","_c","$RefreshReg$"],"sources":["/home/user/Task-Manager/task-manager-frontend/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskForm from './components/TaskForm.js'\nimport { useAuth } from \"react-oidc-context\";\nimport { Alert, Snackbar } from \"@mui/material\"; // Add these imports\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Container,\n  TextField,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@mui/material\";\n\nfunction App() {\n  const auth = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    assignee: \"\",\n    deadline: \"\",\n    status: \"PENDING\"\n  });\n  const [error, setError] = useState(\"\");\n  const [teamMembers, setTeamMembers] = useState([]);\n\n  const API_URLS = {\n    fetchTask: \"https://71aos5nio2.execute-api.eu-west-1.amazonaws.com/getTask\",\n    createTask: \"https://plaaw9qjn7.execute-api.eu-west-1.amazonaws.com/createTask\",\n    updateTask: \"https://rlyzlu0dl0.execute-api.eu-west-1.amazonaws.com/updateTask\",\n    deleteTask: \"https://1b4916boze.execute-api.eu-west-1.amazonaws.com/delete\",\n    fetchUsers: \"https://your-api-url/getUsers\"\n  };\n\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      fetchUserRole();\n      fetchTasks();\n      if (isAdmin()) {\n        fetchUsers();\n      }\n    }\n  }, [auth.isAuthenticated]);\n\n  const fetchUserRole = () => {\n  // In a real application, the username and roles would typically come from your authentication system.\n  const username = auth.user?.profile[\"cognito:username\"];\n  \n  if (username === \"admin\") {\n    // Assign 'ADMIN' role if username matches 'admin'\n    setUserRole(\"ADMIN\");\n    console.log(\"Logged in as admin\");\n  } else {\n    // Default to 'MEMBER' role otherwise\n    setUserRole(\"MEMBER\");\n    console.log(\"Logged in as a normal user without admin privileges\");\n  }\n};\n\n\n\n  const titleRef = useRef();\n  const descriptionRef = useRef();\n  const assigneeRef = useRef();\n  const deadlineRef = useRef();\n\nconst isAdmin = () => userRole === 'ADMIN';\n\nconst fetchUsers = async () => {\n  try {\n    const response = await axios.get(API_URLS.fetchUsers, {\n      headers: { Authorization: `Bearer ${auth.user?.access_token}` },\n    });\n    setUsers(response.data);\n  } catch (err) {\n    setError(\"Failed to fetch users\");\n  }\n};\n\n\n\n    // Add new state for notifications\n  const [notifications, setNotifications] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n\n  // Function to check if a deadline is approaching (within 3 days)\n  const isDeadlineApproaching = (deadline) => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    const diffTime = deadlineDate - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays <= 3 && diffDays >= 0;\n  };\n\n  // Function to check if a deadline has passed\n  const isDeadlinePassed = (deadline) => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    return deadlineDate < today;\n  };\n\n  // Function to get card background color based on deadline\n  const getCardColor = (deadline, status) => {\n    if (status === \"COMPLETED\") return \"#e8f5e9\"; // Light green for completed tasks\n    if (isDeadlinePassed(deadline)) return \"#ffebee\"; // Red for passed deadline\n    if (isDeadlineApproaching(deadline)) return \"#fff3e0\"; // Orange for approaching deadline\n    return \"white\"; // Default color\n  };\n\n  const fetchTasks = async () => {\n    try {\n      const token = auth.user?.access_token;\n      const url = new URL(API_URLS.fetchTask);\n      \n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n\n      const data = await response.json();\n      \n      // Filter tasks based on user role and assignee\n      const userEmail = auth.user?.profile.email;\n      const relevantTasks = isAdmin() ? data : data.filter(task => task.assignee === userEmail);\n      \n      // Check for approaching deadlines\n      const approachingDeadlines = relevantTasks.filter(\n        task => isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\"\n      );\n\n      // Set notifications for approaching deadlines\n      if (approachingDeadlines.length > 0) {\n        setNotificationMessage(`You have ${approachingDeadlines.length} task(s) with approaching deadlines!`);\n        setShowNotification(true);\n      }\n\n      setTasks(relevantTasks);\n    } catch (err) {\n      console.log(err);\n      setError(err.message || \"Failed to fetch tasks\");\n    }\n  };\n\nconst fetchTeamMembers = async () => {\n        try {\n            const response = await fetch('https://vwjwg4yut4.execute-api.eu-west-1.amazonaws.com/user');\n            if (!response.ok) {\n                throw new Error('Failed to fetch team members');\n            }\n            const data = await response.json();\n            console.log(data)\n            console.log(data.users)\n            const members = data.users.filter((user) => user);\n            console.log({members})\n            setTeamMembers(members);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n   const handleCreateTask = async () => {\n    if (!isAdmin()) return;\n\n    const newTask = {\n      title: titleRef.current.value,\n      description: descriptionRef.current.value,\n      assignee: assigneeRef.current.value,\n      deadline: deadlineRef.current.value,\n      status: \"PENDING\",\n    };\n\n    try {\n      const response = await axios.post(API_URLS.createTask, newTask, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setError(\"\");\n      console.log(\"Task created:\", response.data);\n      // Refresh tasks after creating a new one\n      fetchTasks();\n    } catch (err) {\n      setError(\"Failed to create task\");\n    }\n  };\n  const handleUpdateTask = async (taskId, newStatus) => {\n  if (!isAdmin()) return;\n\n  try {\n    const response = await axios.put(\n      API_URLS.updateTask, // Use TaskID query parameter\n      { status: newStatus,id:taskId }, // Payload matches Lambda's expected structure\n      {\n        headers: { \n          \"Content-Type\": \"application/json\",\n          //Authorization: `Bearer ${auth.user?.access_token}`\n        }\n      }\n    );\n\n    const updatedTask = response.data;\n      console.log(updatedTask)\n\n    // Update task state with the new values\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.TaskID === taskId ? { ...task, ...updatedTask } : task\n      )\n    );\n\n    console.log(\"Task successfully updated:\", updatedTask);\n  } catch (err) {\n    console.error(\"Failed to update task:\", err.message);\n    setError(\"Failed to update task\");\n  }\n};\n\n\n  const notifyTask = async (data) => {\n  const response = await fetch(\"https://efd8swtncb.execute-api.eu-west-1.amazonaws.com/notify\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  });\n  const result = await response.json();\n  console.log(result);\n};\n\n// Example usage:\n\n\n\n\n  const handleDeleteTask = async (taskId) => {\n  if (!isAdmin()) return;\n  try {\n    await axios.delete(API_URLS.deleteTask, {\n        data:{TaskID:taskId},\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n    setTasks((prevTasks) => prevTasks.filter((task) => task.TaskID !== taskId));\n  } catch (err) {\n    console.error(err);  // Log the error for debugging\n    setError(\"Failed to delete task\");\n  }\n};\n\n    useEffect(() => {\n        fetchTeamMembers();\n    }, []);\n\n  const AdminTaskCreation = () => (\n    \n  <Grid item xs={12} md={6}>\n      <Typography variant=\"h5\">Create Task</Typography>\n\n      {/* Title Input */}\n      <TextField\n        fullWidth\n        label=\"Title\"\n        inputRef={titleRef}\n        margin=\"normal\"\n      />\n\n      {/* Description Input */}\n      <TextField\n        fullWidth\n        label=\"Description\"\n        inputRef={descriptionRef}\n        margin=\"normal\"\n      />\n\n      {/* Assignee Select */}\n      <FormControl fullWidth margin=\"normal\">\n        <InputLabel>Assignee</InputLabel>\n        <Select\n          inputRef={assigneeRef}\n          defaultValue=\"\"\n        >\n          {teamMembers.map((user) => (\n            <MenuItem key={user.email} value={user.email}>\n              {user.email}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      {/* Deadline Input */}\n      <TextField\n        fullWidth\n        type=\"date\"\n        label=\"Deadline\"\n        inputRef={deadlineRef}\n        margin=\"normal\"\n        InputLabelProps={{ shrink: true }}\n      />\n\n      {/* Create Task Button */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleCreateTask}\n        sx={{ mt: 2 }}\n      >\n        Create Task\n      </Button>\n\n      {/* Error Message */}\n      {error && <Typography color=\"error\">{error}</Typography>}\n    </Grid>\n);\n\n\n  const TaskList = () => (\n    <Grid\n      item\n      xs={12}\n      md={isAdmin() ? 6 : 12}\n      sx={!isAdmin() ? { marginTop: 4 }: {}}\n      container\n      direction=\"row\"\n      spacing={2}\n      justifyContent={isAdmin() ? \"flex-start\" : \"flex-start\"}\n      wrap=\"wrap\"\n    >\n      <Typography variant=\"h5\" gutterBottom>\n        {isAdmin() ? \"All Tasks\" : \"My Tasks\"}\n      </Typography>\n      {tasks.length === 0 ? (\n        <Typography>No tasks available</Typography>\n      ) : (\n        tasks.map((task) => (\n          <Card\n            key={task.TaskID}\n            sx={{ \n              mb: 2, \n              mr: isAdmin() ? 9 : 2, \n              minWidth: 275,\n              backgroundColor: getCardColor(task.deadline, task.status)\n            }}\n          >\n            <CardContent>\n              <Typography variant=\"h6\">{task.title}</Typography>\n              <Typography>{task.description}</Typography>\n              <Typography>Status: {task.status}</Typography>\n              <Typography \n                sx={{ \n                  color: isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\" ? 'error.main' : 'inherit'\n                }}\n              >\n                Deadline: {new Date(task.deadline).toLocaleDateString()}\n                {isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\" && \n                  \" (Approaching!)\"}\n                {isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\" && \n                  \" (Overdue!)\"}\n              </Typography>\n              {isAdmin() && <Typography>Assignee: {task.assignee}</Typography>}\n            </CardContent>\n            {isAdmin() && (\n              <CardActions>\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  onClick={() => handleUpdateTask(task.TaskID, \"COMPLETED\")}\n                >\n                  Mark as Completed\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"warning\"\n                  onClick={() => handleUpdateTask(task.TaskID, \"IN_PROGRESS\")}\n                >\n                  Mark as In Progress\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"error\"\n                  onClick={() => handleDeleteTask(task.TaskID)}\n                >\n                  Delete Task\n                </Button>\n              </CardActions>\n            )}\n          </Card>\n        ))\n      )}\n    </Grid>\n  );\n\n\n  if (auth.isLoading) {\n    return <Typography variant=\"h6\">Loading...</Typography>;\n  }\n\n  if (auth.error) {\n    return (\n      <Typography variant=\"h6\" color=\"error\">\n        Encountering error... {auth.error.message}\n      </Typography>\n    );\n  }\n\n  if (auth.isAuthenticated) {\n    return (\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n              Task Management App ({userRole})\n            </Typography>\n            <Button color=\"inherit\" onClick={() => auth.removeUser()}>\n              Sign Out\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Container sx={{ mt: 4 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            Welcome, {auth.user?.profile[\"cognito:username\"]}\n          </Typography>\n          <Grid container spacing={2}>\n            {isAdmin() && <AdminTaskCreation />}\n            <TaskList />\n          </Grid>\n          {error && (\n            <Typography color=\"error\" sx={{ mt: 2 }}>\n              {error}\n            </Typography>\n          )}\n          <Snackbar\n            open={showNotification}\n            autoHideDuration={6000}\n            onClose={() => setShowNotification(false)}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          >\n            <Alert \n              onClose={() => setShowNotification(false)} \n              severity=\"warning\" \n              sx={{ width: '100%' }}\n            >\n              {notificationMessage}\n            </Alert>\n          </Snackbar>\n        </Container>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            Task Management App\n          </Typography>\n          <Button color=\"inherit\" onClick={() => auth.signinRedirect()}>\n            Sign In\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Container sx={{ mt: 4 }}>\n        <Typography variant=\"h5\">Please sign in to manage tasks</Typography>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}