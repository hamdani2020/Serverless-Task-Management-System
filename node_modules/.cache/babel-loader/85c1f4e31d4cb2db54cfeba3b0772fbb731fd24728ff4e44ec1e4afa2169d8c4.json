{"ast":null,"code":"var _jsxFileName = \"/home/user/Task-Manager/task-manager-frontend/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Create a new React project and include this structure\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"https://your-api-gateway-url\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [tasks, setTasks] = useState([]);\n  const [form, setForm] = useState({\n    title: \"\",\n    description: \"\",\n    assignee: \"\",\n    deadline: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (token) {\n      fetchTasks();\n    }\n  }, [token]);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth`, {\n        username,\n        password\n      });\n      localStorage.setItem(\"token\", response.data.token);\n      setToken(response.data.token);\n    } catch (err) {\n      setError(\"Invalid username or password\");\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/tasks`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch tasks\");\n    }\n  };\n  const createTask = async () => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/tasks`, form, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks([...tasks, response.data]);\n      setForm({\n        title: \"\",\n        description: \"\",\n        assignee: \"\",\n        deadline: \"\"\n      });\n    } catch (err) {\n      setError(\"Failed to create task\");\n    }\n  };\n  const updateTask = async (taskId, status) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/tasks/${taskId}`, {\n        status\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setTasks(tasks.map(task => task.task_id === taskId ? response.data : task));\n    } catch (err) {\n      setError(\"Failed to update task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), !token ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: login,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n        form: form,\n        setForm: setForm,\n        onCreateTask: createTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onUpdateTask: updateTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OgOvcWWBw82aFHq7aGYiOQ9NBBI=\");\n_c = App;\nconst LoginForm = ({\n  onLogin,\n  error\n}) => {\n  _s2();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onLogin(username, password),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s2(LoginForm, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c2 = LoginForm;\nconst TaskForm = ({\n  form,\n  setForm,\n  onCreateTask\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Create Task\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    value: form.title,\n    onChange: e => setForm({\n      ...form,\n      title: e.target.value\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    placeholder: \"Description\",\n    value: form.description,\n    onChange: e => setForm({\n      ...form,\n      description: e.target.value\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Assignee\",\n    value: form.assignee,\n    onChange: e => setForm({\n      ...form,\n      assignee: e.target.value\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"date\",\n    value: form.deadline,\n    onChange: e => setForm({\n      ...form,\n      deadline: e.target.value\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onCreateTask,\n    children: \"Create Task\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 98,\n  columnNumber: 3\n}, this);\n_c3 = TaskForm;\nconst TaskList = ({\n  tasks,\n  onUpdateTask\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Task List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", task.status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Deadline: \", task.deadline]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onUpdateTask(task.task_id, \"COMPLETED\"),\n      children: \"Mark as Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, task.task_id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 7\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 127,\n  columnNumber: 3\n}, this);\n_c4 = TaskList;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"TaskForm\");\n$RefreshReg$(_c4, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","App","_s","token","setToken","localStorage","getItem","tasks","setTasks","form","setForm","title","description","assignee","deadline","error","setError","fetchTasks","login","username","password","response","post","setItem","data","err","get","headers","Authorization","createTask","updateTask","taskId","status","put","map","task","task_id","children","fileName","_jsxFileName","lineNumber","columnNumber","LoginForm","onLogin","TaskForm","onCreateTask","TaskList","onUpdateTask","_c","_s2","setUsername","setPassword","style","color","type","placeholder","value","onChange","e","target","onClick","_c2","_c3","_c4","$RefreshReg$"],"sources":["/home/user/Task-Manager/task-manager-frontend/src/App.js"],"sourcesContent":["// Create a new React project and include this structure\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst API_BASE_URL = \"https://your-api-gateway-url\";\n\nconst App = () => {\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n  const [tasks, setTasks] = useState([]);\n  const [form, setForm] = useState({ title: \"\", description: \"\", assignee: \"\", deadline: \"\" });\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (token) {\n      fetchTasks();\n    }\n  }, [token]);\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth`, { username, password });\n      localStorage.setItem(\"token\", response.data.token);\n      setToken(response.data.token);\n    } catch (err) {\n      setError(\"Invalid username or password\");\n    }\n  };\n\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/tasks`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setTasks(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch tasks\");\n    }\n  };\n\n  const createTask = async () => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/tasks`, form, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setTasks([...tasks, response.data]);\n      setForm({ title: \"\", description: \"\", assignee: \"\", deadline: \"\" });\n    } catch (err) {\n      setError(\"Failed to create task\");\n    }\n  };\n\n  const updateTask = async (taskId, status) => {\n    try {\n      const response = await axios.put(\n        `${API_BASE_URL}/tasks/${taskId}`,\n        { status },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      setTasks(tasks.map((task) => (task.task_id === taskId ? response.data : task)));\n    } catch (err) {\n      setError(\"Failed to update task\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Task Management System</h1>\n      {!token ? (\n        <LoginForm onLogin={login} error={error} />\n      ) : (\n        <>\n          <TaskForm form={form} setForm={setForm} onCreateTask={createTask} />\n          <TaskList tasks={tasks} onUpdateTask={updateTask} />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst LoginForm = ({ onLogin, error }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <div>\n      <h2>Login</h2>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <button onClick={() => onLogin(username, password)}>Login</button>\n    </div>\n  );\n};\n\nconst TaskForm = ({ form, setForm, onCreateTask }) => (\n  <div>\n    <h2>Create Task</h2>\n    <input\n      type=\"text\"\n      placeholder=\"Title\"\n      value={form.title}\n      onChange={(e) => setForm({ ...form, title: e.target.value })}\n    />\n    <textarea\n      placeholder=\"Description\"\n      value={form.description}\n      onChange={(e) => setForm({ ...form, description: e.target.value })}\n    />\n    <input\n      type=\"text\"\n      placeholder=\"Assignee\"\n      value={form.assignee}\n      onChange={(e) => setForm({ ...form, assignee: e.target.value })}\n    />\n    <input\n      type=\"date\"\n      value={form.deadline}\n      onChange={(e) => setForm({ ...form, deadline: e.target.value })}\n    />\n    <button onClick={onCreateTask}>Create Task</button>\n  </div>\n);\n\nconst TaskList = ({ tasks, onUpdateTask }) => (\n  <div>\n    <h2>Task List</h2>\n    {tasks.map((task) => (\n      <div key={task.task_id}>\n        <h3>{task.title}</h3>\n        <p>{task.description}</p>\n        <p>Status: {task.status}</p>\n        <p>Deadline: {task.deadline}</p>\n        <button onClick={() => onUpdateTask(task.task_id, \"COMPLETED\")}>Mark as Completed</button>\n      </div>\n    ))}\n  </div>\n);\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}