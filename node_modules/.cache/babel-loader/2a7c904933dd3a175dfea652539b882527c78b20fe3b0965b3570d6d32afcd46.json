{"ast":null,"code":"var _jsxFileName = \"/home/user/Task-Manager/task-manager-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskForm from './components/TaskForm.js';\nimport { useAuth } from \"react-oidc-context\";\nimport { AppBar, Toolbar, Typography, Button, Container, TextField, Grid, Card, CardContent, CardActions, Select, MenuItem, FormControl, InputLabel } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const auth = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    assignee: \"\",\n    deadline: \"\",\n    status: \"PENDING\"\n  });\n  const [error, setError] = useState(\"\");\n  const [teamMembers, setTeamMembers] = useState([]);\n  const API_URLS = {\n    fetchTask: \"https://71aos5nio2.execute-api.eu-west-1.amazonaws.com/getTask\",\n    createTask: \"https://plaaw9qjn7.execute-api.eu-west-1.amazonaws.com/createTask\",\n    updateTask: \"https://rlyzlu0dl0.execute-api.eu-west-1.amazonaws.com/updateTask\",\n    deleteTask: \"https://1b4916boze.execute-api.eu-west-1.amazonaws.com/delete\",\n    fetchUsers: \"https://your-api-url/getUsers\"\n  };\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      fetchUserRole();\n      fetchTasks();\n      if (isAdmin()) {\n        fetchUsers();\n      }\n    }\n  }, [auth.isAuthenticated]);\n  const fetchUserRole = () => {\n    var _auth$user;\n    // In a real application, the username and roles would typically come from your authentication system.\n    const username = (_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.profile[\"cognito:username\"];\n    if (username === \"admin\") {\n      // Assign 'ADMIN' role if username matches 'admin'\n      setUserRole(\"ADMIN\");\n      console.log(\"Logged in as admin\");\n    } else {\n      // Default to 'MEMBER' role otherwise\n      setUserRole(\"MEMBER\");\n      console.log(\"Logged in as a normal user without admin privileges\");\n    }\n  };\n  const titleRef = useRef();\n  const descriptionRef = useRef();\n  const assigneeRef = useRef();\n  const deadlineRef = useRef();\n  const isAdmin = () => userRole === 'ADMIN';\n  const fetchUsers = async () => {\n    try {\n      var _auth$user2;\n      const response = await axios.get(API_URLS.fetchUsers, {\n        headers: {\n          Authorization: `Bearer ${(_auth$user2 = auth.user) === null || _auth$user2 === void 0 ? void 0 : _auth$user2.access_token}`\n        }\n      });\n      setUsers(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch users\");\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      var _auth$user3, _auth$user4, _auth$user5;\n      const token = (_auth$user3 = auth.user) === null || _auth$user3 === void 0 ? void 0 : _auth$user3.access_token;\n      const userEmail = (_auth$user4 = auth.user) === null || _auth$user4 === void 0 ? void 0 : _auth$user4.profile.email; // Optional for error tracking/logging\n      const userID = (_auth$user5 = auth.user) === null || _auth$user5 === void 0 ? void 0 : _auth$user5.profile.id; // Use userID to uniquely identify the user\n      const userRole = isAdmin() ? \"ADMIN\" : \"MEMBER\";\n      const url = new URL(API_URLS.fetchTask);\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"User-Email\": userEmail,\n          \"User-Role\": userRole,\n          \"User-ID\": userID // Added User-ID header for MEMBER filtering\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const data = await response.json();\n      setTasks(data); // Set tasks in state\n    } catch (err) {\n      console.error(err);\n      setError(err.message || \"Failed to fetch tasks\");\n    }\n  };\n  const fetchTeamMembers = async () => {\n    try {\n      const response = await fetch('https://vwjwg4yut4.execute-api.eu-west-1.amazonaws.com/user');\n      if (!response.ok) {\n        throw new Error('Failed to fetch team members');\n      }\n      const data = await response.json();\n      console.log(data);\n      console.log(data.users);\n      const members = data.users.filter(user => user);\n      console.log({\n        members\n      });\n      setTeamMembers(members);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleCreateTask = async () => {\n    if (!isAdmin()) return;\n    const newTask = {\n      title: titleRef.current.value,\n      description: descriptionRef.current.value,\n      assignee: assigneeRef.current.value,\n      deadline: deadlineRef.current.value,\n      status: \"PENDING\"\n    };\n    try {\n      const response = await axios.post(API_URLS.createTask, newTask, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n          //Authorization: `Bearer ${auth.user?.access_token}`,\n        }\n      });\n      setError(\"\"); // Clear error on success\n      console.log(\"Task created:\", response.data); // Handle success\n    } catch (err) {\n      setError(\"Failed to create task\");\n    }\n  };\n  const handleUpdateTask = async (taskId, newStatus) => {\n    if (!isAdmin()) return;\n    try {\n      const response = await axios.put(API_URLS.updateTask,\n      // Use TaskID query parameter\n      {\n        status: newStatus,\n        id: taskId\n      },\n      // Payload matches Lambda's expected structure\n      {\n        headers: {\n          \"Content-Type\": \"application/json\"\n          //Authorization: `Bearer ${auth.user?.access_token}`\n        }\n      });\n      const updatedTask = response.data;\n      console.log(updatedTask);\n\n      // Update task state with the new values\n      setTasks(prevTasks => prevTasks.map(task => task.TaskID === taskId ? {\n        ...task,\n        ...updatedTask\n      } : task));\n      console.log(\"Task successfully updated:\", updatedTask);\n    } catch (err) {\n      console.error(\"Failed to update task:\", err.message);\n      setError(\"Failed to update task\");\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    if (!isAdmin()) return;\n    try {\n      await axios.delete(API_URLS.deleteTask, {\n        data: {\n          TaskID: taskId\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setTasks(prevTasks => prevTasks.filter(task => task.TaskID !== taskId));\n    } catch (err) {\n      console.error(err); // Log the error for debugging\n      setError(\"Failed to delete task\");\n    }\n  };\n  useEffect(() => {\n    fetchTeamMembers();\n  }, []);\n  const AdminTaskCreation = () => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Title\",\n      inputRef: titleRef,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Description\",\n      inputRef: descriptionRef,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      margin: \"normal\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Assignee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        inputRef: assigneeRef,\n        defaultValue: \"\",\n        children: teamMembers.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: user.email,\n          children: user.email\n        }, user.email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      type: \"date\",\n      label: \"Deadline\",\n      inputRef: deadlineRef,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleCreateTask,\n      sx: {\n        mt: 2\n      },\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 3\n  }, this);\n  const TaskList = () => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: isAdmin() ? 6 : 12,\n    sx: !isAdmin() ? {\n      marginTop: 4\n    } : {},\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    justifyContent: isAdmin() ? \"flex-start\" : \"flex-start\",\n    wrap: \"wrap\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: isAdmin() ? \"All Tasks\" : \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 2,\n        mr: isAdmin() ? 9 : 2,\n        minWidth: 275\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Status: \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Deadline: \", task.deadline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), isAdmin() && /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Assignee: \", task.assignee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), isAdmin() && /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: () => handleUpdateTask(task.TaskID, \"COMPLETED\"),\n          children: \"Mark as Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"warning\",\n          onClick: () => handleUpdateTask(task.TaskID, \"IN_PROGRESS\"),\n          children: \"Mark as In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: () => handleDeleteTask(task.TaskID),\n          children: \"Delete Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }, this)]\n    }, task.TaskID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 3\n  }, this);\n  if (auth.isLoading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 12\n    }, this);\n  }\n  if (auth.error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      color: \"error\",\n      children: [\"Encountering error... \", auth.error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this);\n  }\n  if (auth.isAuthenticated) {\n    var _auth$user6;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1\n            },\n            children: [\"Task Management App (\", userRole, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: () => auth.removeUser(),\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: [\"Welcome, \", (_auth$user6 = auth.user) === null || _auth$user6 === void 0 ? void 0 : _auth$user6.profile.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isAdmin() && /*#__PURE__*/_jsxDEV(AdminTaskCreation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          sx: {\n            mt: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Task Management App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => auth.signinRedirect(),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Please sign in to manage tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lmCWDfzpoE0WcHdPfVBt7gVUSpk=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","TaskForm","useAuth","AppBar","Toolbar","Typography","Button","Container","TextField","Grid","Card","CardContent","CardActions","Select","MenuItem","FormControl","InputLabel","jsxDEV","_jsxDEV","App","_s","auth","tasks","setTasks","users","setUsers","userRole","setUserRole","newTask","setNewTask","title","description","assignee","deadline","status","error","setError","teamMembers","setTeamMembers","API_URLS","fetchTask","createTask","updateTask","deleteTask","fetchUsers","isAuthenticated","fetchUserRole","fetchTasks","isAdmin","_auth$user","username","user","profile","console","log","titleRef","descriptionRef","assigneeRef","deadlineRef","_auth$user2","response","get","headers","Authorization","access_token","data","err","_auth$user3","_auth$user4","_auth$user5","token","userEmail","email","userID","id","url","URL","fetch","ok","Error","json","message","fetchTeamMembers","members","filter","handleCreateTask","current","value","post","handleUpdateTask","taskId","newStatus","put","updatedTask","prevTasks","map","task","TaskID","handleDeleteTask","delete","AdminTaskCreation","item","xs","md","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","inputRef","margin","defaultValue","type","InputLabelProps","shrink","color","onClick","sx","mt","TaskList","marginTop","container","direction","spacing","justifyContent","wrap","gutterBottom","length","mb","mr","minWidth","isLoading","_auth$user6","position","flexGrow","removeUser","signinRedirect","_c","$RefreshReg$"],"sources":["/home/user/Task-Manager/task-manager-frontend/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskForm from './components/TaskForm.js'\nimport { useAuth } from \"react-oidc-context\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Container,\n  TextField,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n} from \"@mui/material\";\n\nfunction App() {\n  const auth = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    assignee: \"\",\n    deadline: \"\",\n    status: \"PENDING\"\n  });\n  const [error, setError] = useState(\"\");\n  const [teamMembers, setTeamMembers] = useState([]);\n\n  const API_URLS = {\n    fetchTask: \"https://71aos5nio2.execute-api.eu-west-1.amazonaws.com/getTask\",\n    createTask: \"https://plaaw9qjn7.execute-api.eu-west-1.amazonaws.com/createTask\",\n    updateTask: \"https://rlyzlu0dl0.execute-api.eu-west-1.amazonaws.com/updateTask\",\n    deleteTask: \"https://1b4916boze.execute-api.eu-west-1.amazonaws.com/delete\",\n    fetchUsers: \"https://your-api-url/getUsers\"\n  };\n\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      fetchUserRole();\n      fetchTasks();\n      if (isAdmin()) {\n        fetchUsers();\n      }\n    }\n  }, [auth.isAuthenticated]);\n\n  const fetchUserRole = () => {\n  // In a real application, the username and roles would typically come from your authentication system.\n  const username = auth.user?.profile[\"cognito:username\"];\n  \n  if (username === \"admin\") {\n    // Assign 'ADMIN' role if username matches 'admin'\n    setUserRole(\"ADMIN\");\n    console.log(\"Logged in as admin\");\n  } else {\n    // Default to 'MEMBER' role otherwise\n    setUserRole(\"MEMBER\");\n    console.log(\"Logged in as a normal user without admin privileges\");\n  }\n};\n\n\n\n  const titleRef = useRef();\n  const descriptionRef = useRef();\n  const assigneeRef = useRef();\n  const deadlineRef = useRef();\n\nconst isAdmin = () => userRole === 'ADMIN';\n\nconst fetchUsers = async () => {\n  try {\n    const response = await axios.get(API_URLS.fetchUsers, {\n      headers: { Authorization: `Bearer ${auth.user?.access_token}` },\n    });\n    setUsers(response.data);\n  } catch (err) {\n    setError(\"Failed to fetch users\");\n  }\n};\n\n  const fetchTasks = async () => {\n  try {\n    const token = auth.user?.access_token;\n    const userEmail = auth.user?.profile.email; // Optional for error tracking/logging\n    const userID = auth.user?.profile.id; // Use userID to uniquely identify the user\n    const userRole = isAdmin() ? \"ADMIN\" : \"MEMBER\";\n\n    const url = new URL(API_URLS.fetchTask);\n\n    const response = await fetch(url, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"User-Email\": userEmail,\n        \"User-Role\": userRole,\n        \"User-ID\": userID, // Added User-ID header for MEMBER filtering\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    setTasks(data); // Set tasks in state\n  } catch (err) {\n    console.error(err);\n    setError(err.message || \"Failed to fetch tasks\");\n  }\n};\n\n\nconst fetchTeamMembers = async () => {\n        try {\n            const response = await fetch('https://vwjwg4yut4.execute-api.eu-west-1.amazonaws.com/user');\n            if (!response.ok) {\n                throw new Error('Failed to fetch team members');\n            }\n            const data = await response.json();\n            console.log(data)\n            console.log(data.users)\n            const members = data.users.filter((user) => user);\n            console.log({members})\n            setTeamMembers(members);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n   const handleCreateTask = async () => {\n    if (!isAdmin()) return;\n\n    const newTask = {\n      title: titleRef.current.value,\n      description: descriptionRef.current.value,\n      assignee: assigneeRef.current.value,\n      deadline: deadlineRef.current.value,\n      status: \"PENDING\",\n    };\n\n    try {\n      const response = await axios.post(API_URLS.createTask, newTask, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          //Authorization: `Bearer ${auth.user?.access_token}`,\n        },\n      });\n      setError(\"\"); // Clear error on success\n      console.log(\"Task created:\", response.data); // Handle success\n    } catch (err) {\n      setError(\"Failed to create task\");\n    }\n  };\n\n  const handleUpdateTask = async (taskId, newStatus) => {\n  if (!isAdmin()) return;\n\n  try {\n    const response = await axios.put(\n      API_URLS.updateTask, // Use TaskID query parameter\n      { status: newStatus,id:taskId }, // Payload matches Lambda's expected structure\n      {\n        headers: { \n          \"Content-Type\": \"application/json\",\n          //Authorization: `Bearer ${auth.user?.access_token}`\n        }\n      }\n    );\n\n    const updatedTask = response.data;\n      console.log(updatedTask)\n\n    // Update task state with the new values\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.TaskID === taskId ? { ...task, ...updatedTask } : task\n      )\n    );\n\n    console.log(\"Task successfully updated:\", updatedTask);\n  } catch (err) {\n    console.error(\"Failed to update task:\", err.message);\n    setError(\"Failed to update task\");\n  }\n};\n\n\n  const handleDeleteTask = async (taskId) => {\n  if (!isAdmin()) return;\n  try {\n    await axios.delete(API_URLS.deleteTask, {\n        data:{TaskID:taskId},\n        headers: { \"Content-Type\": \"application/json\" },\n    });\n    setTasks((prevTasks) => prevTasks.filter((task) => task.TaskID !== taskId));\n  } catch (err) {\n    console.error(err);  // Log the error for debugging\n    setError(\"Failed to delete task\");\n  }\n};\n\n    useEffect(() => {\n        fetchTeamMembers();\n    }, []);\n\n  const AdminTaskCreation = () => (\n    \n  <Grid item xs={12} md={6}>\n      <Typography variant=\"h5\">Create Task</Typography>\n\n      {/* Title Input */}\n      <TextField\n        fullWidth\n        label=\"Title\"\n        inputRef={titleRef}\n        margin=\"normal\"\n      />\n\n      {/* Description Input */}\n      <TextField\n        fullWidth\n        label=\"Description\"\n        inputRef={descriptionRef}\n        margin=\"normal\"\n      />\n\n      {/* Assignee Select */}\n      <FormControl fullWidth margin=\"normal\">\n        <InputLabel>Assignee</InputLabel>\n        <Select\n          inputRef={assigneeRef}\n          defaultValue=\"\"\n        >\n          {teamMembers.map((user) => (\n            <MenuItem key={user.email} value={user.email}>\n              {user.email}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      {/* Deadline Input */}\n      <TextField\n        fullWidth\n        type=\"date\"\n        label=\"Deadline\"\n        inputRef={deadlineRef}\n        margin=\"normal\"\n        InputLabelProps={{ shrink: true }}\n      />\n\n      {/* Create Task Button */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleCreateTask}\n        sx={{ mt: 2 }}\n      >\n        Create Task\n      </Button>\n\n      {/* Error Message */}\n      {error && <Typography color=\"error\">{error}</Typography>}\n    </Grid>\n);\n\n\n  const TaskList = () => (\n  <Grid\n    item\n    xs={12}\n    md={isAdmin() ? 6 : 12}\n    sx={!isAdmin() ? { marginTop: 4 }: {}}\n    container\n    direction=\"row\"\n    spacing={2}\n    justifyContent={isAdmin() ? \"flex-start\" : \"flex-start\"}\n    wrap=\"wrap\"\n  >\n    <Typography variant=\"h5\" gutterBottom>\n      {isAdmin() ? \"All Tasks\" : \"My Tasks\"}\n    </Typography>\n    {tasks.length === 0 ? (\n      <Typography>No tasks available</Typography>\n    ) : (\n      tasks.map((task) => (\n        <Card\n          key={task.TaskID}\n          sx={{ mb: 2, mr: isAdmin() ? 9 : 2, minWidth: 275 }}\n        >\n          <CardContent>\n            <Typography variant=\"h6\">{task.title}</Typography>\n            <Typography>{task.description}</Typography>\n            <Typography>Status: {task.status}</Typography>\n            <Typography>Deadline: {task.deadline}</Typography>\n            {isAdmin() && <Typography>Assignee: {task.assignee}</Typography>}\n          </CardContent>\n          {isAdmin() && (\n            <CardActions>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => handleUpdateTask(task.TaskID, \"COMPLETED\")}\n              >\n                Mark as Completed\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"warning\"\n                onClick={() => handleUpdateTask(task.TaskID, \"IN_PROGRESS\")}\n              >\n                Mark as In Progress\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => handleDeleteTask(task.TaskID)}\n              >\n                Delete Task\n              </Button>\n            </CardActions>\n          )}\n        </Card>\n      ))\n    )}\n  </Grid>\n);\n\n  if (auth.isLoading) {\n    return <Typography variant=\"h6\">Loading...</Typography>;\n  }\n\n  if (auth.error) {\n    return (\n      <Typography variant=\"h6\" color=\"error\">\n        Encountering error... {auth.error.message}\n      </Typography>\n    );\n  }\n\n  if (auth.isAuthenticated) {\n    return (\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n              Task Management App ({userRole})\n            </Typography>\n            <Button color=\"inherit\" onClick={() => auth.removeUser()}>\n              Sign Out\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Container sx={{ mt: 4 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            Welcome, {auth.user?.profile.email}\n          </Typography>\n          <Grid container spacing={2}>\n            {isAdmin() && <AdminTaskCreation />}\n            <TaskList />\n          </Grid>\n          {error && (\n            <Typography color=\"error\" sx={{ mt: 2 }}>\n              {error}\n            </Typography>\n          )}\n        </Container>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            Task Management App\n          </Typography>\n          <Button color=\"inherit\" onClick={() => auth.signinRedirect()}>\n            Sign In\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Container sx={{ mt: 4 }}>\n        <Typography variant=\"h5\">Please sign in to manage tasks</Typography>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}