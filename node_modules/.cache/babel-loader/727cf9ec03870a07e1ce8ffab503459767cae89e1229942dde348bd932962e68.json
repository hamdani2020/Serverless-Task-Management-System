{"ast":null,"code":"// src/utils/Logger.ts\nvar nopLogger = {\n  debug: () => void 0,\n  info: () => void 0,\n  warn: () => void 0,\n  error: () => void 0\n};\nvar level;\nvar logger;\nvar Log = /* @__PURE__ */(Log2 => {\n  Log2[Log2[\"NONE\"] = 0] = \"NONE\";\n  Log2[Log2[\"ERROR\"] = 1] = \"ERROR\";\n  Log2[Log2[\"WARN\"] = 2] = \"WARN\";\n  Log2[Log2[\"INFO\"] = 3] = \"INFO\";\n  Log2[Log2[\"DEBUG\"] = 4] = \"DEBUG\";\n  return Log2;\n})(Log || {});\n(Log2 => {\n  function reset() {\n    level = 3 /* INFO */;\n    logger = nopLogger;\n  }\n  Log2.reset = reset;\n  function setLevel(value) {\n    if (!(0 /* NONE */ <= value && value <= 4 /* DEBUG */)) {\n      throw new Error(\"Invalid log level\");\n    }\n    level = value;\n  }\n  Log2.setLevel = setLevel;\n  function setLogger(value) {\n    logger = value;\n  }\n  Log2.setLogger = setLogger;\n})(Log || (Log = {}));\nvar Logger = class _Logger {\n  constructor(_name) {\n    this._name = _name;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  debug(...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  info(...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  warn(...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  error(...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n  throw(err) {\n    this.error(err);\n    throw err;\n  }\n  create(method) {\n    const methodLogger = Object.create(this);\n    methodLogger._method = method;\n    methodLogger.debug(\"begin\");\n    return methodLogger;\n  }\n  static createStatic(name, staticMethod) {\n    const staticLogger = new _Logger(`${name}.${staticMethod}`);\n    staticLogger.debug(\"begin\");\n    return staticLogger;\n  }\n  static _format(name, method) {\n    const prefix = `[${name}]`;\n    return method ? `${prefix} ${method}:` : prefix;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  // helpers for static class methods\n  static debug(name, ...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(name), ...args);\n    }\n  }\n  static info(name, ...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(name), ...args);\n    }\n  }\n  static warn(name, ...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(name), ...args);\n    }\n  }\n  static error(name, ...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(name), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n};\nLog.reset();\n\n// src/utils/JwtUtils.ts\nimport { jwtDecode } from \"jwt-decode\";\nvar JwtUtils = class {\n  // IMPORTANT: doesn't validate the token\n  static decode(token) {\n    try {\n      return jwtDecode(token);\n    } catch (err) {\n      Logger.error(\"JwtUtils.decode\", err);\n      throw err;\n    }\n  }\n  static async generateSignedJwt(header, payload, privateKey) {\n    const encodedHeader = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(header)));\n    const encodedPayload = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(payload)));\n    const encodedToken = `${encodedHeader}.${encodedPayload}`;\n    const signature = await window.crypto.subtle.sign({\n      name: \"ECDSA\",\n      hash: {\n        name: \"SHA-256\"\n      }\n    }, privateKey, new TextEncoder().encode(encodedToken));\n    const encodedSignature = CryptoUtils.encodeBase64Url(new Uint8Array(signature));\n    return `${encodedToken}.${encodedSignature}`;\n  }\n};\n\n// src/utils/CryptoUtils.ts\nvar UUID_V4_TEMPLATE = \"10000000-1000-4000-8000-100000000000\";\nvar toBase64 = val => btoa([...new Uint8Array(val)].map(chr => String.fromCharCode(chr)).join(\"\"));\nvar _CryptoUtils = class _CryptoUtils {\n  static _randomWord() {\n    const arr = new Uint32Array(1);\n    crypto.getRandomValues(arr);\n    return arr[0];\n  }\n  /**\n   * Generates RFC4122 version 4 guid\n   */\n  static generateUUIDv4() {\n    const uuid = UUID_V4_TEMPLATE.replace(/[018]/g, c => (+c ^ _CryptoUtils._randomWord() & 15 >> +c / 4).toString(16));\n    return uuid.replace(/-/g, \"\");\n  }\n  /**\n   * PKCE: Generate a code verifier\n   */\n  static generateCodeVerifier() {\n    return _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4();\n  }\n  /**\n   * PKCE: Generate a code challenge\n   */\n  static async generateCodeChallenge(code_verifier) {\n    if (!crypto.subtle) {\n      throw new Error(\"Crypto.subtle is available only in secure contexts (HTTPS).\");\n    }\n    try {\n      const encoder = new TextEncoder();\n      const data = encoder.encode(code_verifier);\n      const hashed = await crypto.subtle.digest(\"SHA-256\", data);\n      return toBase64(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n    } catch (err) {\n      Logger.error(\"CryptoUtils.generateCodeChallenge\", err);\n      throw err;\n    }\n  }\n  /**\n   * Generates a base64-encoded string for a basic auth header\n   */\n  static generateBasicAuth(client_id, client_secret) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode([client_id, client_secret].join(\":\"));\n    return toBase64(data);\n  }\n  /**\n   * Generates a hash of a string using a given algorithm\n   * @param alg\n   * @param message\n   */\n  static async hash(alg, message) {\n    const msgUint8 = new TextEncoder().encode(message);\n    const hashBuffer = await crypto.subtle.digest(alg, msgUint8);\n    return new Uint8Array(hashBuffer);\n  }\n  /**\n   * Generates a rfc7638 compliant jwk thumbprint\n   * @param jwk\n   */\n  static async customCalculateJwkThumbprint(jwk) {\n    let jsonObject;\n    switch (jwk.kty) {\n      case \"RSA\":\n        jsonObject = {\n          \"e\": jwk.e,\n          \"kty\": jwk.kty,\n          \"n\": jwk.n\n        };\n        break;\n      case \"EC\":\n        jsonObject = {\n          \"crv\": jwk.crv,\n          \"kty\": jwk.kty,\n          \"x\": jwk.x,\n          \"y\": jwk.y\n        };\n        break;\n      case \"OKP\":\n        jsonObject = {\n          \"crv\": jwk.crv,\n          \"kty\": jwk.kty,\n          \"x\": jwk.x\n        };\n        break;\n      case \"oct\":\n        jsonObject = {\n          \"crv\": jwk.k,\n          \"kty\": jwk.kty\n        };\n        break;\n      default:\n        throw new Error(\"Unknown jwk type\");\n    }\n    const utf8encodedAndHashed = await _CryptoUtils.hash(\"SHA-256\", JSON.stringify(jsonObject));\n    return _CryptoUtils.encodeBase64Url(utf8encodedAndHashed);\n  }\n  static async generateDPoPProof({\n    url,\n    accessToken,\n    httpMethod,\n    keyPair,\n    nonce\n  }) {\n    let hashedToken;\n    let encodedHash;\n    const payload = {\n      \"jti\": window.crypto.randomUUID(),\n      \"htm\": httpMethod != null ? httpMethod : \"GET\",\n      \"htu\": url,\n      \"iat\": Math.floor(Date.now() / 1e3)\n    };\n    if (accessToken) {\n      hashedToken = await _CryptoUtils.hash(\"SHA-256\", accessToken);\n      encodedHash = _CryptoUtils.encodeBase64Url(hashedToken);\n      payload.ath = encodedHash;\n    }\n    if (nonce) {\n      payload.nonce = nonce;\n    }\n    try {\n      const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n      const header = {\n        \"alg\": \"ES256\",\n        \"typ\": \"dpop+jwt\",\n        \"jwk\": {\n          \"crv\": publicJwk.crv,\n          \"kty\": publicJwk.kty,\n          \"x\": publicJwk.x,\n          \"y\": publicJwk.y\n        }\n      };\n      return await JwtUtils.generateSignedJwt(header, payload, keyPair.privateKey);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw new Error(`Error exporting dpop public key: ${err.message}`);\n      } else {\n        throw err;\n      }\n    }\n  }\n  static async generateDPoPJkt(keyPair) {\n    try {\n      const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n      return await _CryptoUtils.customCalculateJwkThumbprint(publicJwk);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw new Error(`Could not retrieve dpop keys from storage: ${err.message}`);\n      } else {\n        throw err;\n      }\n    }\n  }\n  static async generateDPoPKeys() {\n    return await window.crypto.subtle.generateKey({\n      name: \"ECDSA\",\n      namedCurve: \"P-256\"\n    }, false, [\"sign\", \"verify\"]);\n  }\n};\n/**\n * Generates a base64url encoded string\n */\n_CryptoUtils.encodeBase64Url = input => {\n  return toBase64(input).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n};\nvar CryptoUtils = _CryptoUtils;\n\n// src/utils/Event.ts\nvar Event = class {\n  constructor(_name) {\n    this._name = _name;\n    this._callbacks = [];\n    this._logger = new Logger(`Event('${this._name}')`);\n  }\n  addHandler(cb) {\n    this._callbacks.push(cb);\n    return () => this.removeHandler(cb);\n  }\n  removeHandler(cb) {\n    const idx = this._callbacks.lastIndexOf(cb);\n    if (idx >= 0) {\n      this._callbacks.splice(idx, 1);\n    }\n  }\n  async raise(...ev) {\n    this._logger.debug(\"raise:\", ...ev);\n    for (const cb of this._callbacks) {\n      await cb(...ev);\n    }\n  }\n};\n\n// src/utils/PopupUtils.ts\nvar PopupUtils = class {\n  /**\n   * Populates a map of window features with a placement centered in front of\n   * the current window. If no explicit width is given, a default value is\n   * binned into [800, 720, 600, 480, 360] based on the current window's width.\n   */\n  static center({\n    ...features\n  }) {\n    var _a, _b, _c;\n    if (features.width == null) features.width = (_a = [800, 720, 600, 480].find(width => width <= window.outerWidth / 1.618)) != null ? _a : 360;\n    (_b = features.left) != null ? _b : features.left = Math.max(0, Math.round(window.screenX + (window.outerWidth - features.width) / 2));\n    if (features.height != null) (_c = features.top) != null ? _c : features.top = Math.max(0, Math.round(window.screenY + (window.outerHeight - features.height) / 2));\n    return features;\n  }\n  static serialize(features) {\n    return Object.entries(features).filter(([, value]) => value != null).map(([key, value]) => `${key}=${typeof value !== \"boolean\" ? value : value ? \"yes\" : \"no\"}`).join(\",\");\n  }\n};\n\n// src/utils/Timer.ts\nvar Timer = class _Timer extends Event {\n  constructor() {\n    super(...arguments);\n    this._logger = new Logger(`Timer('${this._name}')`);\n    this._timerHandle = null;\n    this._expiration = 0;\n    this._callback = () => {\n      const diff = this._expiration - _Timer.getEpochTime();\n      this._logger.debug(\"timer completes in\", diff);\n      if (this._expiration <= _Timer.getEpochTime()) {\n        this.cancel();\n        void super.raise();\n      }\n    };\n  }\n  // get the time\n  static getEpochTime() {\n    return Math.floor(Date.now() / 1e3);\n  }\n  init(durationInSeconds) {\n    const logger2 = this._logger.create(\"init\");\n    durationInSeconds = Math.max(Math.floor(durationInSeconds), 1);\n    const expiration = _Timer.getEpochTime() + durationInSeconds;\n    if (this.expiration === expiration && this._timerHandle) {\n      logger2.debug(\"skipping since already initialized for expiration at\", this.expiration);\n      return;\n    }\n    this.cancel();\n    logger2.debug(\"using duration\", durationInSeconds);\n    this._expiration = expiration;\n    const timerDurationInSeconds = Math.min(durationInSeconds, 5);\n    this._timerHandle = setInterval(this._callback, timerDurationInSeconds * 1e3);\n  }\n  get expiration() {\n    return this._expiration;\n  }\n  cancel() {\n    this._logger.create(\"cancel\");\n    if (this._timerHandle) {\n      clearInterval(this._timerHandle);\n      this._timerHandle = null;\n    }\n  }\n};\n\n// src/utils/UrlUtils.ts\nvar UrlUtils = class {\n  static readParams(url, responseMode = \"query\") {\n    if (!url) throw new TypeError(\"Invalid URL\");\n    const parsedUrl = new URL(url, \"http://127.0.0.1\");\n    const params = parsedUrl[responseMode === \"fragment\" ? \"hash\" : \"search\"];\n    return new URLSearchParams(params.slice(1));\n  }\n};\nvar URL_STATE_DELIMITER = \";\";\n\n// src/errors/ErrorResponse.ts\nvar ErrorResponse = class extends Error {\n  constructor(args, form) {\n    var _a, _b, _c;\n    super(args.error_description || args.error || \"\");\n    this.form = form;\n    /** Marker to detect class: \"ErrorResponse\" */\n    this.name = \"ErrorResponse\";\n    if (!args.error) {\n      Logger.error(\"ErrorResponse\", \"No error passed\");\n      throw new Error(\"No error passed\");\n    }\n    this.error = args.error;\n    this.error_description = (_a = args.error_description) != null ? _a : null;\n    this.error_uri = (_b = args.error_uri) != null ? _b : null;\n    this.state = args.userState;\n    this.session_state = (_c = args.session_state) != null ? _c : null;\n    this.url_state = args.url_state;\n  }\n};\n\n// src/errors/ErrorTimeout.ts\nvar ErrorTimeout = class extends Error {\n  constructor(message) {\n    super(message);\n    /** Marker to detect class: \"ErrorTimeout\" */\n    this.name = \"ErrorTimeout\";\n  }\n};\n\n// src/AccessTokenEvents.ts\nvar AccessTokenEvents = class {\n  constructor(args) {\n    this._logger = new Logger(\"AccessTokenEvents\");\n    this._expiringTimer = new Timer(\"Access token expiring\");\n    this._expiredTimer = new Timer(\"Access token expired\");\n    this._expiringNotificationTimeInSeconds = args.expiringNotificationTimeInSeconds;\n  }\n  load(container) {\n    const logger2 = this._logger.create(\"load\");\n    if (container.access_token && container.expires_in !== void 0) {\n      const duration = container.expires_in;\n      logger2.debug(\"access token present, remaining duration:\", duration);\n      if (duration > 0) {\n        let expiring = duration - this._expiringNotificationTimeInSeconds;\n        if (expiring <= 0) {\n          expiring = 1;\n        }\n        logger2.debug(\"registering expiring timer, raising in\", expiring, \"seconds\");\n        this._expiringTimer.init(expiring);\n      } else {\n        logger2.debug(\"canceling existing expiring timer because we're past expiration.\");\n        this._expiringTimer.cancel();\n      }\n      const expired = duration + 1;\n      logger2.debug(\"registering expired timer, raising in\", expired, \"seconds\");\n      this._expiredTimer.init(expired);\n    } else {\n      this._expiringTimer.cancel();\n      this._expiredTimer.cancel();\n    }\n  }\n  unload() {\n    this._logger.debug(\"unload: canceling existing access token timers\");\n    this._expiringTimer.cancel();\n    this._expiredTimer.cancel();\n  }\n  /**\n   * Add callback: Raised prior to the access token expiring.\n   */\n  addAccessTokenExpiring(cb) {\n    return this._expiringTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised prior to the access token expiring.\n   */\n  removeAccessTokenExpiring(cb) {\n    this._expiringTimer.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised after the access token has expired.\n   */\n  addAccessTokenExpired(cb) {\n    return this._expiredTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised after the access token has expired.\n   */\n  removeAccessTokenExpired(cb) {\n    this._expiredTimer.removeHandler(cb);\n  }\n};\n\n// src/CheckSessionIFrame.ts\nvar CheckSessionIFrame = class {\n  constructor(_callback, _client_id, url, _intervalInSeconds, _stopOnError) {\n    this._callback = _callback;\n    this._client_id = _client_id;\n    this._intervalInSeconds = _intervalInSeconds;\n    this._stopOnError = _stopOnError;\n    this._logger = new Logger(\"CheckSessionIFrame\");\n    this._timer = null;\n    this._session_state = null;\n    this._message = e => {\n      if (e.origin === this._frame_origin && e.source === this._frame.contentWindow) {\n        if (e.data === \"error\") {\n          this._logger.error(\"error message from check session op iframe\");\n          if (this._stopOnError) {\n            this.stop();\n          }\n        } else if (e.data === \"changed\") {\n          this._logger.debug(\"changed message from check session op iframe\");\n          this.stop();\n          void this._callback();\n        } else {\n          this._logger.debug(e.data + \" message from check session op iframe\");\n        }\n      }\n    };\n    const parsedUrl = new URL(url);\n    this._frame_origin = parsedUrl.origin;\n    this._frame = window.document.createElement(\"iframe\");\n    this._frame.style.visibility = \"hidden\";\n    this._frame.style.position = \"fixed\";\n    this._frame.style.left = \"-1000px\";\n    this._frame.style.top = \"0\";\n    this._frame.width = \"0\";\n    this._frame.height = \"0\";\n    this._frame.src = parsedUrl.href;\n  }\n  load() {\n    return new Promise(resolve => {\n      this._frame.onload = () => {\n        resolve();\n      };\n      window.document.body.appendChild(this._frame);\n      window.addEventListener(\"message\", this._message, false);\n    });\n  }\n  start(session_state) {\n    if (this._session_state === session_state) {\n      return;\n    }\n    this._logger.create(\"start\");\n    this.stop();\n    this._session_state = session_state;\n    const send = () => {\n      if (!this._frame.contentWindow || !this._session_state) {\n        return;\n      }\n      this._frame.contentWindow.postMessage(this._client_id + \" \" + this._session_state, this._frame_origin);\n    };\n    send();\n    this._timer = setInterval(send, this._intervalInSeconds * 1e3);\n  }\n  stop() {\n    this._logger.create(\"stop\");\n    this._session_state = null;\n    if (this._timer) {\n      clearInterval(this._timer);\n      this._timer = null;\n    }\n  }\n};\n\n// src/InMemoryWebStorage.ts\nvar InMemoryWebStorage = class {\n  constructor() {\n    this._logger = new Logger(\"InMemoryWebStorage\");\n    this._data = {};\n  }\n  clear() {\n    this._logger.create(\"clear\");\n    this._data = {};\n  }\n  getItem(key) {\n    this._logger.create(`getItem('${key}')`);\n    return this._data[key];\n  }\n  setItem(key, value) {\n    this._logger.create(`setItem('${key}')`);\n    this._data[key] = value;\n  }\n  removeItem(key) {\n    this._logger.create(`removeItem('${key}')`);\n    delete this._data[key];\n  }\n  get length() {\n    return Object.getOwnPropertyNames(this._data).length;\n  }\n  key(index) {\n    return Object.getOwnPropertyNames(this._data)[index];\n  }\n};\n\n// src/errors/ErrorDPoPNonce.ts\nvar ErrorDPoPNonce = class extends Error {\n  constructor(nonce, message) {\n    super(message);\n    /** Marker to detect class: \"ErrorDPoPNonce\" */\n    this.name = \"ErrorDPoPNonce\";\n    this.nonce = nonce;\n  }\n};\n\n// src/JsonService.ts\nvar JsonService = class {\n  constructor(additionalContentTypes = [], _jwtHandler = null, _extraHeaders = {}) {\n    this._jwtHandler = _jwtHandler;\n    this._extraHeaders = _extraHeaders;\n    this._logger = new Logger(\"JsonService\");\n    this._contentTypes = [];\n    this._contentTypes.push(...additionalContentTypes, \"application/json\");\n    if (_jwtHandler) {\n      this._contentTypes.push(\"application/jwt\");\n    }\n  }\n  async fetchWithTimeout(input, init = {}) {\n    const {\n      timeoutInSeconds,\n      ...initFetch\n    } = init;\n    if (!timeoutInSeconds) {\n      return await fetch(input, initFetch);\n    }\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutInSeconds * 1e3);\n    try {\n      const response = await fetch(input, {\n        ...init,\n        signal: controller.signal\n      });\n      return response;\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"AbortError\") {\n        throw new ErrorTimeout(\"Network timed out\");\n      }\n      throw err;\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  }\n  async getJson(url, {\n    token,\n    credentials,\n    timeoutInSeconds\n  } = {}) {\n    const logger2 = this._logger.create(\"getJson\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \")\n    };\n    if (token) {\n      logger2.debug(\"token passed, setting Authorization header\");\n      headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    this.appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, {\n        method: \"GET\",\n        headers,\n        timeoutInSeconds,\n        credentials\n      });\n    } catch (err) {\n      logger2.error(\"Network Error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n      logger2.throw(new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`));\n    }\n    if (response.ok && this._jwtHandler && (contentType == null ? void 0 : contentType.startsWith(\"application/jwt\"))) {\n      return await this._jwtHandler(await response.text());\n    }\n    let json;\n    try {\n      json = await response.json();\n    } catch (err) {\n      logger2.error(\"Error parsing JSON response\", err);\n      if (response.ok) throw err;\n      throw new Error(`${response.statusText} (${response.status})`);\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (json.error) {\n        throw new ErrorResponse(json);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  async postForm(url, {\n    body,\n    basicAuth,\n    timeoutInSeconds,\n    initCredentials,\n    extraHeaders\n  }) {\n    const logger2 = this._logger.create(\"postForm\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \"),\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      ...extraHeaders\n    };\n    if (basicAuth !== void 0) {\n      headers[\"Authorization\"] = \"Basic \" + basicAuth;\n    }\n    this.appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, {\n        method: \"POST\",\n        headers,\n        body,\n        timeoutInSeconds,\n        credentials: initCredentials\n      });\n    } catch (err) {\n      logger2.error(\"Network error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n      throw new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`);\n    }\n    const responseText = await response.text();\n    let json = {};\n    if (responseText) {\n      try {\n        json = JSON.parse(responseText);\n      } catch (err) {\n        logger2.error(\"Error parsing JSON response\", err);\n        if (response.ok) throw err;\n        throw new Error(`${response.statusText} (${response.status})`);\n      }\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (response.headers.has(\"dpop-nonce\")) {\n        const nonce = response.headers.get(\"dpop-nonce\");\n        throw new ErrorDPoPNonce(nonce, `${JSON.stringify(json)}`);\n      }\n      if (json.error) {\n        throw new ErrorResponse(json, body);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  appendExtraHeaders(headers) {\n    const logger2 = this._logger.create(\"appendExtraHeaders\");\n    const customKeys = Object.keys(this._extraHeaders);\n    const protectedHeaders = [\"authorization\", \"accept\", \"content-type\"];\n    if (customKeys.length === 0) {\n      return;\n    }\n    customKeys.forEach(headerName => {\n      if (protectedHeaders.includes(headerName.toLocaleLowerCase())) {\n        logger2.warn(\"Protected header could not be overridden\", headerName, protectedHeaders);\n        return;\n      }\n      const content = typeof this._extraHeaders[headerName] === \"function\" ? this._extraHeaders[headerName]() : this._extraHeaders[headerName];\n      if (content && content !== \"\") {\n        headers[headerName] = content;\n      }\n    });\n  }\n};\n\n// src/MetadataService.ts\nvar MetadataService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"MetadataService\");\n    this._signingKeys = null;\n    this._metadata = null;\n    this._metadataUrl = this._settings.metadataUrl;\n    this._jsonService = new JsonService([\"application/jwk-set+json\"], null, this._settings.extraHeaders);\n    if (this._settings.signingKeys) {\n      this._logger.debug(\"using signingKeys from settings\");\n      this._signingKeys = this._settings.signingKeys;\n    }\n    if (this._settings.metadata) {\n      this._logger.debug(\"using metadata from settings\");\n      this._metadata = this._settings.metadata;\n    }\n    if (this._settings.fetchRequestCredentials) {\n      this._logger.debug(\"using fetchRequestCredentials from settings\");\n      this._fetchRequestCredentials = this._settings.fetchRequestCredentials;\n    }\n  }\n  resetSigningKeys() {\n    this._signingKeys = null;\n  }\n  async getMetadata() {\n    const logger2 = this._logger.create(\"getMetadata\");\n    if (this._metadata) {\n      logger2.debug(\"using cached values\");\n      return this._metadata;\n    }\n    if (!this._metadataUrl) {\n      logger2.throw(new Error(\"No authority or metadataUrl configured on settings\"));\n      throw null;\n    }\n    logger2.debug(\"getting metadata from\", this._metadataUrl);\n    const metadata = await this._jsonService.getJson(this._metadataUrl, {\n      credentials: this._fetchRequestCredentials,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"merging remote JSON with seed metadata\");\n    this._metadata = Object.assign({}, this._settings.metadataSeed, metadata);\n    return this._metadata;\n  }\n  getIssuer() {\n    return this._getMetadataProperty(\"issuer\");\n  }\n  getAuthorizationEndpoint() {\n    return this._getMetadataProperty(\"authorization_endpoint\");\n  }\n  getUserInfoEndpoint() {\n    return this._getMetadataProperty(\"userinfo_endpoint\");\n  }\n  getTokenEndpoint(optional = true) {\n    return this._getMetadataProperty(\"token_endpoint\", optional);\n  }\n  getCheckSessionIframe() {\n    return this._getMetadataProperty(\"check_session_iframe\", true);\n  }\n  getEndSessionEndpoint() {\n    return this._getMetadataProperty(\"end_session_endpoint\", true);\n  }\n  getRevocationEndpoint(optional = true) {\n    return this._getMetadataProperty(\"revocation_endpoint\", optional);\n  }\n  getKeysEndpoint(optional = true) {\n    return this._getMetadataProperty(\"jwks_uri\", optional);\n  }\n  async _getMetadataProperty(name, optional = false) {\n    const logger2 = this._logger.create(`_getMetadataProperty('${name}')`);\n    const metadata = await this.getMetadata();\n    logger2.debug(\"resolved\");\n    if (metadata[name] === void 0) {\n      if (optional === true) {\n        logger2.warn(\"Metadata does not contain optional property\");\n        return void 0;\n      }\n      logger2.throw(new Error(\"Metadata does not contain property \" + name));\n    }\n    return metadata[name];\n  }\n  async getSigningKeys() {\n    const logger2 = this._logger.create(\"getSigningKeys\");\n    if (this._signingKeys) {\n      logger2.debug(\"returning signingKeys from cache\");\n      return this._signingKeys;\n    }\n    const jwks_uri = await this.getKeysEndpoint(false);\n    logger2.debug(\"got jwks_uri\", jwks_uri);\n    const keySet = await this._jsonService.getJson(jwks_uri, {\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"got key set\", keySet);\n    if (!Array.isArray(keySet.keys)) {\n      logger2.throw(new Error(\"Missing keys on keyset\"));\n      throw null;\n    }\n    this._signingKeys = keySet.keys;\n    return this._signingKeys;\n  }\n};\n\n// src/WebStorageStateStore.ts\nvar WebStorageStateStore = class {\n  constructor({\n    prefix = \"oidc.\",\n    store = localStorage\n  } = {}) {\n    this._logger = new Logger(\"WebStorageStateStore\");\n    this._store = store;\n    this._prefix = prefix;\n  }\n  async set(key, value) {\n    this._logger.create(`set('${key}')`);\n    key = this._prefix + key;\n    await this._store.setItem(key, value);\n  }\n  async get(key) {\n    this._logger.create(`get('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    return item;\n  }\n  async remove(key) {\n    this._logger.create(`remove('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    await this._store.removeItem(key);\n    return item;\n  }\n  async getAllKeys() {\n    this._logger.create(\"getAllKeys\");\n    const len = await this._store.length;\n    const keys = [];\n    for (let index = 0; index < len; index++) {\n      const key = await this._store.key(index);\n      if (key && key.indexOf(this._prefix) === 0) {\n        keys.push(key.substr(this._prefix.length));\n      }\n    }\n    return keys;\n  }\n};\n\n// src/OidcClientSettings.ts\nvar DefaultResponseType = \"code\";\nvar DefaultScope = \"openid\";\nvar DefaultClientAuthentication = \"client_secret_post\";\nvar DefaultStaleStateAgeInSeconds = 60 * 15;\nvar OidcClientSettingsStore = class {\n  constructor({\n    // metadata related\n    authority,\n    metadataUrl,\n    metadata,\n    signingKeys,\n    metadataSeed,\n    // client related\n    client_id,\n    client_secret,\n    response_type = DefaultResponseType,\n    scope = DefaultScope,\n    redirect_uri,\n    post_logout_redirect_uri,\n    client_authentication = DefaultClientAuthentication,\n    // optional protocol\n    prompt,\n    display,\n    max_age,\n    ui_locales,\n    acr_values,\n    resource,\n    response_mode,\n    // behavior flags\n    filterProtocolClaims = true,\n    loadUserInfo = false,\n    requestTimeoutInSeconds,\n    staleStateAgeInSeconds = DefaultStaleStateAgeInSeconds,\n    mergeClaimsStrategy = {\n      array: \"replace\"\n    },\n    disablePKCE = false,\n    // other behavior\n    stateStore,\n    revokeTokenAdditionalContentTypes,\n    fetchRequestCredentials,\n    refreshTokenAllowedScope,\n    // extra\n    extraQueryParams = {},\n    extraTokenParams = {},\n    extraHeaders = {},\n    dpop,\n    omitScopeWhenRequesting = false\n  }) {\n    var _a;\n    this.authority = authority;\n    if (metadataUrl) {\n      this.metadataUrl = metadataUrl;\n    } else {\n      this.metadataUrl = authority;\n      if (authority) {\n        if (!this.metadataUrl.endsWith(\"/\")) {\n          this.metadataUrl += \"/\";\n        }\n        this.metadataUrl += \".well-known/openid-configuration\";\n      }\n    }\n    this.metadata = metadata;\n    this.metadataSeed = metadataSeed;\n    this.signingKeys = signingKeys;\n    this.client_id = client_id;\n    this.client_secret = client_secret;\n    this.response_type = response_type;\n    this.scope = scope;\n    this.redirect_uri = redirect_uri;\n    this.post_logout_redirect_uri = post_logout_redirect_uri;\n    this.client_authentication = client_authentication;\n    this.prompt = prompt;\n    this.display = display;\n    this.max_age = max_age;\n    this.ui_locales = ui_locales;\n    this.acr_values = acr_values;\n    this.resource = resource;\n    this.response_mode = response_mode;\n    this.filterProtocolClaims = filterProtocolClaims != null ? filterProtocolClaims : true;\n    this.loadUserInfo = !!loadUserInfo;\n    this.staleStateAgeInSeconds = staleStateAgeInSeconds;\n    this.mergeClaimsStrategy = mergeClaimsStrategy;\n    this.omitScopeWhenRequesting = omitScopeWhenRequesting;\n    this.disablePKCE = !!disablePKCE;\n    this.revokeTokenAdditionalContentTypes = revokeTokenAdditionalContentTypes;\n    this.fetchRequestCredentials = fetchRequestCredentials ? fetchRequestCredentials : \"same-origin\";\n    this.requestTimeoutInSeconds = requestTimeoutInSeconds;\n    if (stateStore) {\n      this.stateStore = stateStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.localStorage : new InMemoryWebStorage();\n      this.stateStore = new WebStorageStateStore({\n        store\n      });\n    }\n    this.refreshTokenAllowedScope = refreshTokenAllowedScope;\n    this.extraQueryParams = extraQueryParams;\n    this.extraTokenParams = extraTokenParams;\n    this.extraHeaders = extraHeaders;\n    this.dpop = dpop;\n    if (this.dpop && !((_a = this.dpop) == null ? void 0 : _a.store)) {\n      throw new Error(\"A DPoPStore is required when dpop is enabled\");\n    }\n  }\n};\n\n// src/UserInfoService.ts\nvar UserInfoService = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"UserInfoService\");\n    this._getClaimsFromJwt = async responseText => {\n      const logger2 = this._logger.create(\"_getClaimsFromJwt\");\n      try {\n        const payload = JwtUtils.decode(responseText);\n        logger2.debug(\"JWT decoding successful\");\n        return payload;\n      } catch (err) {\n        logger2.error(\"Error parsing JWT response\");\n        throw err;\n      }\n    };\n    this._jsonService = new JsonService(void 0, this._getClaimsFromJwt, this._settings.extraHeaders);\n  }\n  async getClaims(token) {\n    const logger2 = this._logger.create(\"getClaims\");\n    if (!token) {\n      this._logger.throw(new Error(\"No token passed\"));\n    }\n    const url = await this._metadataService.getUserInfoEndpoint();\n    logger2.debug(\"got userinfo url\", url);\n    const claims = await this._jsonService.getJson(url, {\n      token,\n      credentials: this._settings.fetchRequestCredentials,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"got claims\", claims);\n    return claims;\n  }\n};\n\n// src/TokenClient.ts\nvar TokenClient = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"TokenClient\");\n    this._jsonService = new JsonService(this._settings.revokeTokenAdditionalContentTypes, null, this._settings.extraHeaders);\n  }\n  /**\n   * Exchange code.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n   */\n  async exchangeCode({\n    grant_type = \"authorization_code\",\n    redirect_uri = this._settings.redirect_uri,\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    extraHeaders,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCode\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!redirect_uri) {\n      logger2.throw(new Error(\"A redirect_uri is required\"));\n    }\n    if (!args.code) {\n      logger2.throw(new Error(\"A code is required\"));\n    }\n    const params = new URLSearchParams({\n      grant_type,\n      redirect_uri\n    });\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, {\n      body: params,\n      basicAuth,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds,\n      initCredentials: this._settings.fetchRequestCredentials,\n      extraHeaders\n    });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange credentials.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.3.2\n   */\n  async exchangeCredentials({\n    grant_type = \"password\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    scope = this._settings.scope,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCredentials\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    const params = new URLSearchParams({\n      grant_type\n    });\n    if (!this._settings.omitScopeWhenRequesting) {\n      params.set(\"scope\", scope);\n    }\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, {\n      body: params,\n      basicAuth,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds,\n      initCredentials: this._settings.fetchRequestCredentials\n    });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange a refresh token.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-6\n   */\n  async exchangeRefreshToken({\n    grant_type = \"refresh_token\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    timeoutInSeconds,\n    extraHeaders,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeRefreshToken\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!args.refresh_token) {\n      logger2.throw(new Error(\"A refresh_token is required\"));\n    }\n    const params = new URLSearchParams({\n      grant_type\n    });\n    for (const [key, value] of Object.entries(args)) {\n      if (Array.isArray(value)) {\n        value.forEach(param => params.append(key, param));\n      } else if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, {\n      body: params,\n      basicAuth,\n      timeoutInSeconds,\n      initCredentials: this._settings.fetchRequestCredentials,\n      extraHeaders\n    });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Revoke an access or refresh token.\n   *\n   * @see https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n   */\n  async revoke(args) {\n    var _a;\n    const logger2 = this._logger.create(\"revoke\");\n    if (!args.token) {\n      logger2.throw(new Error(\"A token is required\"));\n    }\n    const url = await this._metadataService.getRevocationEndpoint(false);\n    logger2.debug(`got revocation endpoint, revoking ${(_a = args.token_type_hint) != null ? _a : \"default token type\"}`);\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    params.set(\"client_id\", this._settings.client_id);\n    if (this._settings.client_secret) {\n      params.set(\"client_secret\", this._settings.client_secret);\n    }\n    await this._jsonService.postForm(url, {\n      body: params,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"got response\");\n  }\n};\n\n// src/ResponseValidator.ts\nvar ResponseValidator = class {\n  constructor(_settings, _metadataService, _claimsService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._claimsService = _claimsService;\n    this._logger = new Logger(\"ResponseValidator\");\n    this._userInfoService = new UserInfoService(this._settings, this._metadataService);\n    this._tokenClient = new TokenClient(this._settings, this._metadataService);\n  }\n  async validateSigninResponse(response, state, extraHeaders) {\n    const logger2 = this._logger.create(\"validateSigninResponse\");\n    this._processSigninState(response, state);\n    logger2.debug(\"state processed\");\n    await this._processCode(response, state, extraHeaders);\n    logger2.debug(\"code processed\");\n    if (response.isOpenId) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, state == null ? void 0 : state.skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateCredentialsResponse(response, skipUserInfo) {\n    const logger2 = this._logger.create(\"validateCredentialsResponse\");\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateRefreshResponse(response, state) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"validateRefreshResponse\");\n    response.userState = state.data;\n    (_a = response.session_state) != null ? _a : response.session_state = state.session_state;\n    (_b = response.scope) != null ? _b : response.scope = state.scope;\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response, state.id_token);\n      logger2.debug(\"ID Token validated\");\n    }\n    if (!response.id_token) {\n      response.id_token = state.id_token;\n      response.profile = state.profile;\n    }\n    const hasIdToken = response.isOpenId && !!response.id_token;\n    await this._processClaims(response, false, hasIdToken);\n    logger2.debug(\"claims processed\");\n  }\n  validateSignoutResponse(response, state) {\n    const logger2 = this._logger.create(\"validateSignoutResponse\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n  }\n  _processSigninState(response, state) {\n    var _a;\n    const logger2 = this._logger.create(\"_processSigninState\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    if (!state.client_id) {\n      logger2.throw(new Error(\"No client_id on state\"));\n    }\n    if (!state.authority) {\n      logger2.throw(new Error(\"No authority on state\"));\n    }\n    if (this._settings.authority !== state.authority) {\n      logger2.throw(new Error(\"authority mismatch on settings vs. signin state\"));\n    }\n    if (this._settings.client_id && this._settings.client_id !== state.client_id) {\n      logger2.throw(new Error(\"client_id mismatch on settings vs. signin state\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    response.url_state = state.url_state;\n    (_a = response.scope) != null ? _a : response.scope = state.scope;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n    if (state.code_verifier && !response.code) {\n      logger2.throw(new Error(\"Expected code in response\"));\n    }\n  }\n  async _processClaims(response, skipUserInfo = false, validateSub = true) {\n    const logger2 = this._logger.create(\"_processClaims\");\n    response.profile = this._claimsService.filterProtocolClaims(response.profile);\n    if (skipUserInfo || !this._settings.loadUserInfo || !response.access_token) {\n      logger2.debug(\"not loading user info\");\n      return;\n    }\n    logger2.debug(\"loading user info\");\n    const claims = await this._userInfoService.getClaims(response.access_token);\n    logger2.debug(\"user info claims received from user info endpoint\");\n    if (validateSub && claims.sub !== response.profile.sub) {\n      logger2.throw(new Error(\"subject from UserInfo response does not match subject in ID Token\"));\n    }\n    response.profile = this._claimsService.mergeClaims(response.profile, this._claimsService.filterProtocolClaims(claims));\n    logger2.debug(\"user info claims received, updated profile:\", response.profile);\n  }\n  async _processCode(response, state, extraHeaders) {\n    const logger2 = this._logger.create(\"_processCode\");\n    if (response.code) {\n      logger2.debug(\"Validating code\");\n      const tokenResponse = await this._tokenClient.exchangeCode({\n        client_id: state.client_id,\n        client_secret: state.client_secret,\n        code: response.code,\n        redirect_uri: state.redirect_uri,\n        code_verifier: state.code_verifier,\n        extraHeaders,\n        ...state.extraTokenParams\n      });\n      Object.assign(response, tokenResponse);\n    } else {\n      logger2.debug(\"No code to process\");\n    }\n  }\n  _validateIdTokenAttributes(response, existingToken) {\n    var _a;\n    const logger2 = this._logger.create(\"_validateIdTokenAttributes\");\n    logger2.debug(\"decoding ID Token JWT\");\n    const incoming = JwtUtils.decode((_a = response.id_token) != null ? _a : \"\");\n    if (!incoming.sub) {\n      logger2.throw(new Error(\"ID Token is missing a subject claim\"));\n    }\n    if (existingToken) {\n      const existing = JwtUtils.decode(existingToken);\n      if (incoming.sub !== existing.sub) {\n        logger2.throw(new Error(\"sub in id_token does not match current sub\"));\n      }\n      if (incoming.auth_time && incoming.auth_time !== existing.auth_time) {\n        logger2.throw(new Error(\"auth_time in id_token does not match original auth_time\"));\n      }\n      if (incoming.azp && incoming.azp !== existing.azp) {\n        logger2.throw(new Error(\"azp in id_token does not match original azp\"));\n      }\n      if (!incoming.azp && existing.azp) {\n        logger2.throw(new Error(\"azp not in id_token, but present in original id_token\"));\n      }\n    }\n    response.profile = incoming;\n  }\n};\n\n// src/State.ts\nvar State = class _State {\n  constructor(args) {\n    this.id = args.id || CryptoUtils.generateUUIDv4();\n    this.data = args.data;\n    if (args.created && args.created > 0) {\n      this.created = args.created;\n    } else {\n      this.created = Timer.getEpochTime();\n    }\n    this.request_type = args.request_type;\n    this.url_state = args.url_state;\n  }\n  toStorageString() {\n    new Logger(\"State\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"State\", \"fromStorageString\");\n    return Promise.resolve(new _State(JSON.parse(storageString)));\n  }\n  static async clearStaleState(storage, age) {\n    const logger2 = Logger.createStatic(\"State\", \"clearStaleState\");\n    const cutoff = Timer.getEpochTime() - age;\n    const keys = await storage.getAllKeys();\n    logger2.debug(\"got keys\", keys);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const item = await storage.get(key);\n      let remove = false;\n      if (item) {\n        try {\n          const state = await _State.fromStorageString(item);\n          logger2.debug(\"got item from key:\", key, state.created);\n          if (state.created <= cutoff) {\n            remove = true;\n          }\n        } catch (err) {\n          logger2.error(\"Error parsing state for key:\", key, err);\n          remove = true;\n        }\n      } else {\n        logger2.debug(\"no item in storage for key:\", key);\n        remove = true;\n      }\n      if (remove) {\n        logger2.debug(\"removed item for key:\", key);\n        void storage.remove(key);\n      }\n    }\n  }\n};\n\n// src/SigninState.ts\nvar SigninState = class _SigninState extends State {\n  constructor(args) {\n    super(args);\n    this.code_verifier = args.code_verifier;\n    this.code_challenge = args.code_challenge;\n    this.authority = args.authority;\n    this.client_id = args.client_id;\n    this.redirect_uri = args.redirect_uri;\n    this.scope = args.scope;\n    this.client_secret = args.client_secret;\n    this.extraTokenParams = args.extraTokenParams;\n    this.response_mode = args.response_mode;\n    this.skipUserInfo = args.skipUserInfo;\n  }\n  static async create(args) {\n    const code_verifier = args.code_verifier === true ? CryptoUtils.generateCodeVerifier() : args.code_verifier || void 0;\n    const code_challenge = code_verifier ? await CryptoUtils.generateCodeChallenge(code_verifier) : void 0;\n    return new _SigninState({\n      ...args,\n      code_verifier,\n      code_challenge\n    });\n  }\n  toStorageString() {\n    new Logger(\"SigninState\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state,\n      code_verifier: this.code_verifier,\n      authority: this.authority,\n      client_id: this.client_id,\n      redirect_uri: this.redirect_uri,\n      scope: this.scope,\n      client_secret: this.client_secret,\n      extraTokenParams: this.extraTokenParams,\n      response_mode: this.response_mode,\n      skipUserInfo: this.skipUserInfo\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"SigninState\", \"fromStorageString\");\n    const data = JSON.parse(storageString);\n    return _SigninState.create(data);\n  }\n};\n\n// src/SigninRequest.ts\nvar _SigninRequest = class _SigninRequest {\n  constructor(args) {\n    this.url = args.url;\n    this.state = args.state;\n  }\n  static async create({\n    // mandatory\n    url,\n    authority,\n    client_id,\n    redirect_uri,\n    response_type,\n    scope,\n    // optional\n    state_data,\n    response_mode,\n    request_type,\n    client_secret,\n    nonce,\n    url_state,\n    resource,\n    skipUserInfo,\n    extraQueryParams,\n    extraTokenParams,\n    disablePKCE,\n    dpopJkt,\n    omitScopeWhenRequesting,\n    ...optionalParams\n  }) {\n    if (!url) {\n      this._logger.error(\"create: No url passed\");\n      throw new Error(\"url\");\n    }\n    if (!client_id) {\n      this._logger.error(\"create: No client_id passed\");\n      throw new Error(\"client_id\");\n    }\n    if (!redirect_uri) {\n      this._logger.error(\"create: No redirect_uri passed\");\n      throw new Error(\"redirect_uri\");\n    }\n    if (!response_type) {\n      this._logger.error(\"create: No response_type passed\");\n      throw new Error(\"response_type\");\n    }\n    if (!scope) {\n      this._logger.error(\"create: No scope passed\");\n      throw new Error(\"scope\");\n    }\n    if (!authority) {\n      this._logger.error(\"create: No authority passed\");\n      throw new Error(\"authority\");\n    }\n    const state = await SigninState.create({\n      data: state_data,\n      request_type,\n      url_state,\n      code_verifier: !disablePKCE,\n      client_id,\n      authority,\n      redirect_uri,\n      response_mode,\n      client_secret,\n      scope,\n      extraTokenParams,\n      skipUserInfo\n    });\n    const parsedUrl = new URL(url);\n    parsedUrl.searchParams.append(\"client_id\", client_id);\n    parsedUrl.searchParams.append(\"redirect_uri\", redirect_uri);\n    parsedUrl.searchParams.append(\"response_type\", response_type);\n    if (!omitScopeWhenRequesting) {\n      parsedUrl.searchParams.append(\"scope\", scope);\n    }\n    if (nonce) {\n      parsedUrl.searchParams.append(\"nonce\", nonce);\n    }\n    if (dpopJkt) {\n      parsedUrl.searchParams.append(\"dpop_jkt\", dpopJkt);\n    }\n    let stateParam = state.id;\n    if (url_state) {\n      stateParam = `${stateParam}${URL_STATE_DELIMITER}${url_state}`;\n    }\n    parsedUrl.searchParams.append(\"state\", stateParam);\n    if (state.code_challenge) {\n      parsedUrl.searchParams.append(\"code_challenge\", state.code_challenge);\n      parsedUrl.searchParams.append(\"code_challenge_method\", \"S256\");\n    }\n    if (resource) {\n      const resources = Array.isArray(resource) ? resource : [resource];\n      resources.forEach(r => parsedUrl.searchParams.append(\"resource\", r));\n    }\n    for (const [key, value] of Object.entries({\n      response_mode,\n      ...optionalParams,\n      ...extraQueryParams\n    })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    return new _SigninRequest({\n      url: parsedUrl.href,\n      state\n    });\n  }\n};\n_SigninRequest._logger = new Logger(\"SigninRequest\");\nvar SigninRequest = _SigninRequest;\n\n// src/SigninResponse.ts\nvar OidcScope = \"openid\";\nvar SigninResponse = class {\n  constructor(params) {\n    /** @see {@link User.access_token} */\n    this.access_token = \"\";\n    /** @see {@link User.token_type} */\n    this.token_type = \"\";\n    /** @see {@link User.profile} */\n    this.profile = {};\n    this.state = params.get(\"state\");\n    this.session_state = params.get(\"session_state\");\n    if (this.state) {\n      const splitState = decodeURIComponent(this.state).split(URL_STATE_DELIMITER);\n      this.state = splitState[0];\n      if (splitState.length > 1) {\n        this.url_state = splitState.slice(1).join(URL_STATE_DELIMITER);\n      }\n    }\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n    this.code = params.get(\"code\");\n  }\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (typeof value === \"string\") value = Number(value);\n    if (value !== void 0 && value >= 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  get isOpenId() {\n    var _a;\n    return ((_a = this.scope) == null ? void 0 : _a.split(\" \").includes(OidcScope)) || !!this.id_token;\n  }\n};\n\n// src/SignoutRequest.ts\nvar SignoutRequest = class {\n  constructor({\n    url,\n    state_data,\n    id_token_hint,\n    post_logout_redirect_uri,\n    extraQueryParams,\n    request_type,\n    client_id\n  }) {\n    this._logger = new Logger(\"SignoutRequest\");\n    if (!url) {\n      this._logger.error(\"ctor: No url passed\");\n      throw new Error(\"url\");\n    }\n    const parsedUrl = new URL(url);\n    if (id_token_hint) {\n      parsedUrl.searchParams.append(\"id_token_hint\", id_token_hint);\n    }\n    if (client_id) {\n      parsedUrl.searchParams.append(\"client_id\", client_id);\n    }\n    if (post_logout_redirect_uri) {\n      parsedUrl.searchParams.append(\"post_logout_redirect_uri\", post_logout_redirect_uri);\n      if (state_data) {\n        this.state = new State({\n          data: state_data,\n          request_type\n        });\n        parsedUrl.searchParams.append(\"state\", this.state.id);\n      }\n    }\n    for (const [key, value] of Object.entries({\n      ...extraQueryParams\n    })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    this.url = parsedUrl.href;\n  }\n};\n\n// src/SignoutResponse.ts\nvar SignoutResponse = class {\n  constructor(params) {\n    this.state = params.get(\"state\");\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n  }\n};\n\n// src/ClaimsService.ts\nvar DefaultProtocolClaims = [\"nbf\", \"jti\", \"auth_time\", \"nonce\", \"acr\", \"amr\", \"azp\", \"at_hash\"\n// https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\n];\nvar InternalRequiredProtocolClaims = [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"];\nvar ClaimsService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"ClaimsService\");\n  }\n  filterProtocolClaims(claims) {\n    const result = {\n      ...claims\n    };\n    if (this._settings.filterProtocolClaims) {\n      let protocolClaims;\n      if (Array.isArray(this._settings.filterProtocolClaims)) {\n        protocolClaims = this._settings.filterProtocolClaims;\n      } else {\n        protocolClaims = DefaultProtocolClaims;\n      }\n      for (const claim of protocolClaims) {\n        if (!InternalRequiredProtocolClaims.includes(claim)) {\n          delete result[claim];\n        }\n      }\n    }\n    return result;\n  }\n  mergeClaims(claims1, claims2) {\n    const result = {\n      ...claims1\n    };\n    for (const [claim, values] of Object.entries(claims2)) {\n      if (result[claim] !== values) {\n        if (Array.isArray(result[claim]) || Array.isArray(values)) {\n          if (this._settings.mergeClaimsStrategy.array == \"replace\") {\n            result[claim] = values;\n          } else {\n            const mergedValues = Array.isArray(result[claim]) ? result[claim] : [result[claim]];\n            for (const value of Array.isArray(values) ? values : [values]) {\n              if (!mergedValues.includes(value)) {\n                mergedValues.push(value);\n              }\n            }\n            result[claim] = mergedValues;\n          }\n        } else if (typeof result[claim] === \"object\" && typeof values === \"object\") {\n          result[claim] = this.mergeClaims(result[claim], values);\n        } else {\n          result[claim] = values;\n        }\n      }\n    }\n    return result;\n  }\n};\n\n// src/DPoPStore.ts\nvar DPoPState = class {\n  constructor(keys, nonce) {\n    this.keys = keys;\n    this.nonce = nonce;\n  }\n};\n\n// src/OidcClient.ts\nvar OidcClient = class {\n  constructor(settings, metadataService) {\n    this._logger = new Logger(\"OidcClient\");\n    this.settings = settings instanceof OidcClientSettingsStore ? settings : new OidcClientSettingsStore(settings);\n    this.metadataService = metadataService != null ? metadataService : new MetadataService(this.settings);\n    this._claimsService = new ClaimsService(this.settings);\n    this._validator = new ResponseValidator(this.settings, this.metadataService, this._claimsService);\n    this._tokenClient = new TokenClient(this.settings, this.metadataService);\n  }\n  async createSigninRequest({\n    state,\n    request,\n    request_uri,\n    request_type,\n    id_token_hint,\n    login_hint,\n    skipUserInfo,\n    nonce,\n    url_state,\n    response_type = this.settings.response_type,\n    scope = this.settings.scope,\n    redirect_uri = this.settings.redirect_uri,\n    prompt = this.settings.prompt,\n    display = this.settings.display,\n    max_age = this.settings.max_age,\n    ui_locales = this.settings.ui_locales,\n    acr_values = this.settings.acr_values,\n    resource = this.settings.resource,\n    response_mode = this.settings.response_mode,\n    extraQueryParams = this.settings.extraQueryParams,\n    extraTokenParams = this.settings.extraTokenParams,\n    dpopJkt,\n    omitScopeWhenRequesting = this.settings.omitScopeWhenRequesting\n  }) {\n    const logger2 = this._logger.create(\"createSigninRequest\");\n    if (response_type !== \"code\") {\n      throw new Error(\"Only the Authorization Code flow (with PKCE) is supported\");\n    }\n    const url = await this.metadataService.getAuthorizationEndpoint();\n    logger2.debug(\"Received authorization endpoint\", url);\n    const signinRequest = await SigninRequest.create({\n      url,\n      authority: this.settings.authority,\n      client_id: this.settings.client_id,\n      redirect_uri,\n      response_type,\n      scope,\n      state_data: state,\n      url_state,\n      prompt,\n      display,\n      max_age,\n      ui_locales,\n      id_token_hint,\n      login_hint,\n      acr_values,\n      dpopJkt,\n      resource,\n      request,\n      request_uri,\n      extraQueryParams,\n      extraTokenParams,\n      request_type,\n      response_mode,\n      client_secret: this.settings.client_secret,\n      skipUserInfo,\n      nonce,\n      disablePKCE: this.settings.disablePKCE,\n      omitScopeWhenRequesting\n    });\n    await this.clearStaleState();\n    const signinState = signinRequest.state;\n    await this.settings.stateStore.set(signinState.id, signinState.toStorageString());\n    return signinRequest;\n  }\n  async readSigninResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSigninResponseState\");\n    const response = new SigninResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.throw(new Error(\"No state in response\"));\n      throw null;\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await SigninState.fromStorageString(storedStateString);\n    return {\n      state,\n      response\n    };\n  }\n  async processSigninResponse(url, extraHeaders) {\n    const logger2 = this._logger.create(\"processSigninResponse\");\n    const {\n      state,\n      response\n    } = await this.readSigninResponseState(url, true);\n    logger2.debug(\"received state from storage; validating response\");\n    if (this.settings.dpop && this.settings.dpop.store) {\n      const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n      extraHeaders = {\n        ...extraHeaders,\n        \"DPoP\": dpopProof\n      };\n    }\n    try {\n      await this._validator.validateSigninResponse(response, state, extraHeaders);\n    } catch (err) {\n      if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n        const dpopProof = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n        extraHeaders[\"DPoP\"] = dpopProof;\n        await this._validator.validateSigninResponse(response, state, extraHeaders);\n      } else {\n        throw err;\n      }\n    }\n    return response;\n  }\n  async getDpopProof(dpopStore, nonce) {\n    let keyPair;\n    let dpopState;\n    if (!(await dpopStore.getAllKeys()).includes(this.settings.client_id)) {\n      keyPair = await CryptoUtils.generateDPoPKeys();\n      dpopState = new DPoPState(keyPair, nonce);\n      await dpopStore.set(this.settings.client_id, dpopState);\n    } else {\n      dpopState = await dpopStore.get(this.settings.client_id);\n      if (dpopState.nonce !== nonce && nonce) {\n        dpopState.nonce = nonce;\n        await dpopStore.set(this.settings.client_id, dpopState);\n      }\n    }\n    return await CryptoUtils.generateDPoPProof({\n      url: await this.metadataService.getTokenEndpoint(false),\n      httpMethod: \"POST\",\n      keyPair: dpopState.keys,\n      nonce: dpopState.nonce\n    });\n  }\n  async processResourceOwnerPasswordCredentials({\n    username,\n    password,\n    skipUserInfo = false,\n    extraTokenParams = {}\n  }) {\n    const tokenResponse = await this._tokenClient.exchangeCredentials({\n      username,\n      password,\n      ...extraTokenParams\n    });\n    const signinResponse = new SigninResponse(new URLSearchParams());\n    Object.assign(signinResponse, tokenResponse);\n    await this._validator.validateCredentialsResponse(signinResponse, skipUserInfo);\n    return signinResponse;\n  }\n  async useRefreshToken({\n    state,\n    redirect_uri,\n    resource,\n    timeoutInSeconds,\n    extraHeaders,\n    extraTokenParams\n  }) {\n    var _a;\n    const logger2 = this._logger.create(\"useRefreshToken\");\n    let scope;\n    if (this.settings.refreshTokenAllowedScope === void 0) {\n      scope = state.scope;\n    } else {\n      const allowableScopes = this.settings.refreshTokenAllowedScope.split(\" \");\n      const providedScopes = ((_a = state.scope) == null ? void 0 : _a.split(\" \")) || [];\n      scope = providedScopes.filter(s => allowableScopes.includes(s)).join(\" \");\n    }\n    if (this.settings.dpop && this.settings.dpop.store) {\n      const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n      extraHeaders = {\n        ...extraHeaders,\n        \"DPoP\": dpopProof\n      };\n    }\n    let result;\n    try {\n      result = await this._tokenClient.exchangeRefreshToken({\n        refresh_token: state.refresh_token,\n        // provide the (possible filtered) scope list\n        scope,\n        redirect_uri,\n        resource,\n        timeoutInSeconds,\n        extraHeaders,\n        ...extraTokenParams\n      });\n    } catch (err) {\n      if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n        extraHeaders[\"DPoP\"] = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n        result = await this._tokenClient.exchangeRefreshToken({\n          refresh_token: state.refresh_token,\n          // provide the (possible filtered) scope list\n          scope,\n          redirect_uri,\n          resource,\n          timeoutInSeconds,\n          extraHeaders,\n          ...extraTokenParams\n        });\n      } else {\n        throw err;\n      }\n    }\n    const response = new SigninResponse(new URLSearchParams());\n    Object.assign(response, result);\n    logger2.debug(\"validating response\", response);\n    await this._validator.validateRefreshResponse(response, {\n      ...state,\n      // override the scope in the state handed over to the validator\n      // so it can set the granted scope to the requested scope in case none is included in the response\n      scope\n    });\n    return response;\n  }\n  async createSignoutRequest({\n    state,\n    id_token_hint,\n    client_id,\n    request_type,\n    post_logout_redirect_uri = this.settings.post_logout_redirect_uri,\n    extraQueryParams = this.settings.extraQueryParams\n  } = {}) {\n    const logger2 = this._logger.create(\"createSignoutRequest\");\n    const url = await this.metadataService.getEndSessionEndpoint();\n    if (!url) {\n      logger2.throw(new Error(\"No end session endpoint\"));\n      throw null;\n    }\n    logger2.debug(\"Received end session endpoint\", url);\n    if (!client_id && post_logout_redirect_uri && !id_token_hint) {\n      client_id = this.settings.client_id;\n    }\n    const request = new SignoutRequest({\n      url,\n      id_token_hint,\n      client_id,\n      post_logout_redirect_uri,\n      state_data: state,\n      extraQueryParams,\n      request_type\n    });\n    await this.clearStaleState();\n    const signoutState = request.state;\n    if (signoutState) {\n      logger2.debug(\"Signout request has state to persist\");\n      await this.settings.stateStore.set(signoutState.id, signoutState.toStorageString());\n    }\n    return request;\n  }\n  async readSignoutResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSignoutResponseState\");\n    const response = new SignoutResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.debug(\"No state in response\");\n      if (response.error) {\n        logger2.warn(\"Response was error:\", response.error);\n        throw new ErrorResponse(response);\n      }\n      return {\n        state: void 0,\n        response\n      };\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await State.fromStorageString(storedStateString);\n    return {\n      state,\n      response\n    };\n  }\n  async processSignoutResponse(url) {\n    const logger2 = this._logger.create(\"processSignoutResponse\");\n    const {\n      state,\n      response\n    } = await this.readSignoutResponseState(url, true);\n    if (state) {\n      logger2.debug(\"Received state from storage; validating response\");\n      this._validator.validateSignoutResponse(response, state);\n    } else {\n      logger2.debug(\"No state from storage; skipping response validation\");\n    }\n    return response;\n  }\n  clearStaleState() {\n    this._logger.create(\"clearStaleState\");\n    return State.clearStaleState(this.settings.stateStore, this.settings.staleStateAgeInSeconds);\n  }\n  async revokeToken(token, type) {\n    this._logger.create(\"revokeToken\");\n    return await this._tokenClient.revoke({\n      token,\n      token_type_hint: type\n    });\n  }\n};\n\n// src/SessionMonitor.ts\nvar SessionMonitor = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SessionMonitor\");\n    this._start = async user => {\n      const session_state = user.session_state;\n      if (!session_state) {\n        return;\n      }\n      const logger2 = this._logger.create(\"_start\");\n      if (user.profile) {\n        this._sub = user.profile.sub;\n        logger2.debug(\"session_state\", session_state, \", sub\", this._sub);\n      } else {\n        this._sub = void 0;\n        logger2.debug(\"session_state\", session_state, \", anonymous user\");\n      }\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.start(session_state);\n        return;\n      }\n      try {\n        const url = await this._userManager.metadataService.getCheckSessionIframe();\n        if (url) {\n          logger2.debug(\"initializing check session iframe\");\n          const client_id = this._userManager.settings.client_id;\n          const intervalInSeconds = this._userManager.settings.checkSessionIntervalInSeconds;\n          const stopOnError = this._userManager.settings.stopCheckSessionOnError;\n          const checkSessionIFrame = new CheckSessionIFrame(this._callback, client_id, url, intervalInSeconds, stopOnError);\n          await checkSessionIFrame.load();\n          this._checkSessionIFrame = checkSessionIFrame;\n          checkSessionIFrame.start(session_state);\n        } else {\n          logger2.warn(\"no check session iframe found in the metadata\");\n        }\n      } catch (err) {\n        logger2.error(\"Error from getCheckSessionIframe:\", err instanceof Error ? err.message : err);\n      }\n    };\n    this._stop = () => {\n      const logger2 = this._logger.create(\"_stop\");\n      this._sub = void 0;\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.stop();\n      }\n      if (this._userManager.settings.monitorAnonymousSession) {\n        const timerHandle = setInterval(async () => {\n          clearInterval(timerHandle);\n          try {\n            const session = await this._userManager.querySessionStatus();\n            if (session) {\n              const tmpUser = {\n                session_state: session.session_state,\n                profile: session.sub ? {\n                  sub: session.sub\n                } : null\n              };\n              void this._start(tmpUser);\n            }\n          } catch (err) {\n            logger2.error(\"error from querySessionStatus\", err instanceof Error ? err.message : err);\n          }\n        }, 1e3);\n      }\n    };\n    this._callback = async () => {\n      const logger2 = this._logger.create(\"_callback\");\n      try {\n        const session = await this._userManager.querySessionStatus();\n        let raiseEvent = true;\n        if (session && this._checkSessionIFrame) {\n          if (session.sub === this._sub) {\n            raiseEvent = false;\n            this._checkSessionIFrame.start(session.session_state);\n            logger2.debug(\"same sub still logged in at OP, session state has changed, restarting check session iframe; session_state\", session.session_state);\n            await this._userManager.events._raiseUserSessionChanged();\n          } else {\n            logger2.debug(\"different subject signed into OP\", session.sub);\n          }\n        } else {\n          logger2.debug(\"subject no longer signed into OP\");\n        }\n        if (raiseEvent) {\n          if (this._sub) {\n            await this._userManager.events._raiseUserSignedOut();\n          } else {\n            await this._userManager.events._raiseUserSignedIn();\n          }\n        } else {\n          logger2.debug(\"no change in session detected, no event to raise\");\n        }\n      } catch (err) {\n        if (this._sub) {\n          logger2.debug(\"Error calling queryCurrentSigninSession; raising signed out event\", err);\n          await this._userManager.events._raiseUserSignedOut();\n        }\n      }\n    };\n    if (!_userManager) {\n      this._logger.throw(new Error(\"No user manager passed\"));\n    }\n    this._userManager.events.addUserLoaded(this._start);\n    this._userManager.events.addUserUnloaded(this._stop);\n    this._init().catch(err => {\n      this._logger.error(err);\n    });\n  }\n  async _init() {\n    this._logger.create(\"_init\");\n    const user = await this._userManager.getUser();\n    if (user) {\n      void this._start(user);\n    } else if (this._userManager.settings.monitorAnonymousSession) {\n      const session = await this._userManager.querySessionStatus();\n      if (session) {\n        const tmpUser = {\n          session_state: session.session_state,\n          profile: session.sub ? {\n            sub: session.sub\n          } : null\n        };\n        void this._start(tmpUser);\n      }\n    }\n  }\n};\n\n// src/User.ts\nvar User = class _User {\n  constructor(args) {\n    var _a;\n    this.id_token = args.id_token;\n    this.session_state = (_a = args.session_state) != null ? _a : null;\n    this.access_token = args.access_token;\n    this.refresh_token = args.refresh_token;\n    this.token_type = args.token_type;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.expires_at = args.expires_at;\n    this.state = args.userState;\n    this.url_state = args.url_state;\n  }\n  /** Computed number of seconds the access token has remaining. */\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (value !== void 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  /** Computed value indicating if the access token is expired. */\n  get expired() {\n    const expires_in = this.expires_in;\n    if (expires_in === void 0) {\n      return void 0;\n    }\n    return expires_in <= 0;\n  }\n  /** Array representing the parsed values from the `scope`. */\n  get scopes() {\n    var _a, _b;\n    return (_b = (_a = this.scope) == null ? void 0 : _a.split(\" \")) != null ? _b : [];\n  }\n  toStorageString() {\n    new Logger(\"User\").create(\"toStorageString\");\n    return JSON.stringify({\n      id_token: this.id_token,\n      session_state: this.session_state,\n      access_token: this.access_token,\n      refresh_token: this.refresh_token,\n      token_type: this.token_type,\n      scope: this.scope,\n      profile: this.profile,\n      expires_at: this.expires_at\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"User\", \"fromStorageString\");\n    return new _User(JSON.parse(storageString));\n  }\n};\n\n// src/navigators/AbstractChildWindow.ts\nvar messageSource = \"oidc-client\";\nvar AbstractChildWindow = class {\n  constructor() {\n    this._abort = new Event(\"Window navigation aborted\");\n    this._disposeHandlers = /* @__PURE__ */new Set();\n    this._window = null;\n  }\n  async navigate(params) {\n    const logger2 = this._logger.create(\"navigate\");\n    if (!this._window) {\n      throw new Error(\"Attempted to navigate on a disposed window\");\n    }\n    logger2.debug(\"setting URL in window\");\n    this._window.location.replace(params.url);\n    const {\n      url,\n      keepOpen\n    } = await new Promise((resolve, reject) => {\n      const listener = e => {\n        var _a;\n        const data = e.data;\n        const origin = (_a = params.scriptOrigin) != null ? _a : window.location.origin;\n        if (e.origin !== origin || (data == null ? void 0 : data.source) !== messageSource) {\n          return;\n        }\n        try {\n          const state = UrlUtils.readParams(data.url, params.response_mode).get(\"state\");\n          if (!state) {\n            logger2.warn(\"no state found in response url\");\n          }\n          if (e.source !== this._window && state !== params.state) {\n            return;\n          }\n        } catch (err) {\n          this._dispose();\n          reject(new Error(\"Invalid response from window\"));\n        }\n        resolve(data);\n      };\n      window.addEventListener(\"message\", listener, false);\n      this._disposeHandlers.add(() => window.removeEventListener(\"message\", listener, false));\n      this._disposeHandlers.add(this._abort.addHandler(reason => {\n        this._dispose();\n        reject(reason);\n      }));\n    });\n    logger2.debug(\"got response from window\");\n    this._dispose();\n    if (!keepOpen) {\n      this.close();\n    }\n    return {\n      url\n    };\n  }\n  _dispose() {\n    this._logger.create(\"_dispose\");\n    for (const dispose of this._disposeHandlers) {\n      dispose();\n    }\n    this._disposeHandlers.clear();\n  }\n  static _notifyParent(parent, url, keepOpen = false, targetOrigin = window.location.origin) {\n    parent.postMessage({\n      source: messageSource,\n      url,\n      keepOpen\n    }, targetOrigin);\n  }\n};\n\n// src/UserManagerSettings.ts\nvar DefaultPopupWindowFeatures = {\n  location: false,\n  toolbar: false,\n  height: 640,\n  closePopupWindowAfterInSeconds: -1\n};\nvar DefaultPopupTarget = \"_blank\";\nvar DefaultAccessTokenExpiringNotificationTimeInSeconds = 60;\nvar DefaultCheckSessionIntervalInSeconds = 2;\nvar DefaultSilentRequestTimeoutInSeconds = 10;\nvar UserManagerSettingsStore = class extends OidcClientSettingsStore {\n  constructor(args) {\n    const {\n      popup_redirect_uri = args.redirect_uri,\n      popup_post_logout_redirect_uri = args.post_logout_redirect_uri,\n      popupWindowFeatures = DefaultPopupWindowFeatures,\n      popupWindowTarget = DefaultPopupTarget,\n      redirectMethod = \"assign\",\n      redirectTarget = \"self\",\n      iframeNotifyParentOrigin = args.iframeNotifyParentOrigin,\n      iframeScriptOrigin = args.iframeScriptOrigin,\n      requestTimeoutInSeconds,\n      silent_redirect_uri = args.redirect_uri,\n      silentRequestTimeoutInSeconds,\n      automaticSilentRenew = true,\n      validateSubOnSilentRenew = true,\n      includeIdTokenInSilentRenew = false,\n      monitorSession = false,\n      monitorAnonymousSession = false,\n      checkSessionIntervalInSeconds = DefaultCheckSessionIntervalInSeconds,\n      query_status_response_type = \"code\",\n      stopCheckSessionOnError = true,\n      revokeTokenTypes = [\"access_token\", \"refresh_token\"],\n      revokeTokensOnSignout = false,\n      includeIdTokenInSilentSignout = false,\n      accessTokenExpiringNotificationTimeInSeconds = DefaultAccessTokenExpiringNotificationTimeInSeconds,\n      userStore\n    } = args;\n    super(args);\n    this.popup_redirect_uri = popup_redirect_uri;\n    this.popup_post_logout_redirect_uri = popup_post_logout_redirect_uri;\n    this.popupWindowFeatures = popupWindowFeatures;\n    this.popupWindowTarget = popupWindowTarget;\n    this.redirectMethod = redirectMethod;\n    this.redirectTarget = redirectTarget;\n    this.iframeNotifyParentOrigin = iframeNotifyParentOrigin;\n    this.iframeScriptOrigin = iframeScriptOrigin;\n    this.silent_redirect_uri = silent_redirect_uri;\n    this.silentRequestTimeoutInSeconds = silentRequestTimeoutInSeconds || requestTimeoutInSeconds || DefaultSilentRequestTimeoutInSeconds;\n    this.automaticSilentRenew = automaticSilentRenew;\n    this.validateSubOnSilentRenew = validateSubOnSilentRenew;\n    this.includeIdTokenInSilentRenew = includeIdTokenInSilentRenew;\n    this.monitorSession = monitorSession;\n    this.monitorAnonymousSession = monitorAnonymousSession;\n    this.checkSessionIntervalInSeconds = checkSessionIntervalInSeconds;\n    this.stopCheckSessionOnError = stopCheckSessionOnError;\n    this.query_status_response_type = query_status_response_type;\n    this.revokeTokenTypes = revokeTokenTypes;\n    this.revokeTokensOnSignout = revokeTokensOnSignout;\n    this.includeIdTokenInSilentSignout = includeIdTokenInSilentSignout;\n    this.accessTokenExpiringNotificationTimeInSeconds = accessTokenExpiringNotificationTimeInSeconds;\n    if (userStore) {\n      this.userStore = userStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.sessionStorage : new InMemoryWebStorage();\n      this.userStore = new WebStorageStateStore({\n        store\n      });\n    }\n  }\n};\n\n// src/navigators/IFrameWindow.ts\nvar IFrameWindow = class _IFrameWindow extends AbstractChildWindow {\n  constructor({\n    silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds\n  }) {\n    super();\n    this._logger = new Logger(\"IFrameWindow\");\n    this._timeoutInSeconds = silentRequestTimeoutInSeconds;\n    this._frame = _IFrameWindow.createHiddenIframe();\n    this._window = this._frame.contentWindow;\n  }\n  static createHiddenIframe() {\n    const iframe = window.document.createElement(\"iframe\");\n    iframe.style.visibility = \"hidden\";\n    iframe.style.position = \"fixed\";\n    iframe.style.left = \"-1000px\";\n    iframe.style.top = \"0\";\n    iframe.width = \"0\";\n    iframe.height = \"0\";\n    window.document.body.appendChild(iframe);\n    return iframe;\n  }\n  async navigate(params) {\n    this._logger.debug(\"navigate: Using timeout of:\", this._timeoutInSeconds);\n    const timer = setTimeout(() => void this._abort.raise(new ErrorTimeout(\"IFrame timed out without a response\")), this._timeoutInSeconds * 1e3);\n    this._disposeHandlers.add(() => clearTimeout(timer));\n    return await super.navigate(params);\n  }\n  close() {\n    var _a;\n    if (this._frame) {\n      if (this._frame.parentNode) {\n        this._frame.addEventListener(\"load\", ev => {\n          var _a2;\n          const frame = ev.target;\n          (_a2 = frame.parentNode) == null ? void 0 : _a2.removeChild(frame);\n          void this._abort.raise(new Error(\"IFrame removed from DOM\"));\n        }, true);\n        (_a = this._frame.contentWindow) == null ? void 0 : _a.location.replace(\"about:blank\");\n      }\n      this._frame = null;\n    }\n    this._window = null;\n  }\n  static notifyParent(url, targetOrigin) {\n    return super._notifyParent(window.parent, url, false, targetOrigin);\n  }\n};\n\n// src/navigators/IFrameNavigator.ts\nvar IFrameNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"IFrameNavigator\");\n  }\n  async prepare({\n    silentRequestTimeoutInSeconds = this._settings.silentRequestTimeoutInSeconds\n  }) {\n    return new IFrameWindow({\n      silentRequestTimeoutInSeconds\n    });\n  }\n  async callback(url) {\n    this._logger.create(\"callback\");\n    IFrameWindow.notifyParent(url, this._settings.iframeNotifyParentOrigin);\n  }\n};\n\n// src/navigators/PopupWindow.ts\nvar checkForPopupClosedInterval = 500;\nvar second = 1e3;\nvar PopupWindow = class extends AbstractChildWindow {\n  constructor({\n    popupWindowTarget = DefaultPopupTarget,\n    popupWindowFeatures = {},\n    popupSignal\n  }) {\n    super();\n    this._logger = new Logger(\"PopupWindow\");\n    const centeredPopup = PopupUtils.center({\n      ...DefaultPopupWindowFeatures,\n      ...popupWindowFeatures\n    });\n    this._window = window.open(void 0, popupWindowTarget, PopupUtils.serialize(centeredPopup));\n    if (popupSignal) {\n      popupSignal.addEventListener(\"abort\", () => {\n        var _a;\n        void this._abort.raise(new Error((_a = popupSignal.reason) != null ? _a : \"Popup aborted\"));\n      });\n    }\n    if (popupWindowFeatures.closePopupWindowAfterInSeconds && popupWindowFeatures.closePopupWindowAfterInSeconds > 0) {\n      setTimeout(() => {\n        if (!this._window || typeof this._window.closed !== \"boolean\" || this._window.closed) {\n          void this._abort.raise(new Error(\"Popup blocked by user\"));\n          return;\n        }\n        this.close();\n      }, popupWindowFeatures.closePopupWindowAfterInSeconds * second);\n    }\n  }\n  async navigate(params) {\n    var _a;\n    (_a = this._window) == null ? void 0 : _a.focus();\n    const popupClosedInterval = setInterval(() => {\n      if (!this._window || this._window.closed) {\n        void this._abort.raise(new Error(\"Popup closed by user\"));\n      }\n    }, checkForPopupClosedInterval);\n    this._disposeHandlers.add(() => clearInterval(popupClosedInterval));\n    return await super.navigate(params);\n  }\n  close() {\n    if (this._window) {\n      if (!this._window.closed) {\n        this._window.close();\n        void this._abort.raise(new Error(\"Popup closed\"));\n      }\n    }\n    this._window = null;\n  }\n  static notifyOpener(url, keepOpen) {\n    if (!window.opener) {\n      throw new Error(\"No window.opener. Can't complete notification.\");\n    }\n    return super._notifyParent(window.opener, url, keepOpen);\n  }\n};\n\n// src/navigators/PopupNavigator.ts\nvar PopupNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"PopupNavigator\");\n  }\n  async prepare({\n    popupWindowFeatures = this._settings.popupWindowFeatures,\n    popupWindowTarget = this._settings.popupWindowTarget,\n    popupSignal\n  }) {\n    return new PopupWindow({\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal\n    });\n  }\n  async callback(url, {\n    keepOpen = false\n  }) {\n    this._logger.create(\"callback\");\n    PopupWindow.notifyOpener(url, keepOpen);\n  }\n};\n\n// src/navigators/RedirectNavigator.ts\nvar RedirectNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"RedirectNavigator\");\n  }\n  async prepare({\n    redirectMethod = this._settings.redirectMethod,\n    redirectTarget = this._settings.redirectTarget\n  }) {\n    var _a;\n    this._logger.create(\"prepare\");\n    let targetWindow = window.self;\n    if (redirectTarget === \"top\") {\n      targetWindow = (_a = window.top) != null ? _a : window.self;\n    }\n    const redirect = targetWindow.location[redirectMethod].bind(targetWindow.location);\n    let abort;\n    return {\n      navigate: async params => {\n        this._logger.create(\"navigate\");\n        const promise = new Promise((resolve, reject) => {\n          abort = reject;\n        });\n        redirect(params.url);\n        return await promise;\n      },\n      close: () => {\n        this._logger.create(\"close\");\n        abort == null ? void 0 : abort(new Error(\"Redirect aborted\"));\n        targetWindow.stop();\n      }\n    };\n  }\n  async callback() {\n    return;\n  }\n};\n\n// src/UserManagerEvents.ts\nvar UserManagerEvents = class extends AccessTokenEvents {\n  constructor(settings) {\n    super({\n      expiringNotificationTimeInSeconds: settings.accessTokenExpiringNotificationTimeInSeconds\n    });\n    this._logger = new Logger(\"UserManagerEvents\");\n    this._userLoaded = new Event(\"User loaded\");\n    this._userUnloaded = new Event(\"User unloaded\");\n    this._silentRenewError = new Event(\"Silent renew error\");\n    this._userSignedIn = new Event(\"User signed in\");\n    this._userSignedOut = new Event(\"User signed out\");\n    this._userSessionChanged = new Event(\"User session changed\");\n  }\n  async load(user, raiseEvent = true) {\n    super.load(user);\n    if (raiseEvent) {\n      await this._userLoaded.raise(user);\n    }\n  }\n  async unload() {\n    super.unload();\n    await this._userUnloaded.raise();\n  }\n  /**\n   * Add callback: Raised when a user session has been established (or re-established).\n   */\n  addUserLoaded(cb) {\n    return this._userLoaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been established (or re-established).\n   */\n  removeUserLoaded(cb) {\n    return this._userLoaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when a user session has been terminated.\n   */\n  addUserUnloaded(cb) {\n    return this._userUnloaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been terminated.\n   */\n  removeUserUnloaded(cb) {\n    return this._userUnloaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when the automatic silent renew has failed.\n   */\n  addSilentRenewError(cb) {\n    return this._silentRenewError.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the automatic silent renew has failed.\n   */\n  removeSilentRenewError(cb) {\n    return this._silentRenewError.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseSilentRenewError(e) {\n    await this._silentRenewError.raise(e);\n  }\n  /**\n   * Add callback: Raised when the user is signed in (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedIn(cb) {\n    return this._userSignedIn.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user is signed in (when `monitorSession` is set).\n   */\n  removeUserSignedIn(cb) {\n    this._userSignedIn.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedIn() {\n    await this._userSignedIn.raise();\n  }\n  /**\n   * Add callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedOut(cb) {\n    return this._userSignedOut.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   */\n  removeUserSignedOut(cb) {\n    this._userSignedOut.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedOut() {\n    await this._userSignedOut.raise();\n  }\n  /**\n   * Add callback: Raised when the user session changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSessionChanged(cb) {\n    return this._userSessionChanged.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user session changed (when `monitorSession` is set).\n   */\n  removeUserSessionChanged(cb) {\n    this._userSessionChanged.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSessionChanged() {\n    await this._userSessionChanged.raise();\n  }\n};\n\n// src/SilentRenewService.ts\nvar SilentRenewService = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SilentRenewService\");\n    this._isStarted = false;\n    this._retryTimer = new Timer(\"Retry Silent Renew\");\n    this._tokenExpiring = async () => {\n      const logger2 = this._logger.create(\"_tokenExpiring\");\n      try {\n        await this._userManager.signinSilent();\n        logger2.debug(\"silent token renewal successful\");\n      } catch (err) {\n        if (err instanceof ErrorTimeout) {\n          logger2.warn(\"ErrorTimeout from signinSilent:\", err, \"retry in 5s\");\n          this._retryTimer.init(5);\n          return;\n        }\n        logger2.error(\"Error from signinSilent:\", err);\n        await this._userManager.events._raiseSilentRenewError(err);\n      }\n    };\n  }\n  async start() {\n    const logger2 = this._logger.create(\"start\");\n    if (!this._isStarted) {\n      this._isStarted = true;\n      this._userManager.events.addAccessTokenExpiring(this._tokenExpiring);\n      this._retryTimer.addHandler(this._tokenExpiring);\n      try {\n        await this._userManager.getUser();\n      } catch (err) {\n        logger2.error(\"getUser error\", err);\n      }\n    }\n  }\n  stop() {\n    if (this._isStarted) {\n      this._retryTimer.cancel();\n      this._retryTimer.removeHandler(this._tokenExpiring);\n      this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring);\n      this._isStarted = false;\n    }\n  }\n};\n\n// src/RefreshState.ts\nvar RefreshState = class {\n  constructor(args) {\n    this.refresh_token = args.refresh_token;\n    this.id_token = args.id_token;\n    this.session_state = args.session_state;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.data = args.state;\n  }\n};\n\n// src/UserManager.ts\nvar UserManager = class {\n  constructor(settings, redirectNavigator, popupNavigator, iframeNavigator) {\n    this._logger = new Logger(\"UserManager\");\n    this.settings = new UserManagerSettingsStore(settings);\n    this._client = new OidcClient(settings);\n    this._redirectNavigator = redirectNavigator != null ? redirectNavigator : new RedirectNavigator(this.settings);\n    this._popupNavigator = popupNavigator != null ? popupNavigator : new PopupNavigator(this.settings);\n    this._iframeNavigator = iframeNavigator != null ? iframeNavigator : new IFrameNavigator(this.settings);\n    this._events = new UserManagerEvents(this.settings);\n    this._silentRenewService = new SilentRenewService(this);\n    if (this.settings.automaticSilentRenew) {\n      this.startSilentRenew();\n    }\n    this._sessionMonitor = null;\n    if (this.settings.monitorSession) {\n      this._sessionMonitor = new SessionMonitor(this);\n    }\n  }\n  /**\n   * Get object used to register for events raised by the `UserManager`.\n   */\n  get events() {\n    return this._events;\n  }\n  /**\n   * Get object used to access the metadata configuration of the identity provider.\n   */\n  get metadataService() {\n    return this._client.metadataService;\n  }\n  /**\n   * Load the `User` object for the currently authenticated user.\n   *\n   * @returns A promise\n   */\n  async getUser() {\n    const logger2 = this._logger.create(\"getUser\");\n    const user = await this._loadUser();\n    if (user) {\n      logger2.info(\"user loaded\");\n      await this._events.load(user, false);\n      return user;\n    }\n    logger2.info(\"user not found in storage\");\n    return null;\n  }\n  /**\n   * Remove from any storage the currently authenticated user.\n   *\n   * @returns A promise\n   */\n  async removeUser() {\n    const logger2 = this._logger.create(\"removeUser\");\n    await this.storeUser(null);\n    logger2.info(\"user removed from storage\");\n    await this._events.unload();\n  }\n  /**\n   * Trigger a redirect of the current window to the authorization endpoint.\n   *\n   * @returns A promise\n   *\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinRedirect(args = {}) {\n    var _a;\n    this._logger.create(\"signinRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const handle = await this._redirectNavigator.prepare({\n      redirectMethod\n    });\n    await this._signinStart({\n      request_type: \"si:r\",\n      dpopJkt,\n      ...requestArgs\n    }, handle);\n  }\n  /**\n   * Process the response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise containing the authenticated `User`.\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinRedirectCallback\");\n    const user = await this._signinEnd(url);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger the signin with user/password.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws {@link ErrorResponse} In cases of wrong authentication.\n   */\n  async signinResourceOwnerCredentials({\n    username,\n    password,\n    skipUserInfo = false\n  }) {\n    const logger2 = this._logger.create(\"signinResourceOwnerCredential\");\n    const signinResponse = await this._client.processResourceOwnerPasswordCredentials({\n      username,\n      password,\n      skipUserInfo,\n      extraTokenParams: this.settings.extraTokenParams\n    });\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger a request (via a popup window) to the authorization endpoint.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinPopup(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signinPopup\");\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No popup_redirect_uri configured\"));\n    }\n    const handle = await this._popupNavigator.prepare({\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal\n    });\n    const user = await this._signin({\n      request_type: \"si:p\",\n      redirect_uri: url,\n      display: \"popup\",\n      dpopJkt,\n      ...requestArgs\n    }, handle);\n    if (user) {\n      if (user.profile && user.profile.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  /**\n   * Notify the opening window of response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signinPopupCallback\");\n    await this._popupNavigator.callback(url, {\n      keepOpen\n    });\n    logger2.info(\"success\");\n  }\n  /**\n   * Trigger a silent request (via refresh token or an iframe) to the authorization endpoint.\n   *\n   * @returns A promise that contains the authenticated `User`.\n   */\n  async signinSilent(args = {}) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"signinSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    let user = await this._loadUser();\n    if (user == null ? void 0 : user.refresh_token) {\n      logger2.debug(\"using refresh token\");\n      const state = new RefreshState(user);\n      return await this._useRefreshToken({\n        state,\n        redirect_uri: requestArgs.redirect_uri,\n        resource: requestArgs.resource,\n        extraTokenParams: requestArgs.extraTokenParams,\n        timeoutInSeconds: silentRequestTimeoutInSeconds\n      });\n    }\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    let verifySub;\n    if (user && this.settings.validateSubOnSilentRenew) {\n      logger2.debug(\"subject prior to silent renew:\", user.profile.sub);\n      verifySub = user.profile.sub;\n    }\n    const handle = await this._iframeNavigator.prepare({\n      silentRequestTimeoutInSeconds\n    });\n    user = await this._signin({\n      request_type: \"si:s\",\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      dpopJkt,\n      ...requestArgs\n    }, handle, verifySub);\n    if (user) {\n      if ((_b = user.profile) == null ? void 0 : _b.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  async _useRefreshToken(args) {\n    const response = await this._client.useRefreshToken({\n      timeoutInSeconds: this.settings.silentRequestTimeoutInSeconds,\n      ...args\n    });\n    const user = new User({\n      ...args.state,\n      ...response\n    });\n    await this.storeUser(user);\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   *\n   * Notify the parent window of response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process any response (callback) from the authorization endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signinRedirectCallback}\n   * - {@link UserManager.signinPopupCallback}\n   * - {@link UserManager.signinSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signin cannot be processed.\n   */\n  async signinCallback(url = window.location.href) {\n    const {\n      state\n    } = await this._client.readSigninResponseState(url);\n    switch (state.request_type) {\n      case \"si:r\":\n        return await this.signinRedirectCallback(url);\n      case \"si:p\":\n        await this.signinPopupCallback(url);\n        break;\n      case \"si:s\":\n        await this.signinSilentCallback(url);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n    return void 0;\n  }\n  /**\n   * Process any response (callback) from the end session endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signoutRedirectCallback}\n   * - {@link UserManager.signoutPopupCallback}\n   * - {@link UserManager.signoutSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signout cannot be processed.\n   */\n  async signoutCallback(url = window.location.href, keepOpen = false) {\n    const {\n      state\n    } = await this._client.readSignoutResponseState(url);\n    if (!state) {\n      return void 0;\n    }\n    switch (state.request_type) {\n      case \"so:r\":\n        return await this.signoutRedirectCallback(url);\n      case \"so:p\":\n        await this.signoutPopupCallback(url, keepOpen);\n        break;\n      case \"so:s\":\n        await this.signoutSilentCallback(url);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n    return void 0;\n  }\n  /**\n   * Query OP for user's current signin status.\n   *\n   * @returns A promise object with session_state and subject identifier.\n   */\n  async querySessionStatus(args = {}) {\n    const logger2 = this._logger.create(\"querySessionStatus\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    const user = await this._loadUser();\n    const handle = await this._iframeNavigator.prepare({\n      silentRequestTimeoutInSeconds\n    });\n    const navResponse = await this._signinStart({\n      request_type: \"si:s\",\n      // this acts like a signin silent\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      response_type: this.settings.query_status_response_type,\n      scope: \"openid\",\n      skipUserInfo: true,\n      ...requestArgs\n    }, handle);\n    try {\n      const extraHeaders = {};\n      const signinResponse = await this._client.processSigninResponse(navResponse.url, extraHeaders);\n      logger2.debug(\"got signin response\");\n      if (signinResponse.session_state && signinResponse.profile.sub) {\n        logger2.info(\"success for subject\", signinResponse.profile.sub);\n        return {\n          session_state: signinResponse.session_state,\n          sub: signinResponse.profile.sub\n        };\n      }\n      logger2.info(\"success, user not authenticated\");\n      return null;\n    } catch (err) {\n      if (this.settings.monitorAnonymousSession && err instanceof ErrorResponse) {\n        switch (err.error) {\n          case \"login_required\":\n          case \"consent_required\":\n          case \"interaction_required\":\n          case \"account_selection_required\":\n            logger2.info(\"success for anonymous user\");\n            return {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              session_state: err.session_state\n            };\n        }\n      }\n      throw err;\n    }\n  }\n  async _signin(args, handle, verifySub) {\n    const navResponse = await this._signinStart(args, handle);\n    return await this._signinEnd(navResponse.url, verifySub);\n  }\n  async _signinStart(args, handle) {\n    const logger2 = this._logger.create(\"_signinStart\");\n    try {\n      const signinRequest = await this._client.createSigninRequest(args);\n      logger2.debug(\"got signin request\");\n      return await handle.navigate({\n        url: signinRequest.url,\n        state: signinRequest.state.id,\n        response_mode: signinRequest.state.response_mode,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signinEnd(url, verifySub) {\n    const logger2 = this._logger.create(\"_signinEnd\");\n    const extraHeaders = {};\n    const signinResponse = await this._client.processSigninResponse(url, extraHeaders);\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse, verifySub);\n    return user;\n  }\n  async _buildUser(signinResponse, verifySub) {\n    const logger2 = this._logger.create(\"_buildUser\");\n    const user = new User(signinResponse);\n    if (verifySub) {\n      if (verifySub !== user.profile.sub) {\n        logger2.debug(\"current user does not match user returned from signin. sub from signin:\", user.profile.sub);\n        throw new ErrorResponse({\n          ...signinResponse,\n          error: \"login_required\"\n        });\n      }\n      logger2.debug(\"current user matches user returned from signin\");\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   * Trigger a redirect of the current window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutRedirect(args = {}) {\n    const logger2 = this._logger.create(\"signoutRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    const handle = await this._redirectNavigator.prepare({\n      redirectMethod\n    });\n    await this._signoutStart({\n      request_type: \"so:r\",\n      post_logout_redirect_uri: this.settings.post_logout_redirect_uri,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise containing signout response\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutRedirectCallback\");\n    const response = await this._signoutEnd(url);\n    logger2.info(\"success\");\n    return response;\n  }\n  /**\n   * Trigger a redirect of a popup window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutPopup(args = {}) {\n    const logger2 = this._logger.create(\"signoutPopup\");\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._popupNavigator.prepare({\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal\n    });\n    await this._signout({\n      request_type: \"so:p\",\n      post_logout_redirect_uri: url,\n      // we're putting a dummy entry in here because we\n      // need a unique id from the state for notification\n      // to the parent window, which is necessary if we\n      // plan to return back to the client after signout\n      // and so we can close the popup after signout\n      state: url == null ? void 0 : {},\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint from a popup window.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signoutPopupCallback\");\n    await this._popupNavigator.callback(url, {\n      keepOpen\n    });\n    logger2.info(\"success\");\n  }\n  async _signout(args, handle) {\n    const navResponse = await this._signoutStart(args, handle);\n    return await this._signoutEnd(navResponse.url);\n  }\n  async _signoutStart(args = {}, handle) {\n    var _a;\n    const logger2 = this._logger.create(\"_signoutStart\");\n    try {\n      const user = await this._loadUser();\n      logger2.debug(\"loaded current user from storage\");\n      if (this.settings.revokeTokensOnSignout) {\n        await this._revokeInternal(user);\n      }\n      const id_token = args.id_token_hint || user && user.id_token;\n      if (id_token) {\n        logger2.debug(\"setting id_token_hint in signout request\");\n        args.id_token_hint = id_token;\n      }\n      await this.removeUser();\n      logger2.debug(\"user removed, creating signout request\");\n      const signoutRequest = await this._client.createSignoutRequest(args);\n      logger2.debug(\"got signout request\");\n      return await handle.navigate({\n        url: signoutRequest.url,\n        state: (_a = signoutRequest.state) == null ? void 0 : _a.id,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signoutEnd(url) {\n    const logger2 = this._logger.create(\"_signoutEnd\");\n    const signoutResponse = await this._client.processSignoutResponse(url);\n    logger2.debug(\"got signout response\");\n    return signoutResponse;\n  }\n  /**\n   * Trigger a silent request (via an iframe) to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutSilent(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signoutSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const id_token_hint = this.settings.includeIdTokenInSilentSignout ? (_a = await this._loadUser()) == null ? void 0 : _a.id_token : void 0;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._iframeNavigator.prepare({\n      silentRequestTimeoutInSeconds\n    });\n    await this._signout({\n      request_type: \"so:s\",\n      post_logout_redirect_uri: url,\n      id_token_hint,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Notify the parent window of response (callback) from the end session endpoint.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  async revokeTokens(types) {\n    const user = await this._loadUser();\n    await this._revokeInternal(user, types);\n  }\n  async _revokeInternal(user, types = this.settings.revokeTokenTypes) {\n    const logger2 = this._logger.create(\"_revokeInternal\");\n    if (!user) return;\n    const typesPresent = types.filter(type => typeof user[type] === \"string\");\n    if (!typesPresent.length) {\n      logger2.debug(\"no need to revoke due to no token(s)\");\n      return;\n    }\n    for (const type of typesPresent) {\n      await this._client.revokeToken(user[type],\n      // eslint-disable-line @typescript-eslint/no-non-null-assertion\n      type);\n      logger2.info(`${type} revoked successfully`);\n      if (type !== \"access_token\") {\n        user[type] = null;\n      }\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n  }\n  /**\n   * Enables silent renew for the `UserManager`.\n   */\n  startSilentRenew() {\n    this._logger.create(\"startSilentRenew\");\n    void this._silentRenewService.start();\n  }\n  /**\n   * Disables silent renew for the `UserManager`.\n   */\n  stopSilentRenew() {\n    this._silentRenewService.stop();\n  }\n  get _userStoreKey() {\n    return `user:${this.settings.authority}:${this.settings.client_id}`;\n  }\n  async _loadUser() {\n    const logger2 = this._logger.create(\"_loadUser\");\n    const storageString = await this.settings.userStore.get(this._userStoreKey);\n    if (storageString) {\n      logger2.debug(\"user storageString loaded\");\n      return User.fromStorageString(storageString);\n    }\n    logger2.debug(\"no user storageString\");\n    return null;\n  }\n  async storeUser(user) {\n    const logger2 = this._logger.create(\"storeUser\");\n    if (user) {\n      logger2.debug(\"storing user\");\n      const storageString = user.toStorageString();\n      await this.settings.userStore.set(this._userStoreKey, storageString);\n    } else {\n      this._logger.debug(\"removing user\");\n      await this.settings.userStore.remove(this._userStoreKey);\n      if (this.settings.dpop) {\n        await this.settings.dpop.store.remove(this.settings.client_id);\n      }\n    }\n  }\n  /**\n   * Removes stale state entries in storage for incomplete authorize requests.\n   */\n  async clearStaleState() {\n    await this._client.clearStaleState();\n  }\n  /**\n   * Dynamically generates a DPoP proof for a given user, URL and optional Http method.\n   * This method is useful when you need to make a request to a resource server\n   * with fetch or similar, and you need to include a DPoP proof in a DPoP header.\n   * @param url - The URL to generate the DPoP proof for\n   * @param user - The user to generate the DPoP proof for\n   * @param httpMethod - Optional, defaults to \"GET\"\n   * @param nonce - Optional nonce provided by the resource server\n   *\n   * @returns A promise containing the DPoP proof or undefined if DPoP is not enabled/no user is found.\n   */\n  async dpopProof(url, user, httpMethod, nonce) {\n    var _a, _b;\n    const dpopState = await ((_b = (_a = this.settings.dpop) == null ? void 0 : _a.store) == null ? void 0 : _b.get(this.settings.client_id));\n    if (dpopState) {\n      return await CryptoUtils.generateDPoPProof({\n        url,\n        accessToken: user == null ? void 0 : user.access_token,\n        httpMethod,\n        keyPair: dpopState.keys,\n        nonce\n      });\n    }\n    return void 0;\n  }\n  async generateDPoPJkt(dpopSettings) {\n    let dpopState = await dpopSettings.store.get(this.settings.client_id);\n    if (!dpopState) {\n      const dpopKeys = await CryptoUtils.generateDPoPKeys();\n      dpopState = new DPoPState(dpopKeys);\n      await dpopSettings.store.set(this.settings.client_id, dpopState);\n    }\n    return await CryptoUtils.generateDPoPJkt(dpopState.keys);\n  }\n};\n\n// package.json\nvar version = \"3.1.0\";\n\n// src/Version.ts\nvar Version = version;\n\n// src/IndexedDbDPoPStore.ts\nvar IndexedDbDPoPStore = class {\n  constructor() {\n    this._dbName = \"oidc\";\n    this._storeName = \"dpop\";\n  }\n  async set(key, value) {\n    const store = await this.createStore(this._dbName, this._storeName);\n    await store(\"readwrite\", str => {\n      str.put(value, key);\n      return this.promisifyRequest(str.transaction);\n    });\n  }\n  async get(key) {\n    const store = await this.createStore(this._dbName, this._storeName);\n    return await store(\"readonly\", str => {\n      return this.promisifyRequest(str.get(key));\n    });\n  }\n  async remove(key) {\n    const item = await this.get(key);\n    const store = await this.createStore(this._dbName, this._storeName);\n    await store(\"readwrite\", str => {\n      return this.promisifyRequest(str.delete(key));\n    });\n    return item;\n  }\n  async getAllKeys() {\n    const store = await this.createStore(this._dbName, this._storeName);\n    return await store(\"readonly\", str => {\n      return this.promisifyRequest(str.getAllKeys());\n    });\n  }\n  promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n      request.oncomplete = request.onsuccess = () => resolve(request.result);\n      request.onabort = request.onerror = () => reject(request.error);\n    });\n  }\n  async createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const db = await this.promisifyRequest(request);\n    return async (txMode, callback) => {\n      const tx = db.transaction(storeName, txMode);\n      const store = tx.objectStore(storeName);\n      return await callback(store);\n    };\n  }\n};\nexport { AccessTokenEvents, CheckSessionIFrame, DPoPState, ErrorResponse, ErrorTimeout, InMemoryWebStorage, IndexedDbDPoPStore, Log, Logger, MetadataService, OidcClient, OidcClientSettingsStore, SessionMonitor, SigninResponse, SigninState, SignoutResponse, State, User, UserManager, UserManagerSettingsStore, Version, WebStorageStateStore };","map":{"version":3,"names":["nopLogger","debug","info","warn","error","level","logger","Log","Log2","reset","setLevel","value","Error","setLogger","Logger","_Logger","constructor","_name","args","_format","_method","throw","err","create","method","methodLogger","Object","createStatic","name","staticMethod","staticLogger","prefix","jwtDecode","JwtUtils","decode","token","generateSignedJwt","header","payload","privateKey","encodedHeader","CryptoUtils","encodeBase64Url","TextEncoder","encode","JSON","stringify","encodedPayload","encodedToken","signature","window","crypto","subtle","sign","hash","encodedSignature","Uint8Array","UUID_V4_TEMPLATE","toBase64","val","btoa","map","chr","String","fromCharCode","join","_CryptoUtils","_randomWord","arr","Uint32Array","getRandomValues","generateUUIDv4","uuid","replace","c","toString","generateCodeVerifier","generateCodeChallenge","code_verifier","encoder","data","hashed","digest","generateBasicAuth","client_id","client_secret","alg","message","msgUint8","hashBuffer","customCalculateJwkThumbprint","jwk","jsonObject","kty","e","n","crv","x","y","k","utf8encodedAndHashed","generateDPoPProof","url","accessToken","httpMethod","keyPair","nonce","hashedToken","encodedHash","randomUUID","Math","floor","Date","now","ath","publicJwk","exportKey","publicKey","TypeError","generateDPoPJkt","generateDPoPKeys","generateKey","namedCurve","input","Event","_callbacks","_logger","addHandler","cb","push","removeHandler","idx","lastIndexOf","splice","raise","ev","PopupUtils","center","features","_a","_b","_c","width","find","outerWidth","left","max","round","screenX","height","top","screenY","outerHeight","serialize","entries","filter","key","Timer","_Timer","arguments","_timerHandle","_expiration","_callback","diff","getEpochTime","cancel","init","durationInSeconds","logger2","expiration","timerDurationInSeconds","min","setInterval","clearInterval","UrlUtils","readParams","responseMode","parsedUrl","URL","params","URLSearchParams","slice","URL_STATE_DELIMITER","ErrorResponse","form","error_description","error_uri","state","userState","session_state","url_state","ErrorTimeout","AccessTokenEvents","_expiringTimer","_expiredTimer","_expiringNotificationTimeInSeconds","expiringNotificationTimeInSeconds","load","container","access_token","expires_in","duration","expiring","expired","unload","addAccessTokenExpiring","removeAccessTokenExpiring","addAccessTokenExpired","removeAccessTokenExpired","CheckSessionIFrame","_client_id","_intervalInSeconds","_stopOnError","_timer","_session_state","_message","origin","_frame_origin","source","_frame","contentWindow","stop","document","createElement","style","visibility","position","src","href","Promise","resolve","onload","body","appendChild","addEventListener","start","send","postMessage","InMemoryWebStorage","_data","clear","getItem","setItem","removeItem","length","getOwnPropertyNames","index","ErrorDPoPNonce","JsonService","additionalContentTypes","_jwtHandler","_extraHeaders","_contentTypes","fetchWithTimeout","timeoutInSeconds","initFetch","fetch","controller","AbortController","timeoutId","setTimeout","abort","response","signal","DOMException","clearTimeout","getJson","credentials","headers","appendExtraHeaders","status","contentType","get","item","startsWith","ok","text","json","statusText","postForm","basicAuth","initCredentials","extraHeaders","responseText","parse","has","customKeys","keys","protectedHeaders","forEach","headerName","includes","toLocaleLowerCase","content","MetadataService","_settings","_signingKeys","_metadata","_metadataUrl","metadataUrl","_jsonService","signingKeys","metadata","fetchRequestCredentials","_fetchRequestCredentials","resetSigningKeys","getMetadata","requestTimeoutInSeconds","assign","metadataSeed","getIssuer","_getMetadataProperty","getAuthorizationEndpoint","getUserInfoEndpoint","getTokenEndpoint","optional","getCheckSessionIframe","getEndSessionEndpoint","getRevocationEndpoint","getKeysEndpoint","getSigningKeys","jwks_uri","keySet","Array","isArray","WebStorageStateStore","store","localStorage","_store","_prefix","set","remove","getAllKeys","len","indexOf","substr","DefaultResponseType","DefaultScope","DefaultClientAuthentication","DefaultStaleStateAgeInSeconds","OidcClientSettingsStore","authority","response_type","scope","redirect_uri","post_logout_redirect_uri","client_authentication","prompt","display","max_age","ui_locales","acr_values","resource","response_mode","filterProtocolClaims","loadUserInfo","staleStateAgeInSeconds","mergeClaimsStrategy","array","disablePKCE","stateStore","revokeTokenAdditionalContentTypes","refreshTokenAllowedScope","extraQueryParams","extraTokenParams","dpop","omitScopeWhenRequesting","endsWith","UserInfoService","_metadataService","_getClaimsFromJwt","getClaims","claims","TokenClient","exchangeCode","grant_type","code","append","exchangeCredentials","exchangeRefreshToken","refresh_token","param","revoke","token_type_hint","ResponseValidator","_claimsService","_userInfoService","_tokenClient","validateSigninResponse","_processSigninState","_processCode","isOpenId","_validateIdTokenAttributes","_processClaims","skipUserInfo","validateCredentialsResponse","id_token","validateRefreshResponse","profile","hasIdToken","validateSignoutResponse","id","validateSub","sub","mergeClaims","tokenResponse","existingToken","incoming","existing","auth_time","azp","State","_State","created","request_type","toStorageString","fromStorageString","storageString","clearStaleState","storage","age","cutoff","i","SigninState","_SigninState","code_challenge","_SigninRequest","state_data","dpopJkt","optionalParams","searchParams","stateParam","resources","r","SigninRequest","OidcScope","SigninResponse","token_type","splitState","decodeURIComponent","split","expires_at","Number","SignoutRequest","id_token_hint","SignoutResponse","DefaultProtocolClaims","InternalRequiredProtocolClaims","ClaimsService","result","protocolClaims","claim","claims1","claims2","values","mergedValues","DPoPState","OidcClient","settings","metadataService","_validator","createSigninRequest","request","request_uri","login_hint","signinRequest","signinState","readSigninResponseState","removeState","storedStateString","processSigninResponse","dpopProof","getDpopProof","dpopStore","dpopState","processResourceOwnerPasswordCredentials","username","password","signinResponse","useRefreshToken","allowableScopes","providedScopes","s","createSignoutRequest","signoutState","readSignoutResponseState","processSignoutResponse","revokeToken","type","SessionMonitor","_userManager","_start","user","_sub","_checkSessionIFrame","intervalInSeconds","checkSessionIntervalInSeconds","stopOnError","stopCheckSessionOnError","checkSessionIFrame","_stop","monitorAnonymousSession","timerHandle","session","querySessionStatus","tmpUser","raiseEvent","events","_raiseUserSessionChanged","_raiseUserSignedOut","_raiseUserSignedIn","addUserLoaded","addUserUnloaded","_init","catch","getUser","User","_User","scopes","messageSource","AbstractChildWindow","_abort","_disposeHandlers","Set","_window","navigate","location","keepOpen","reject","listener","scriptOrigin","_dispose","add","removeEventListener","reason","close","dispose","_notifyParent","parent","targetOrigin","DefaultPopupWindowFeatures","toolbar","closePopupWindowAfterInSeconds","DefaultPopupTarget","DefaultAccessTokenExpiringNotificationTimeInSeconds","DefaultCheckSessionIntervalInSeconds","DefaultSilentRequestTimeoutInSeconds","UserManagerSettingsStore","popup_redirect_uri","popup_post_logout_redirect_uri","popupWindowFeatures","popupWindowTarget","redirectMethod","redirectTarget","iframeNotifyParentOrigin","iframeScriptOrigin","silent_redirect_uri","silentRequestTimeoutInSeconds","automaticSilentRenew","validateSubOnSilentRenew","includeIdTokenInSilentRenew","monitorSession","query_status_response_type","revokeTokenTypes","revokeTokensOnSignout","includeIdTokenInSilentSignout","accessTokenExpiringNotificationTimeInSeconds","userStore","sessionStorage","IFrameWindow","_IFrameWindow","_timeoutInSeconds","createHiddenIframe","iframe","timer","parentNode","_a2","frame","target","removeChild","notifyParent","IFrameNavigator","prepare","callback","checkForPopupClosedInterval","second","PopupWindow","popupSignal","centeredPopup","open","closed","focus","popupClosedInterval","notifyOpener","opener","PopupNavigator","RedirectNavigator","targetWindow","self","redirect","bind","promise","UserManagerEvents","_userLoaded","_userUnloaded","_silentRenewError","_userSignedIn","_userSignedOut","_userSessionChanged","removeUserLoaded","removeUserUnloaded","addSilentRenewError","removeSilentRenewError","_raiseSilentRenewError","addUserSignedIn","removeUserSignedIn","addUserSignedOut","removeUserSignedOut","addUserSessionChanged","removeUserSessionChanged","SilentRenewService","_isStarted","_retryTimer","_tokenExpiring","signinSilent","RefreshState","UserManager","redirectNavigator","popupNavigator","iframeNavigator","_client","_redirectNavigator","_popupNavigator","_iframeNavigator","_events","_silentRenewService","startSilentRenew","_sessionMonitor","_loadUser","removeUser","storeUser","signinRedirect","requestArgs","bind_authorization_code","handle","_signinStart","signinRedirectCallback","_signinEnd","signinResourceOwnerCredentials","_buildUser","signinPopup","_signin","signinPopupCallback","_useRefreshToken","verifySub","signinSilentCallback","signinCallback","signoutCallback","signoutRedirectCallback","signoutPopupCallback","signoutSilentCallback","navResponse","signoutRedirect","_signoutStart","_signoutEnd","signoutPopup","_signout","_revokeInternal","signoutRequest","signoutResponse","signoutSilent","revokeTokens","types","typesPresent","stopSilentRenew","_userStoreKey","dpopSettings","dpopKeys","version","Version","IndexedDbDPoPStore","_dbName","_storeName","createStore","str","put","promisifyRequest","transaction","delete","oncomplete","onsuccess","onabort","onerror","dbName","storeName","indexedDB","onupgradeneeded","createObjectStore","db","txMode","tx","objectStore"],"sources":["/home/user/Task-Manager/task-manager-frontend/node_modules/oidc-client-ts/dist/esm/oidc-client-ts.js"],"sourcesContent":["// src/utils/Logger.ts\nvar nopLogger = {\n  debug: () => void 0,\n  info: () => void 0,\n  warn: () => void 0,\n  error: () => void 0\n};\nvar level;\nvar logger;\nvar Log = /* @__PURE__ */ ((Log2) => {\n  Log2[Log2[\"NONE\"] = 0] = \"NONE\";\n  Log2[Log2[\"ERROR\"] = 1] = \"ERROR\";\n  Log2[Log2[\"WARN\"] = 2] = \"WARN\";\n  Log2[Log2[\"INFO\"] = 3] = \"INFO\";\n  Log2[Log2[\"DEBUG\"] = 4] = \"DEBUG\";\n  return Log2;\n})(Log || {});\n((Log2) => {\n  function reset() {\n    level = 3 /* INFO */;\n    logger = nopLogger;\n  }\n  Log2.reset = reset;\n  function setLevel(value) {\n    if (!(0 /* NONE */ <= value && value <= 4 /* DEBUG */)) {\n      throw new Error(\"Invalid log level\");\n    }\n    level = value;\n  }\n  Log2.setLevel = setLevel;\n  function setLogger(value) {\n    logger = value;\n  }\n  Log2.setLogger = setLogger;\n})(Log || (Log = {}));\nvar Logger = class _Logger {\n  constructor(_name) {\n    this._name = _name;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  debug(...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  info(...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  warn(...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  error(...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(this._name, this._method), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n  throw(err) {\n    this.error(err);\n    throw err;\n  }\n  create(method) {\n    const methodLogger = Object.create(this);\n    methodLogger._method = method;\n    methodLogger.debug(\"begin\");\n    return methodLogger;\n  }\n  static createStatic(name, staticMethod) {\n    const staticLogger = new _Logger(`${name}.${staticMethod}`);\n    staticLogger.debug(\"begin\");\n    return staticLogger;\n  }\n  static _format(name, method) {\n    const prefix = `[${name}]`;\n    return method ? `${prefix} ${method}:` : prefix;\n  }\n  /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n  // helpers for static class methods\n  static debug(name, ...args) {\n    if (level >= 4 /* DEBUG */) {\n      logger.debug(_Logger._format(name), ...args);\n    }\n  }\n  static info(name, ...args) {\n    if (level >= 3 /* INFO */) {\n      logger.info(_Logger._format(name), ...args);\n    }\n  }\n  static warn(name, ...args) {\n    if (level >= 2 /* WARN */) {\n      logger.warn(_Logger._format(name), ...args);\n    }\n  }\n  static error(name, ...args) {\n    if (level >= 1 /* ERROR */) {\n      logger.error(_Logger._format(name), ...args);\n    }\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n};\nLog.reset();\n\n// src/utils/JwtUtils.ts\nimport { jwtDecode } from \"jwt-decode\";\nvar JwtUtils = class {\n  // IMPORTANT: doesn't validate the token\n  static decode(token) {\n    try {\n      return jwtDecode(token);\n    } catch (err) {\n      Logger.error(\"JwtUtils.decode\", err);\n      throw err;\n    }\n  }\n  static async generateSignedJwt(header, payload, privateKey) {\n    const encodedHeader = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(header)));\n    const encodedPayload = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(payload)));\n    const encodedToken = `${encodedHeader}.${encodedPayload}`;\n    const signature = await window.crypto.subtle.sign(\n      {\n        name: \"ECDSA\",\n        hash: { name: \"SHA-256\" }\n      },\n      privateKey,\n      new TextEncoder().encode(encodedToken)\n    );\n    const encodedSignature = CryptoUtils.encodeBase64Url(new Uint8Array(signature));\n    return `${encodedToken}.${encodedSignature}`;\n  }\n};\n\n// src/utils/CryptoUtils.ts\nvar UUID_V4_TEMPLATE = \"10000000-1000-4000-8000-100000000000\";\nvar toBase64 = (val) => btoa([...new Uint8Array(val)].map((chr) => String.fromCharCode(chr)).join(\"\"));\nvar _CryptoUtils = class _CryptoUtils {\n  static _randomWord() {\n    const arr = new Uint32Array(1);\n    crypto.getRandomValues(arr);\n    return arr[0];\n  }\n  /**\n   * Generates RFC4122 version 4 guid\n   */\n  static generateUUIDv4() {\n    const uuid = UUID_V4_TEMPLATE.replace(\n      /[018]/g,\n      (c) => (+c ^ _CryptoUtils._randomWord() & 15 >> +c / 4).toString(16)\n    );\n    return uuid.replace(/-/g, \"\");\n  }\n  /**\n   * PKCE: Generate a code verifier\n   */\n  static generateCodeVerifier() {\n    return _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4() + _CryptoUtils.generateUUIDv4();\n  }\n  /**\n   * PKCE: Generate a code challenge\n   */\n  static async generateCodeChallenge(code_verifier) {\n    if (!crypto.subtle) {\n      throw new Error(\"Crypto.subtle is available only in secure contexts (HTTPS).\");\n    }\n    try {\n      const encoder = new TextEncoder();\n      const data = encoder.encode(code_verifier);\n      const hashed = await crypto.subtle.digest(\"SHA-256\", data);\n      return toBase64(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n    } catch (err) {\n      Logger.error(\"CryptoUtils.generateCodeChallenge\", err);\n      throw err;\n    }\n  }\n  /**\n   * Generates a base64-encoded string for a basic auth header\n   */\n  static generateBasicAuth(client_id, client_secret) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode([client_id, client_secret].join(\":\"));\n    return toBase64(data);\n  }\n  /**\n   * Generates a hash of a string using a given algorithm\n   * @param alg\n   * @param message\n   */\n  static async hash(alg, message) {\n    const msgUint8 = new TextEncoder().encode(message);\n    const hashBuffer = await crypto.subtle.digest(alg, msgUint8);\n    return new Uint8Array(hashBuffer);\n  }\n  /**\n   * Generates a rfc7638 compliant jwk thumbprint\n   * @param jwk\n   */\n  static async customCalculateJwkThumbprint(jwk) {\n    let jsonObject;\n    switch (jwk.kty) {\n      case \"RSA\":\n        jsonObject = {\n          \"e\": jwk.e,\n          \"kty\": jwk.kty,\n          \"n\": jwk.n\n        };\n        break;\n      case \"EC\":\n        jsonObject = {\n          \"crv\": jwk.crv,\n          \"kty\": jwk.kty,\n          \"x\": jwk.x,\n          \"y\": jwk.y\n        };\n        break;\n      case \"OKP\":\n        jsonObject = {\n          \"crv\": jwk.crv,\n          \"kty\": jwk.kty,\n          \"x\": jwk.x\n        };\n        break;\n      case \"oct\":\n        jsonObject = {\n          \"crv\": jwk.k,\n          \"kty\": jwk.kty\n        };\n        break;\n      default:\n        throw new Error(\"Unknown jwk type\");\n    }\n    const utf8encodedAndHashed = await _CryptoUtils.hash(\"SHA-256\", JSON.stringify(jsonObject));\n    return _CryptoUtils.encodeBase64Url(utf8encodedAndHashed);\n  }\n  static async generateDPoPProof({\n    url,\n    accessToken,\n    httpMethod,\n    keyPair,\n    nonce\n  }) {\n    let hashedToken;\n    let encodedHash;\n    const payload = {\n      \"jti\": window.crypto.randomUUID(),\n      \"htm\": httpMethod != null ? httpMethod : \"GET\",\n      \"htu\": url,\n      \"iat\": Math.floor(Date.now() / 1e3)\n    };\n    if (accessToken) {\n      hashedToken = await _CryptoUtils.hash(\"SHA-256\", accessToken);\n      encodedHash = _CryptoUtils.encodeBase64Url(hashedToken);\n      payload.ath = encodedHash;\n    }\n    if (nonce) {\n      payload.nonce = nonce;\n    }\n    try {\n      const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n      const header = {\n        \"alg\": \"ES256\",\n        \"typ\": \"dpop+jwt\",\n        \"jwk\": {\n          \"crv\": publicJwk.crv,\n          \"kty\": publicJwk.kty,\n          \"x\": publicJwk.x,\n          \"y\": publicJwk.y\n        }\n      };\n      return await JwtUtils.generateSignedJwt(header, payload, keyPair.privateKey);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw new Error(`Error exporting dpop public key: ${err.message}`);\n      } else {\n        throw err;\n      }\n    }\n  }\n  static async generateDPoPJkt(keyPair) {\n    try {\n      const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n      return await _CryptoUtils.customCalculateJwkThumbprint(publicJwk);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw new Error(`Could not retrieve dpop keys from storage: ${err.message}`);\n      } else {\n        throw err;\n      }\n    }\n  }\n  static async generateDPoPKeys() {\n    return await window.crypto.subtle.generateKey(\n      {\n        name: \"ECDSA\",\n        namedCurve: \"P-256\"\n      },\n      false,\n      [\"sign\", \"verify\"]\n    );\n  }\n};\n/**\n * Generates a base64url encoded string\n */\n_CryptoUtils.encodeBase64Url = (input) => {\n  return toBase64(input).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n};\nvar CryptoUtils = _CryptoUtils;\n\n// src/utils/Event.ts\nvar Event = class {\n  constructor(_name) {\n    this._name = _name;\n    this._callbacks = [];\n    this._logger = new Logger(`Event('${this._name}')`);\n  }\n  addHandler(cb) {\n    this._callbacks.push(cb);\n    return () => this.removeHandler(cb);\n  }\n  removeHandler(cb) {\n    const idx = this._callbacks.lastIndexOf(cb);\n    if (idx >= 0) {\n      this._callbacks.splice(idx, 1);\n    }\n  }\n  async raise(...ev) {\n    this._logger.debug(\"raise:\", ...ev);\n    for (const cb of this._callbacks) {\n      await cb(...ev);\n    }\n  }\n};\n\n// src/utils/PopupUtils.ts\nvar PopupUtils = class {\n  /**\n   * Populates a map of window features with a placement centered in front of\n   * the current window. If no explicit width is given, a default value is\n   * binned into [800, 720, 600, 480, 360] based on the current window's width.\n   */\n  static center({ ...features }) {\n    var _a, _b, _c;\n    if (features.width == null)\n      features.width = (_a = [800, 720, 600, 480].find((width) => width <= window.outerWidth / 1.618)) != null ? _a : 360;\n    (_b = features.left) != null ? _b : features.left = Math.max(0, Math.round(window.screenX + (window.outerWidth - features.width) / 2));\n    if (features.height != null)\n      (_c = features.top) != null ? _c : features.top = Math.max(0, Math.round(window.screenY + (window.outerHeight - features.height) / 2));\n    return features;\n  }\n  static serialize(features) {\n    return Object.entries(features).filter(([, value]) => value != null).map(([key, value]) => `${key}=${typeof value !== \"boolean\" ? value : value ? \"yes\" : \"no\"}`).join(\",\");\n  }\n};\n\n// src/utils/Timer.ts\nvar Timer = class _Timer extends Event {\n  constructor() {\n    super(...arguments);\n    this._logger = new Logger(`Timer('${this._name}')`);\n    this._timerHandle = null;\n    this._expiration = 0;\n    this._callback = () => {\n      const diff = this._expiration - _Timer.getEpochTime();\n      this._logger.debug(\"timer completes in\", diff);\n      if (this._expiration <= _Timer.getEpochTime()) {\n        this.cancel();\n        void super.raise();\n      }\n    };\n  }\n  // get the time\n  static getEpochTime() {\n    return Math.floor(Date.now() / 1e3);\n  }\n  init(durationInSeconds) {\n    const logger2 = this._logger.create(\"init\");\n    durationInSeconds = Math.max(Math.floor(durationInSeconds), 1);\n    const expiration = _Timer.getEpochTime() + durationInSeconds;\n    if (this.expiration === expiration && this._timerHandle) {\n      logger2.debug(\"skipping since already initialized for expiration at\", this.expiration);\n      return;\n    }\n    this.cancel();\n    logger2.debug(\"using duration\", durationInSeconds);\n    this._expiration = expiration;\n    const timerDurationInSeconds = Math.min(durationInSeconds, 5);\n    this._timerHandle = setInterval(this._callback, timerDurationInSeconds * 1e3);\n  }\n  get expiration() {\n    return this._expiration;\n  }\n  cancel() {\n    this._logger.create(\"cancel\");\n    if (this._timerHandle) {\n      clearInterval(this._timerHandle);\n      this._timerHandle = null;\n    }\n  }\n};\n\n// src/utils/UrlUtils.ts\nvar UrlUtils = class {\n  static readParams(url, responseMode = \"query\") {\n    if (!url) throw new TypeError(\"Invalid URL\");\n    const parsedUrl = new URL(url, \"http://127.0.0.1\");\n    const params = parsedUrl[responseMode === \"fragment\" ? \"hash\" : \"search\"];\n    return new URLSearchParams(params.slice(1));\n  }\n};\nvar URL_STATE_DELIMITER = \";\";\n\n// src/errors/ErrorResponse.ts\nvar ErrorResponse = class extends Error {\n  constructor(args, form) {\n    var _a, _b, _c;\n    super(args.error_description || args.error || \"\");\n    this.form = form;\n    /** Marker to detect class: \"ErrorResponse\" */\n    this.name = \"ErrorResponse\";\n    if (!args.error) {\n      Logger.error(\"ErrorResponse\", \"No error passed\");\n      throw new Error(\"No error passed\");\n    }\n    this.error = args.error;\n    this.error_description = (_a = args.error_description) != null ? _a : null;\n    this.error_uri = (_b = args.error_uri) != null ? _b : null;\n    this.state = args.userState;\n    this.session_state = (_c = args.session_state) != null ? _c : null;\n    this.url_state = args.url_state;\n  }\n};\n\n// src/errors/ErrorTimeout.ts\nvar ErrorTimeout = class extends Error {\n  constructor(message) {\n    super(message);\n    /** Marker to detect class: \"ErrorTimeout\" */\n    this.name = \"ErrorTimeout\";\n  }\n};\n\n// src/AccessTokenEvents.ts\nvar AccessTokenEvents = class {\n  constructor(args) {\n    this._logger = new Logger(\"AccessTokenEvents\");\n    this._expiringTimer = new Timer(\"Access token expiring\");\n    this._expiredTimer = new Timer(\"Access token expired\");\n    this._expiringNotificationTimeInSeconds = args.expiringNotificationTimeInSeconds;\n  }\n  load(container) {\n    const logger2 = this._logger.create(\"load\");\n    if (container.access_token && container.expires_in !== void 0) {\n      const duration = container.expires_in;\n      logger2.debug(\"access token present, remaining duration:\", duration);\n      if (duration > 0) {\n        let expiring = duration - this._expiringNotificationTimeInSeconds;\n        if (expiring <= 0) {\n          expiring = 1;\n        }\n        logger2.debug(\"registering expiring timer, raising in\", expiring, \"seconds\");\n        this._expiringTimer.init(expiring);\n      } else {\n        logger2.debug(\"canceling existing expiring timer because we're past expiration.\");\n        this._expiringTimer.cancel();\n      }\n      const expired = duration + 1;\n      logger2.debug(\"registering expired timer, raising in\", expired, \"seconds\");\n      this._expiredTimer.init(expired);\n    } else {\n      this._expiringTimer.cancel();\n      this._expiredTimer.cancel();\n    }\n  }\n  unload() {\n    this._logger.debug(\"unload: canceling existing access token timers\");\n    this._expiringTimer.cancel();\n    this._expiredTimer.cancel();\n  }\n  /**\n   * Add callback: Raised prior to the access token expiring.\n   */\n  addAccessTokenExpiring(cb) {\n    return this._expiringTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised prior to the access token expiring.\n   */\n  removeAccessTokenExpiring(cb) {\n    this._expiringTimer.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised after the access token has expired.\n   */\n  addAccessTokenExpired(cb) {\n    return this._expiredTimer.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised after the access token has expired.\n   */\n  removeAccessTokenExpired(cb) {\n    this._expiredTimer.removeHandler(cb);\n  }\n};\n\n// src/CheckSessionIFrame.ts\nvar CheckSessionIFrame = class {\n  constructor(_callback, _client_id, url, _intervalInSeconds, _stopOnError) {\n    this._callback = _callback;\n    this._client_id = _client_id;\n    this._intervalInSeconds = _intervalInSeconds;\n    this._stopOnError = _stopOnError;\n    this._logger = new Logger(\"CheckSessionIFrame\");\n    this._timer = null;\n    this._session_state = null;\n    this._message = (e) => {\n      if (e.origin === this._frame_origin && e.source === this._frame.contentWindow) {\n        if (e.data === \"error\") {\n          this._logger.error(\"error message from check session op iframe\");\n          if (this._stopOnError) {\n            this.stop();\n          }\n        } else if (e.data === \"changed\") {\n          this._logger.debug(\"changed message from check session op iframe\");\n          this.stop();\n          void this._callback();\n        } else {\n          this._logger.debug(e.data + \" message from check session op iframe\");\n        }\n      }\n    };\n    const parsedUrl = new URL(url);\n    this._frame_origin = parsedUrl.origin;\n    this._frame = window.document.createElement(\"iframe\");\n    this._frame.style.visibility = \"hidden\";\n    this._frame.style.position = \"fixed\";\n    this._frame.style.left = \"-1000px\";\n    this._frame.style.top = \"0\";\n    this._frame.width = \"0\";\n    this._frame.height = \"0\";\n    this._frame.src = parsedUrl.href;\n  }\n  load() {\n    return new Promise((resolve) => {\n      this._frame.onload = () => {\n        resolve();\n      };\n      window.document.body.appendChild(this._frame);\n      window.addEventListener(\"message\", this._message, false);\n    });\n  }\n  start(session_state) {\n    if (this._session_state === session_state) {\n      return;\n    }\n    this._logger.create(\"start\");\n    this.stop();\n    this._session_state = session_state;\n    const send = () => {\n      if (!this._frame.contentWindow || !this._session_state) {\n        return;\n      }\n      this._frame.contentWindow.postMessage(this._client_id + \" \" + this._session_state, this._frame_origin);\n    };\n    send();\n    this._timer = setInterval(send, this._intervalInSeconds * 1e3);\n  }\n  stop() {\n    this._logger.create(\"stop\");\n    this._session_state = null;\n    if (this._timer) {\n      clearInterval(this._timer);\n      this._timer = null;\n    }\n  }\n};\n\n// src/InMemoryWebStorage.ts\nvar InMemoryWebStorage = class {\n  constructor() {\n    this._logger = new Logger(\"InMemoryWebStorage\");\n    this._data = {};\n  }\n  clear() {\n    this._logger.create(\"clear\");\n    this._data = {};\n  }\n  getItem(key) {\n    this._logger.create(`getItem('${key}')`);\n    return this._data[key];\n  }\n  setItem(key, value) {\n    this._logger.create(`setItem('${key}')`);\n    this._data[key] = value;\n  }\n  removeItem(key) {\n    this._logger.create(`removeItem('${key}')`);\n    delete this._data[key];\n  }\n  get length() {\n    return Object.getOwnPropertyNames(this._data).length;\n  }\n  key(index) {\n    return Object.getOwnPropertyNames(this._data)[index];\n  }\n};\n\n// src/errors/ErrorDPoPNonce.ts\nvar ErrorDPoPNonce = class extends Error {\n  constructor(nonce, message) {\n    super(message);\n    /** Marker to detect class: \"ErrorDPoPNonce\" */\n    this.name = \"ErrorDPoPNonce\";\n    this.nonce = nonce;\n  }\n};\n\n// src/JsonService.ts\nvar JsonService = class {\n  constructor(additionalContentTypes = [], _jwtHandler = null, _extraHeaders = {}) {\n    this._jwtHandler = _jwtHandler;\n    this._extraHeaders = _extraHeaders;\n    this._logger = new Logger(\"JsonService\");\n    this._contentTypes = [];\n    this._contentTypes.push(...additionalContentTypes, \"application/json\");\n    if (_jwtHandler) {\n      this._contentTypes.push(\"application/jwt\");\n    }\n  }\n  async fetchWithTimeout(input, init = {}) {\n    const { timeoutInSeconds, ...initFetch } = init;\n    if (!timeoutInSeconds) {\n      return await fetch(input, initFetch);\n    }\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutInSeconds * 1e3);\n    try {\n      const response = await fetch(input, {\n        ...init,\n        signal: controller.signal\n      });\n      return response;\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"AbortError\") {\n        throw new ErrorTimeout(\"Network timed out\");\n      }\n      throw err;\n    } finally {\n      clearTimeout(timeoutId);\n    }\n  }\n  async getJson(url, {\n    token,\n    credentials,\n    timeoutInSeconds\n  } = {}) {\n    const logger2 = this._logger.create(\"getJson\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \")\n    };\n    if (token) {\n      logger2.debug(\"token passed, setting Authorization header\");\n      headers[\"Authorization\"] = \"Bearer \" + token;\n    }\n    this.appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, { method: \"GET\", headers, timeoutInSeconds, credentials });\n    } catch (err) {\n      logger2.error(\"Network Error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find((item) => contentType.startsWith(item))) {\n      logger2.throw(new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`));\n    }\n    if (response.ok && this._jwtHandler && (contentType == null ? void 0 : contentType.startsWith(\"application/jwt\"))) {\n      return await this._jwtHandler(await response.text());\n    }\n    let json;\n    try {\n      json = await response.json();\n    } catch (err) {\n      logger2.error(\"Error parsing JSON response\", err);\n      if (response.ok) throw err;\n      throw new Error(`${response.statusText} (${response.status})`);\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (json.error) {\n        throw new ErrorResponse(json);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  async postForm(url, {\n    body,\n    basicAuth,\n    timeoutInSeconds,\n    initCredentials,\n    extraHeaders\n  }) {\n    const logger2 = this._logger.create(\"postForm\");\n    const headers = {\n      \"Accept\": this._contentTypes.join(\", \"),\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      ...extraHeaders\n    };\n    if (basicAuth !== void 0) {\n      headers[\"Authorization\"] = \"Basic \" + basicAuth;\n    }\n    this.appendExtraHeaders(headers);\n    let response;\n    try {\n      logger2.debug(\"url:\", url);\n      response = await this.fetchWithTimeout(url, { method: \"POST\", headers, body, timeoutInSeconds, credentials: initCredentials });\n    } catch (err) {\n      logger2.error(\"Network error\");\n      throw err;\n    }\n    logger2.debug(\"HTTP response received, status\", response.status);\n    const contentType = response.headers.get(\"Content-Type\");\n    if (contentType && !this._contentTypes.find((item) => contentType.startsWith(item))) {\n      throw new Error(`Invalid response Content-Type: ${contentType != null ? contentType : \"undefined\"}, from URL: ${url}`);\n    }\n    const responseText = await response.text();\n    let json = {};\n    if (responseText) {\n      try {\n        json = JSON.parse(responseText);\n      } catch (err) {\n        logger2.error(\"Error parsing JSON response\", err);\n        if (response.ok) throw err;\n        throw new Error(`${response.statusText} (${response.status})`);\n      }\n    }\n    if (!response.ok) {\n      logger2.error(\"Error from server:\", json);\n      if (response.headers.has(\"dpop-nonce\")) {\n        const nonce = response.headers.get(\"dpop-nonce\");\n        throw new ErrorDPoPNonce(nonce, `${JSON.stringify(json)}`);\n      }\n      if (json.error) {\n        throw new ErrorResponse(json, body);\n      }\n      throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n    }\n    return json;\n  }\n  appendExtraHeaders(headers) {\n    const logger2 = this._logger.create(\"appendExtraHeaders\");\n    const customKeys = Object.keys(this._extraHeaders);\n    const protectedHeaders = [\n      \"authorization\",\n      \"accept\",\n      \"content-type\"\n    ];\n    if (customKeys.length === 0) {\n      return;\n    }\n    customKeys.forEach((headerName) => {\n      if (protectedHeaders.includes(headerName.toLocaleLowerCase())) {\n        logger2.warn(\"Protected header could not be overridden\", headerName, protectedHeaders);\n        return;\n      }\n      const content = typeof this._extraHeaders[headerName] === \"function\" ? this._extraHeaders[headerName]() : this._extraHeaders[headerName];\n      if (content && content !== \"\") {\n        headers[headerName] = content;\n      }\n    });\n  }\n};\n\n// src/MetadataService.ts\nvar MetadataService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"MetadataService\");\n    this._signingKeys = null;\n    this._metadata = null;\n    this._metadataUrl = this._settings.metadataUrl;\n    this._jsonService = new JsonService(\n      [\"application/jwk-set+json\"],\n      null,\n      this._settings.extraHeaders\n    );\n    if (this._settings.signingKeys) {\n      this._logger.debug(\"using signingKeys from settings\");\n      this._signingKeys = this._settings.signingKeys;\n    }\n    if (this._settings.metadata) {\n      this._logger.debug(\"using metadata from settings\");\n      this._metadata = this._settings.metadata;\n    }\n    if (this._settings.fetchRequestCredentials) {\n      this._logger.debug(\"using fetchRequestCredentials from settings\");\n      this._fetchRequestCredentials = this._settings.fetchRequestCredentials;\n    }\n  }\n  resetSigningKeys() {\n    this._signingKeys = null;\n  }\n  async getMetadata() {\n    const logger2 = this._logger.create(\"getMetadata\");\n    if (this._metadata) {\n      logger2.debug(\"using cached values\");\n      return this._metadata;\n    }\n    if (!this._metadataUrl) {\n      logger2.throw(new Error(\"No authority or metadataUrl configured on settings\"));\n      throw null;\n    }\n    logger2.debug(\"getting metadata from\", this._metadataUrl);\n    const metadata = await this._jsonService.getJson(this._metadataUrl, { credentials: this._fetchRequestCredentials, timeoutInSeconds: this._settings.requestTimeoutInSeconds });\n    logger2.debug(\"merging remote JSON with seed metadata\");\n    this._metadata = Object.assign({}, this._settings.metadataSeed, metadata);\n    return this._metadata;\n  }\n  getIssuer() {\n    return this._getMetadataProperty(\"issuer\");\n  }\n  getAuthorizationEndpoint() {\n    return this._getMetadataProperty(\"authorization_endpoint\");\n  }\n  getUserInfoEndpoint() {\n    return this._getMetadataProperty(\"userinfo_endpoint\");\n  }\n  getTokenEndpoint(optional = true) {\n    return this._getMetadataProperty(\"token_endpoint\", optional);\n  }\n  getCheckSessionIframe() {\n    return this._getMetadataProperty(\"check_session_iframe\", true);\n  }\n  getEndSessionEndpoint() {\n    return this._getMetadataProperty(\"end_session_endpoint\", true);\n  }\n  getRevocationEndpoint(optional = true) {\n    return this._getMetadataProperty(\"revocation_endpoint\", optional);\n  }\n  getKeysEndpoint(optional = true) {\n    return this._getMetadataProperty(\"jwks_uri\", optional);\n  }\n  async _getMetadataProperty(name, optional = false) {\n    const logger2 = this._logger.create(`_getMetadataProperty('${name}')`);\n    const metadata = await this.getMetadata();\n    logger2.debug(\"resolved\");\n    if (metadata[name] === void 0) {\n      if (optional === true) {\n        logger2.warn(\"Metadata does not contain optional property\");\n        return void 0;\n      }\n      logger2.throw(new Error(\"Metadata does not contain property \" + name));\n    }\n    return metadata[name];\n  }\n  async getSigningKeys() {\n    const logger2 = this._logger.create(\"getSigningKeys\");\n    if (this._signingKeys) {\n      logger2.debug(\"returning signingKeys from cache\");\n      return this._signingKeys;\n    }\n    const jwks_uri = await this.getKeysEndpoint(false);\n    logger2.debug(\"got jwks_uri\", jwks_uri);\n    const keySet = await this._jsonService.getJson(jwks_uri, { timeoutInSeconds: this._settings.requestTimeoutInSeconds });\n    logger2.debug(\"got key set\", keySet);\n    if (!Array.isArray(keySet.keys)) {\n      logger2.throw(new Error(\"Missing keys on keyset\"));\n      throw null;\n    }\n    this._signingKeys = keySet.keys;\n    return this._signingKeys;\n  }\n};\n\n// src/WebStorageStateStore.ts\nvar WebStorageStateStore = class {\n  constructor({\n    prefix = \"oidc.\",\n    store = localStorage\n  } = {}) {\n    this._logger = new Logger(\"WebStorageStateStore\");\n    this._store = store;\n    this._prefix = prefix;\n  }\n  async set(key, value) {\n    this._logger.create(`set('${key}')`);\n    key = this._prefix + key;\n    await this._store.setItem(key, value);\n  }\n  async get(key) {\n    this._logger.create(`get('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    return item;\n  }\n  async remove(key) {\n    this._logger.create(`remove('${key}')`);\n    key = this._prefix + key;\n    const item = await this._store.getItem(key);\n    await this._store.removeItem(key);\n    return item;\n  }\n  async getAllKeys() {\n    this._logger.create(\"getAllKeys\");\n    const len = await this._store.length;\n    const keys = [];\n    for (let index = 0; index < len; index++) {\n      const key = await this._store.key(index);\n      if (key && key.indexOf(this._prefix) === 0) {\n        keys.push(key.substr(this._prefix.length));\n      }\n    }\n    return keys;\n  }\n};\n\n// src/OidcClientSettings.ts\nvar DefaultResponseType = \"code\";\nvar DefaultScope = \"openid\";\nvar DefaultClientAuthentication = \"client_secret_post\";\nvar DefaultStaleStateAgeInSeconds = 60 * 15;\nvar OidcClientSettingsStore = class {\n  constructor({\n    // metadata related\n    authority,\n    metadataUrl,\n    metadata,\n    signingKeys,\n    metadataSeed,\n    // client related\n    client_id,\n    client_secret,\n    response_type = DefaultResponseType,\n    scope = DefaultScope,\n    redirect_uri,\n    post_logout_redirect_uri,\n    client_authentication = DefaultClientAuthentication,\n    // optional protocol\n    prompt,\n    display,\n    max_age,\n    ui_locales,\n    acr_values,\n    resource,\n    response_mode,\n    // behavior flags\n    filterProtocolClaims = true,\n    loadUserInfo = false,\n    requestTimeoutInSeconds,\n    staleStateAgeInSeconds = DefaultStaleStateAgeInSeconds,\n    mergeClaimsStrategy = { array: \"replace\" },\n    disablePKCE = false,\n    // other behavior\n    stateStore,\n    revokeTokenAdditionalContentTypes,\n    fetchRequestCredentials,\n    refreshTokenAllowedScope,\n    // extra\n    extraQueryParams = {},\n    extraTokenParams = {},\n    extraHeaders = {},\n    dpop,\n    omitScopeWhenRequesting = false\n  }) {\n    var _a;\n    this.authority = authority;\n    if (metadataUrl) {\n      this.metadataUrl = metadataUrl;\n    } else {\n      this.metadataUrl = authority;\n      if (authority) {\n        if (!this.metadataUrl.endsWith(\"/\")) {\n          this.metadataUrl += \"/\";\n        }\n        this.metadataUrl += \".well-known/openid-configuration\";\n      }\n    }\n    this.metadata = metadata;\n    this.metadataSeed = metadataSeed;\n    this.signingKeys = signingKeys;\n    this.client_id = client_id;\n    this.client_secret = client_secret;\n    this.response_type = response_type;\n    this.scope = scope;\n    this.redirect_uri = redirect_uri;\n    this.post_logout_redirect_uri = post_logout_redirect_uri;\n    this.client_authentication = client_authentication;\n    this.prompt = prompt;\n    this.display = display;\n    this.max_age = max_age;\n    this.ui_locales = ui_locales;\n    this.acr_values = acr_values;\n    this.resource = resource;\n    this.response_mode = response_mode;\n    this.filterProtocolClaims = filterProtocolClaims != null ? filterProtocolClaims : true;\n    this.loadUserInfo = !!loadUserInfo;\n    this.staleStateAgeInSeconds = staleStateAgeInSeconds;\n    this.mergeClaimsStrategy = mergeClaimsStrategy;\n    this.omitScopeWhenRequesting = omitScopeWhenRequesting;\n    this.disablePKCE = !!disablePKCE;\n    this.revokeTokenAdditionalContentTypes = revokeTokenAdditionalContentTypes;\n    this.fetchRequestCredentials = fetchRequestCredentials ? fetchRequestCredentials : \"same-origin\";\n    this.requestTimeoutInSeconds = requestTimeoutInSeconds;\n    if (stateStore) {\n      this.stateStore = stateStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.localStorage : new InMemoryWebStorage();\n      this.stateStore = new WebStorageStateStore({ store });\n    }\n    this.refreshTokenAllowedScope = refreshTokenAllowedScope;\n    this.extraQueryParams = extraQueryParams;\n    this.extraTokenParams = extraTokenParams;\n    this.extraHeaders = extraHeaders;\n    this.dpop = dpop;\n    if (this.dpop && !((_a = this.dpop) == null ? void 0 : _a.store)) {\n      throw new Error(\"A DPoPStore is required when dpop is enabled\");\n    }\n  }\n};\n\n// src/UserInfoService.ts\nvar UserInfoService = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"UserInfoService\");\n    this._getClaimsFromJwt = async (responseText) => {\n      const logger2 = this._logger.create(\"_getClaimsFromJwt\");\n      try {\n        const payload = JwtUtils.decode(responseText);\n        logger2.debug(\"JWT decoding successful\");\n        return payload;\n      } catch (err) {\n        logger2.error(\"Error parsing JWT response\");\n        throw err;\n      }\n    };\n    this._jsonService = new JsonService(\n      void 0,\n      this._getClaimsFromJwt,\n      this._settings.extraHeaders\n    );\n  }\n  async getClaims(token) {\n    const logger2 = this._logger.create(\"getClaims\");\n    if (!token) {\n      this._logger.throw(new Error(\"No token passed\"));\n    }\n    const url = await this._metadataService.getUserInfoEndpoint();\n    logger2.debug(\"got userinfo url\", url);\n    const claims = await this._jsonService.getJson(url, {\n      token,\n      credentials: this._settings.fetchRequestCredentials,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds\n    });\n    logger2.debug(\"got claims\", claims);\n    return claims;\n  }\n};\n\n// src/TokenClient.ts\nvar TokenClient = class {\n  constructor(_settings, _metadataService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._logger = new Logger(\"TokenClient\");\n    this._jsonService = new JsonService(\n      this._settings.revokeTokenAdditionalContentTypes,\n      null,\n      this._settings.extraHeaders\n    );\n  }\n  /**\n   * Exchange code.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n   */\n  async exchangeCode({\n    grant_type = \"authorization_code\",\n    redirect_uri = this._settings.redirect_uri,\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    extraHeaders,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCode\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!redirect_uri) {\n      logger2.throw(new Error(\"A redirect_uri is required\"));\n    }\n    if (!args.code) {\n      logger2.throw(new Error(\"A code is required\"));\n    }\n    const params = new URLSearchParams({ grant_type, redirect_uri });\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, {\n      body: params,\n      basicAuth,\n      timeoutInSeconds: this._settings.requestTimeoutInSeconds,\n      initCredentials: this._settings.fetchRequestCredentials,\n      extraHeaders\n    });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange credentials.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.3.2\n   */\n  async exchangeCredentials({\n    grant_type = \"password\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    scope = this._settings.scope,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeCredentials\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    const params = new URLSearchParams({ grant_type });\n    if (!this._settings.omitScopeWhenRequesting) {\n      params.set(\"scope\", scope);\n    }\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds: this._settings.requestTimeoutInSeconds, initCredentials: this._settings.fetchRequestCredentials });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Exchange a refresh token.\n   *\n   * @see https://www.rfc-editor.org/rfc/rfc6749#section-6\n   */\n  async exchangeRefreshToken({\n    grant_type = \"refresh_token\",\n    client_id = this._settings.client_id,\n    client_secret = this._settings.client_secret,\n    timeoutInSeconds,\n    extraHeaders,\n    ...args\n  }) {\n    const logger2 = this._logger.create(\"exchangeRefreshToken\");\n    if (!client_id) {\n      logger2.throw(new Error(\"A client_id is required\"));\n    }\n    if (!args.refresh_token) {\n      logger2.throw(new Error(\"A refresh_token is required\"));\n    }\n    const params = new URLSearchParams({ grant_type });\n    for (const [key, value] of Object.entries(args)) {\n      if (Array.isArray(value)) {\n        value.forEach((param) => params.append(key, param));\n      } else if (value != null) {\n        params.set(key, value);\n      }\n    }\n    let basicAuth;\n    switch (this._settings.client_authentication) {\n      case \"client_secret_basic\":\n        if (!client_secret) {\n          logger2.throw(new Error(\"A client_secret is required\"));\n          throw null;\n        }\n        basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n        break;\n      case \"client_secret_post\":\n        params.append(\"client_id\", client_id);\n        if (client_secret) {\n          params.append(\"client_secret\", client_secret);\n        }\n        break;\n    }\n    const url = await this._metadataService.getTokenEndpoint(false);\n    logger2.debug(\"got token endpoint\");\n    const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds, initCredentials: this._settings.fetchRequestCredentials, extraHeaders });\n    logger2.debug(\"got response\");\n    return response;\n  }\n  /**\n   * Revoke an access or refresh token.\n   *\n   * @see https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n   */\n  async revoke(args) {\n    var _a;\n    const logger2 = this._logger.create(\"revoke\");\n    if (!args.token) {\n      logger2.throw(new Error(\"A token is required\"));\n    }\n    const url = await this._metadataService.getRevocationEndpoint(false);\n    logger2.debug(`got revocation endpoint, revoking ${(_a = args.token_type_hint) != null ? _a : \"default token type\"}`);\n    const params = new URLSearchParams();\n    for (const [key, value] of Object.entries(args)) {\n      if (value != null) {\n        params.set(key, value);\n      }\n    }\n    params.set(\"client_id\", this._settings.client_id);\n    if (this._settings.client_secret) {\n      params.set(\"client_secret\", this._settings.client_secret);\n    }\n    await this._jsonService.postForm(url, { body: params, timeoutInSeconds: this._settings.requestTimeoutInSeconds });\n    logger2.debug(\"got response\");\n  }\n};\n\n// src/ResponseValidator.ts\nvar ResponseValidator = class {\n  constructor(_settings, _metadataService, _claimsService) {\n    this._settings = _settings;\n    this._metadataService = _metadataService;\n    this._claimsService = _claimsService;\n    this._logger = new Logger(\"ResponseValidator\");\n    this._userInfoService = new UserInfoService(this._settings, this._metadataService);\n    this._tokenClient = new TokenClient(this._settings, this._metadataService);\n  }\n  async validateSigninResponse(response, state, extraHeaders) {\n    const logger2 = this._logger.create(\"validateSigninResponse\");\n    this._processSigninState(response, state);\n    logger2.debug(\"state processed\");\n    await this._processCode(response, state, extraHeaders);\n    logger2.debug(\"code processed\");\n    if (response.isOpenId) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, state == null ? void 0 : state.skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateCredentialsResponse(response, skipUserInfo) {\n    const logger2 = this._logger.create(\"validateCredentialsResponse\");\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response);\n    }\n    logger2.debug(\"tokens validated\");\n    await this._processClaims(response, skipUserInfo, response.isOpenId);\n    logger2.debug(\"claims processed\");\n  }\n  async validateRefreshResponse(response, state) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"validateRefreshResponse\");\n    response.userState = state.data;\n    (_a = response.session_state) != null ? _a : response.session_state = state.session_state;\n    (_b = response.scope) != null ? _b : response.scope = state.scope;\n    if (response.isOpenId && !!response.id_token) {\n      this._validateIdTokenAttributes(response, state.id_token);\n      logger2.debug(\"ID Token validated\");\n    }\n    if (!response.id_token) {\n      response.id_token = state.id_token;\n      response.profile = state.profile;\n    }\n    const hasIdToken = response.isOpenId && !!response.id_token;\n    await this._processClaims(response, false, hasIdToken);\n    logger2.debug(\"claims processed\");\n  }\n  validateSignoutResponse(response, state) {\n    const logger2 = this._logger.create(\"validateSignoutResponse\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n  }\n  _processSigninState(response, state) {\n    var _a;\n    const logger2 = this._logger.create(\"_processSigninState\");\n    if (state.id !== response.state) {\n      logger2.throw(new Error(\"State does not match\"));\n    }\n    if (!state.client_id) {\n      logger2.throw(new Error(\"No client_id on state\"));\n    }\n    if (!state.authority) {\n      logger2.throw(new Error(\"No authority on state\"));\n    }\n    if (this._settings.authority !== state.authority) {\n      logger2.throw(new Error(\"authority mismatch on settings vs. signin state\"));\n    }\n    if (this._settings.client_id && this._settings.client_id !== state.client_id) {\n      logger2.throw(new Error(\"client_id mismatch on settings vs. signin state\"));\n    }\n    logger2.debug(\"state validated\");\n    response.userState = state.data;\n    response.url_state = state.url_state;\n    (_a = response.scope) != null ? _a : response.scope = state.scope;\n    if (response.error) {\n      logger2.warn(\"Response was error\", response.error);\n      throw new ErrorResponse(response);\n    }\n    if (state.code_verifier && !response.code) {\n      logger2.throw(new Error(\"Expected code in response\"));\n    }\n  }\n  async _processClaims(response, skipUserInfo = false, validateSub = true) {\n    const logger2 = this._logger.create(\"_processClaims\");\n    response.profile = this._claimsService.filterProtocolClaims(response.profile);\n    if (skipUserInfo || !this._settings.loadUserInfo || !response.access_token) {\n      logger2.debug(\"not loading user info\");\n      return;\n    }\n    logger2.debug(\"loading user info\");\n    const claims = await this._userInfoService.getClaims(response.access_token);\n    logger2.debug(\"user info claims received from user info endpoint\");\n    if (validateSub && claims.sub !== response.profile.sub) {\n      logger2.throw(new Error(\"subject from UserInfo response does not match subject in ID Token\"));\n    }\n    response.profile = this._claimsService.mergeClaims(response.profile, this._claimsService.filterProtocolClaims(claims));\n    logger2.debug(\"user info claims received, updated profile:\", response.profile);\n  }\n  async _processCode(response, state, extraHeaders) {\n    const logger2 = this._logger.create(\"_processCode\");\n    if (response.code) {\n      logger2.debug(\"Validating code\");\n      const tokenResponse = await this._tokenClient.exchangeCode({\n        client_id: state.client_id,\n        client_secret: state.client_secret,\n        code: response.code,\n        redirect_uri: state.redirect_uri,\n        code_verifier: state.code_verifier,\n        extraHeaders,\n        ...state.extraTokenParams\n      });\n      Object.assign(response, tokenResponse);\n    } else {\n      logger2.debug(\"No code to process\");\n    }\n  }\n  _validateIdTokenAttributes(response, existingToken) {\n    var _a;\n    const logger2 = this._logger.create(\"_validateIdTokenAttributes\");\n    logger2.debug(\"decoding ID Token JWT\");\n    const incoming = JwtUtils.decode((_a = response.id_token) != null ? _a : \"\");\n    if (!incoming.sub) {\n      logger2.throw(new Error(\"ID Token is missing a subject claim\"));\n    }\n    if (existingToken) {\n      const existing = JwtUtils.decode(existingToken);\n      if (incoming.sub !== existing.sub) {\n        logger2.throw(new Error(\"sub in id_token does not match current sub\"));\n      }\n      if (incoming.auth_time && incoming.auth_time !== existing.auth_time) {\n        logger2.throw(new Error(\"auth_time in id_token does not match original auth_time\"));\n      }\n      if (incoming.azp && incoming.azp !== existing.azp) {\n        logger2.throw(new Error(\"azp in id_token does not match original azp\"));\n      }\n      if (!incoming.azp && existing.azp) {\n        logger2.throw(new Error(\"azp not in id_token, but present in original id_token\"));\n      }\n    }\n    response.profile = incoming;\n  }\n};\n\n// src/State.ts\nvar State = class _State {\n  constructor(args) {\n    this.id = args.id || CryptoUtils.generateUUIDv4();\n    this.data = args.data;\n    if (args.created && args.created > 0) {\n      this.created = args.created;\n    } else {\n      this.created = Timer.getEpochTime();\n    }\n    this.request_type = args.request_type;\n    this.url_state = args.url_state;\n  }\n  toStorageString() {\n    new Logger(\"State\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"State\", \"fromStorageString\");\n    return Promise.resolve(new _State(JSON.parse(storageString)));\n  }\n  static async clearStaleState(storage, age) {\n    const logger2 = Logger.createStatic(\"State\", \"clearStaleState\");\n    const cutoff = Timer.getEpochTime() - age;\n    const keys = await storage.getAllKeys();\n    logger2.debug(\"got keys\", keys);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const item = await storage.get(key);\n      let remove = false;\n      if (item) {\n        try {\n          const state = await _State.fromStorageString(item);\n          logger2.debug(\"got item from key:\", key, state.created);\n          if (state.created <= cutoff) {\n            remove = true;\n          }\n        } catch (err) {\n          logger2.error(\"Error parsing state for key:\", key, err);\n          remove = true;\n        }\n      } else {\n        logger2.debug(\"no item in storage for key:\", key);\n        remove = true;\n      }\n      if (remove) {\n        logger2.debug(\"removed item for key:\", key);\n        void storage.remove(key);\n      }\n    }\n  }\n};\n\n// src/SigninState.ts\nvar SigninState = class _SigninState extends State {\n  constructor(args) {\n    super(args);\n    this.code_verifier = args.code_verifier;\n    this.code_challenge = args.code_challenge;\n    this.authority = args.authority;\n    this.client_id = args.client_id;\n    this.redirect_uri = args.redirect_uri;\n    this.scope = args.scope;\n    this.client_secret = args.client_secret;\n    this.extraTokenParams = args.extraTokenParams;\n    this.response_mode = args.response_mode;\n    this.skipUserInfo = args.skipUserInfo;\n  }\n  static async create(args) {\n    const code_verifier = args.code_verifier === true ? CryptoUtils.generateCodeVerifier() : args.code_verifier || void 0;\n    const code_challenge = code_verifier ? await CryptoUtils.generateCodeChallenge(code_verifier) : void 0;\n    return new _SigninState({\n      ...args,\n      code_verifier,\n      code_challenge\n    });\n  }\n  toStorageString() {\n    new Logger(\"SigninState\").create(\"toStorageString\");\n    return JSON.stringify({\n      id: this.id,\n      data: this.data,\n      created: this.created,\n      request_type: this.request_type,\n      url_state: this.url_state,\n      code_verifier: this.code_verifier,\n      authority: this.authority,\n      client_id: this.client_id,\n      redirect_uri: this.redirect_uri,\n      scope: this.scope,\n      client_secret: this.client_secret,\n      extraTokenParams: this.extraTokenParams,\n      response_mode: this.response_mode,\n      skipUserInfo: this.skipUserInfo\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"SigninState\", \"fromStorageString\");\n    const data = JSON.parse(storageString);\n    return _SigninState.create(data);\n  }\n};\n\n// src/SigninRequest.ts\nvar _SigninRequest = class _SigninRequest {\n  constructor(args) {\n    this.url = args.url;\n    this.state = args.state;\n  }\n  static async create({\n    // mandatory\n    url,\n    authority,\n    client_id,\n    redirect_uri,\n    response_type,\n    scope,\n    // optional\n    state_data,\n    response_mode,\n    request_type,\n    client_secret,\n    nonce,\n    url_state,\n    resource,\n    skipUserInfo,\n    extraQueryParams,\n    extraTokenParams,\n    disablePKCE,\n    dpopJkt,\n    omitScopeWhenRequesting,\n    ...optionalParams\n  }) {\n    if (!url) {\n      this._logger.error(\"create: No url passed\");\n      throw new Error(\"url\");\n    }\n    if (!client_id) {\n      this._logger.error(\"create: No client_id passed\");\n      throw new Error(\"client_id\");\n    }\n    if (!redirect_uri) {\n      this._logger.error(\"create: No redirect_uri passed\");\n      throw new Error(\"redirect_uri\");\n    }\n    if (!response_type) {\n      this._logger.error(\"create: No response_type passed\");\n      throw new Error(\"response_type\");\n    }\n    if (!scope) {\n      this._logger.error(\"create: No scope passed\");\n      throw new Error(\"scope\");\n    }\n    if (!authority) {\n      this._logger.error(\"create: No authority passed\");\n      throw new Error(\"authority\");\n    }\n    const state = await SigninState.create({\n      data: state_data,\n      request_type,\n      url_state,\n      code_verifier: !disablePKCE,\n      client_id,\n      authority,\n      redirect_uri,\n      response_mode,\n      client_secret,\n      scope,\n      extraTokenParams,\n      skipUserInfo\n    });\n    const parsedUrl = new URL(url);\n    parsedUrl.searchParams.append(\"client_id\", client_id);\n    parsedUrl.searchParams.append(\"redirect_uri\", redirect_uri);\n    parsedUrl.searchParams.append(\"response_type\", response_type);\n    if (!omitScopeWhenRequesting) {\n      parsedUrl.searchParams.append(\"scope\", scope);\n    }\n    if (nonce) {\n      parsedUrl.searchParams.append(\"nonce\", nonce);\n    }\n    if (dpopJkt) {\n      parsedUrl.searchParams.append(\"dpop_jkt\", dpopJkt);\n    }\n    let stateParam = state.id;\n    if (url_state) {\n      stateParam = `${stateParam}${URL_STATE_DELIMITER}${url_state}`;\n    }\n    parsedUrl.searchParams.append(\"state\", stateParam);\n    if (state.code_challenge) {\n      parsedUrl.searchParams.append(\"code_challenge\", state.code_challenge);\n      parsedUrl.searchParams.append(\"code_challenge_method\", \"S256\");\n    }\n    if (resource) {\n      const resources = Array.isArray(resource) ? resource : [resource];\n      resources.forEach((r) => parsedUrl.searchParams.append(\"resource\", r));\n    }\n    for (const [key, value] of Object.entries({ response_mode, ...optionalParams, ...extraQueryParams })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    return new _SigninRequest({\n      url: parsedUrl.href,\n      state\n    });\n  }\n};\n_SigninRequest._logger = new Logger(\"SigninRequest\");\nvar SigninRequest = _SigninRequest;\n\n// src/SigninResponse.ts\nvar OidcScope = \"openid\";\nvar SigninResponse = class {\n  constructor(params) {\n    /** @see {@link User.access_token} */\n    this.access_token = \"\";\n    /** @see {@link User.token_type} */\n    this.token_type = \"\";\n    /** @see {@link User.profile} */\n    this.profile = {};\n    this.state = params.get(\"state\");\n    this.session_state = params.get(\"session_state\");\n    if (this.state) {\n      const splitState = decodeURIComponent(this.state).split(URL_STATE_DELIMITER);\n      this.state = splitState[0];\n      if (splitState.length > 1) {\n        this.url_state = splitState.slice(1).join(URL_STATE_DELIMITER);\n      }\n    }\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n    this.code = params.get(\"code\");\n  }\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (typeof value === \"string\") value = Number(value);\n    if (value !== void 0 && value >= 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  get isOpenId() {\n    var _a;\n    return ((_a = this.scope) == null ? void 0 : _a.split(\" \").includes(OidcScope)) || !!this.id_token;\n  }\n};\n\n// src/SignoutRequest.ts\nvar SignoutRequest = class {\n  constructor({\n    url,\n    state_data,\n    id_token_hint,\n    post_logout_redirect_uri,\n    extraQueryParams,\n    request_type,\n    client_id\n  }) {\n    this._logger = new Logger(\"SignoutRequest\");\n    if (!url) {\n      this._logger.error(\"ctor: No url passed\");\n      throw new Error(\"url\");\n    }\n    const parsedUrl = new URL(url);\n    if (id_token_hint) {\n      parsedUrl.searchParams.append(\"id_token_hint\", id_token_hint);\n    }\n    if (client_id) {\n      parsedUrl.searchParams.append(\"client_id\", client_id);\n    }\n    if (post_logout_redirect_uri) {\n      parsedUrl.searchParams.append(\"post_logout_redirect_uri\", post_logout_redirect_uri);\n      if (state_data) {\n        this.state = new State({ data: state_data, request_type });\n        parsedUrl.searchParams.append(\"state\", this.state.id);\n      }\n    }\n    for (const [key, value] of Object.entries({ ...extraQueryParams })) {\n      if (value != null) {\n        parsedUrl.searchParams.append(key, value.toString());\n      }\n    }\n    this.url = parsedUrl.href;\n  }\n};\n\n// src/SignoutResponse.ts\nvar SignoutResponse = class {\n  constructor(params) {\n    this.state = params.get(\"state\");\n    this.error = params.get(\"error\");\n    this.error_description = params.get(\"error_description\");\n    this.error_uri = params.get(\"error_uri\");\n  }\n};\n\n// src/ClaimsService.ts\nvar DefaultProtocolClaims = [\n  \"nbf\",\n  \"jti\",\n  \"auth_time\",\n  \"nonce\",\n  \"acr\",\n  \"amr\",\n  \"azp\",\n  \"at_hash\"\n  // https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\n];\nvar InternalRequiredProtocolClaims = [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"];\nvar ClaimsService = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"ClaimsService\");\n  }\n  filterProtocolClaims(claims) {\n    const result = { ...claims };\n    if (this._settings.filterProtocolClaims) {\n      let protocolClaims;\n      if (Array.isArray(this._settings.filterProtocolClaims)) {\n        protocolClaims = this._settings.filterProtocolClaims;\n      } else {\n        protocolClaims = DefaultProtocolClaims;\n      }\n      for (const claim of protocolClaims) {\n        if (!InternalRequiredProtocolClaims.includes(claim)) {\n          delete result[claim];\n        }\n      }\n    }\n    return result;\n  }\n  mergeClaims(claims1, claims2) {\n    const result = { ...claims1 };\n    for (const [claim, values] of Object.entries(claims2)) {\n      if (result[claim] !== values) {\n        if (Array.isArray(result[claim]) || Array.isArray(values)) {\n          if (this._settings.mergeClaimsStrategy.array == \"replace\") {\n            result[claim] = values;\n          } else {\n            const mergedValues = Array.isArray(result[claim]) ? result[claim] : [result[claim]];\n            for (const value of Array.isArray(values) ? values : [values]) {\n              if (!mergedValues.includes(value)) {\n                mergedValues.push(value);\n              }\n            }\n            result[claim] = mergedValues;\n          }\n        } else if (typeof result[claim] === \"object\" && typeof values === \"object\") {\n          result[claim] = this.mergeClaims(result[claim], values);\n        } else {\n          result[claim] = values;\n        }\n      }\n    }\n    return result;\n  }\n};\n\n// src/DPoPStore.ts\nvar DPoPState = class {\n  constructor(keys, nonce) {\n    this.keys = keys;\n    this.nonce = nonce;\n  }\n};\n\n// src/OidcClient.ts\nvar OidcClient = class {\n  constructor(settings, metadataService) {\n    this._logger = new Logger(\"OidcClient\");\n    this.settings = settings instanceof OidcClientSettingsStore ? settings : new OidcClientSettingsStore(settings);\n    this.metadataService = metadataService != null ? metadataService : new MetadataService(this.settings);\n    this._claimsService = new ClaimsService(this.settings);\n    this._validator = new ResponseValidator(this.settings, this.metadataService, this._claimsService);\n    this._tokenClient = new TokenClient(this.settings, this.metadataService);\n  }\n  async createSigninRequest({\n    state,\n    request,\n    request_uri,\n    request_type,\n    id_token_hint,\n    login_hint,\n    skipUserInfo,\n    nonce,\n    url_state,\n    response_type = this.settings.response_type,\n    scope = this.settings.scope,\n    redirect_uri = this.settings.redirect_uri,\n    prompt = this.settings.prompt,\n    display = this.settings.display,\n    max_age = this.settings.max_age,\n    ui_locales = this.settings.ui_locales,\n    acr_values = this.settings.acr_values,\n    resource = this.settings.resource,\n    response_mode = this.settings.response_mode,\n    extraQueryParams = this.settings.extraQueryParams,\n    extraTokenParams = this.settings.extraTokenParams,\n    dpopJkt,\n    omitScopeWhenRequesting = this.settings.omitScopeWhenRequesting\n  }) {\n    const logger2 = this._logger.create(\"createSigninRequest\");\n    if (response_type !== \"code\") {\n      throw new Error(\"Only the Authorization Code flow (with PKCE) is supported\");\n    }\n    const url = await this.metadataService.getAuthorizationEndpoint();\n    logger2.debug(\"Received authorization endpoint\", url);\n    const signinRequest = await SigninRequest.create({\n      url,\n      authority: this.settings.authority,\n      client_id: this.settings.client_id,\n      redirect_uri,\n      response_type,\n      scope,\n      state_data: state,\n      url_state,\n      prompt,\n      display,\n      max_age,\n      ui_locales,\n      id_token_hint,\n      login_hint,\n      acr_values,\n      dpopJkt,\n      resource,\n      request,\n      request_uri,\n      extraQueryParams,\n      extraTokenParams,\n      request_type,\n      response_mode,\n      client_secret: this.settings.client_secret,\n      skipUserInfo,\n      nonce,\n      disablePKCE: this.settings.disablePKCE,\n      omitScopeWhenRequesting\n    });\n    await this.clearStaleState();\n    const signinState = signinRequest.state;\n    await this.settings.stateStore.set(signinState.id, signinState.toStorageString());\n    return signinRequest;\n  }\n  async readSigninResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSigninResponseState\");\n    const response = new SigninResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.throw(new Error(\"No state in response\"));\n      throw null;\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await SigninState.fromStorageString(storedStateString);\n    return { state, response };\n  }\n  async processSigninResponse(url, extraHeaders) {\n    const logger2 = this._logger.create(\"processSigninResponse\");\n    const { state, response } = await this.readSigninResponseState(url, true);\n    logger2.debug(\"received state from storage; validating response\");\n    if (this.settings.dpop && this.settings.dpop.store) {\n      const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n      extraHeaders = { ...extraHeaders, \"DPoP\": dpopProof };\n    }\n    try {\n      await this._validator.validateSigninResponse(response, state, extraHeaders);\n    } catch (err) {\n      if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n        const dpopProof = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n        extraHeaders[\"DPoP\"] = dpopProof;\n        await this._validator.validateSigninResponse(response, state, extraHeaders);\n      } else {\n        throw err;\n      }\n    }\n    return response;\n  }\n  async getDpopProof(dpopStore, nonce) {\n    let keyPair;\n    let dpopState;\n    if (!(await dpopStore.getAllKeys()).includes(this.settings.client_id)) {\n      keyPair = await CryptoUtils.generateDPoPKeys();\n      dpopState = new DPoPState(keyPair, nonce);\n      await dpopStore.set(this.settings.client_id, dpopState);\n    } else {\n      dpopState = await dpopStore.get(this.settings.client_id);\n      if (dpopState.nonce !== nonce && nonce) {\n        dpopState.nonce = nonce;\n        await dpopStore.set(this.settings.client_id, dpopState);\n      }\n    }\n    return await CryptoUtils.generateDPoPProof({\n      url: await this.metadataService.getTokenEndpoint(false),\n      httpMethod: \"POST\",\n      keyPair: dpopState.keys,\n      nonce: dpopState.nonce\n    });\n  }\n  async processResourceOwnerPasswordCredentials({\n    username,\n    password,\n    skipUserInfo = false,\n    extraTokenParams = {}\n  }) {\n    const tokenResponse = await this._tokenClient.exchangeCredentials({ username, password, ...extraTokenParams });\n    const signinResponse = new SigninResponse(new URLSearchParams());\n    Object.assign(signinResponse, tokenResponse);\n    await this._validator.validateCredentialsResponse(signinResponse, skipUserInfo);\n    return signinResponse;\n  }\n  async useRefreshToken({\n    state,\n    redirect_uri,\n    resource,\n    timeoutInSeconds,\n    extraHeaders,\n    extraTokenParams\n  }) {\n    var _a;\n    const logger2 = this._logger.create(\"useRefreshToken\");\n    let scope;\n    if (this.settings.refreshTokenAllowedScope === void 0) {\n      scope = state.scope;\n    } else {\n      const allowableScopes = this.settings.refreshTokenAllowedScope.split(\" \");\n      const providedScopes = ((_a = state.scope) == null ? void 0 : _a.split(\" \")) || [];\n      scope = providedScopes.filter((s) => allowableScopes.includes(s)).join(\" \");\n    }\n    if (this.settings.dpop && this.settings.dpop.store) {\n      const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n      extraHeaders = { ...extraHeaders, \"DPoP\": dpopProof };\n    }\n    let result;\n    try {\n      result = await this._tokenClient.exchangeRefreshToken({\n        refresh_token: state.refresh_token,\n        // provide the (possible filtered) scope list\n        scope,\n        redirect_uri,\n        resource,\n        timeoutInSeconds,\n        extraHeaders,\n        ...extraTokenParams\n      });\n    } catch (err) {\n      if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n        extraHeaders[\"DPoP\"] = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n        result = await this._tokenClient.exchangeRefreshToken({\n          refresh_token: state.refresh_token,\n          // provide the (possible filtered) scope list\n          scope,\n          redirect_uri,\n          resource,\n          timeoutInSeconds,\n          extraHeaders,\n          ...extraTokenParams\n        });\n      } else {\n        throw err;\n      }\n    }\n    const response = new SigninResponse(new URLSearchParams());\n    Object.assign(response, result);\n    logger2.debug(\"validating response\", response);\n    await this._validator.validateRefreshResponse(response, {\n      ...state,\n      // override the scope in the state handed over to the validator\n      // so it can set the granted scope to the requested scope in case none is included in the response\n      scope\n    });\n    return response;\n  }\n  async createSignoutRequest({\n    state,\n    id_token_hint,\n    client_id,\n    request_type,\n    post_logout_redirect_uri = this.settings.post_logout_redirect_uri,\n    extraQueryParams = this.settings.extraQueryParams\n  } = {}) {\n    const logger2 = this._logger.create(\"createSignoutRequest\");\n    const url = await this.metadataService.getEndSessionEndpoint();\n    if (!url) {\n      logger2.throw(new Error(\"No end session endpoint\"));\n      throw null;\n    }\n    logger2.debug(\"Received end session endpoint\", url);\n    if (!client_id && post_logout_redirect_uri && !id_token_hint) {\n      client_id = this.settings.client_id;\n    }\n    const request = new SignoutRequest({\n      url,\n      id_token_hint,\n      client_id,\n      post_logout_redirect_uri,\n      state_data: state,\n      extraQueryParams,\n      request_type\n    });\n    await this.clearStaleState();\n    const signoutState = request.state;\n    if (signoutState) {\n      logger2.debug(\"Signout request has state to persist\");\n      await this.settings.stateStore.set(signoutState.id, signoutState.toStorageString());\n    }\n    return request;\n  }\n  async readSignoutResponseState(url, removeState = false) {\n    const logger2 = this._logger.create(\"readSignoutResponseState\");\n    const response = new SignoutResponse(UrlUtils.readParams(url, this.settings.response_mode));\n    if (!response.state) {\n      logger2.debug(\"No state in response\");\n      if (response.error) {\n        logger2.warn(\"Response was error:\", response.error);\n        throw new ErrorResponse(response);\n      }\n      return { state: void 0, response };\n    }\n    const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n    if (!storedStateString) {\n      logger2.throw(new Error(\"No matching state found in storage\"));\n      throw null;\n    }\n    const state = await State.fromStorageString(storedStateString);\n    return { state, response };\n  }\n  async processSignoutResponse(url) {\n    const logger2 = this._logger.create(\"processSignoutResponse\");\n    const { state, response } = await this.readSignoutResponseState(url, true);\n    if (state) {\n      logger2.debug(\"Received state from storage; validating response\");\n      this._validator.validateSignoutResponse(response, state);\n    } else {\n      logger2.debug(\"No state from storage; skipping response validation\");\n    }\n    return response;\n  }\n  clearStaleState() {\n    this._logger.create(\"clearStaleState\");\n    return State.clearStaleState(this.settings.stateStore, this.settings.staleStateAgeInSeconds);\n  }\n  async revokeToken(token, type) {\n    this._logger.create(\"revokeToken\");\n    return await this._tokenClient.revoke({\n      token,\n      token_type_hint: type\n    });\n  }\n};\n\n// src/SessionMonitor.ts\nvar SessionMonitor = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SessionMonitor\");\n    this._start = async (user) => {\n      const session_state = user.session_state;\n      if (!session_state) {\n        return;\n      }\n      const logger2 = this._logger.create(\"_start\");\n      if (user.profile) {\n        this._sub = user.profile.sub;\n        logger2.debug(\"session_state\", session_state, \", sub\", this._sub);\n      } else {\n        this._sub = void 0;\n        logger2.debug(\"session_state\", session_state, \", anonymous user\");\n      }\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.start(session_state);\n        return;\n      }\n      try {\n        const url = await this._userManager.metadataService.getCheckSessionIframe();\n        if (url) {\n          logger2.debug(\"initializing check session iframe\");\n          const client_id = this._userManager.settings.client_id;\n          const intervalInSeconds = this._userManager.settings.checkSessionIntervalInSeconds;\n          const stopOnError = this._userManager.settings.stopCheckSessionOnError;\n          const checkSessionIFrame = new CheckSessionIFrame(this._callback, client_id, url, intervalInSeconds, stopOnError);\n          await checkSessionIFrame.load();\n          this._checkSessionIFrame = checkSessionIFrame;\n          checkSessionIFrame.start(session_state);\n        } else {\n          logger2.warn(\"no check session iframe found in the metadata\");\n        }\n      } catch (err) {\n        logger2.error(\"Error from getCheckSessionIframe:\", err instanceof Error ? err.message : err);\n      }\n    };\n    this._stop = () => {\n      const logger2 = this._logger.create(\"_stop\");\n      this._sub = void 0;\n      if (this._checkSessionIFrame) {\n        this._checkSessionIFrame.stop();\n      }\n      if (this._userManager.settings.monitorAnonymousSession) {\n        const timerHandle = setInterval(async () => {\n          clearInterval(timerHandle);\n          try {\n            const session = await this._userManager.querySessionStatus();\n            if (session) {\n              const tmpUser = {\n                session_state: session.session_state,\n                profile: session.sub ? {\n                  sub: session.sub\n                } : null\n              };\n              void this._start(tmpUser);\n            }\n          } catch (err) {\n            logger2.error(\"error from querySessionStatus\", err instanceof Error ? err.message : err);\n          }\n        }, 1e3);\n      }\n    };\n    this._callback = async () => {\n      const logger2 = this._logger.create(\"_callback\");\n      try {\n        const session = await this._userManager.querySessionStatus();\n        let raiseEvent = true;\n        if (session && this._checkSessionIFrame) {\n          if (session.sub === this._sub) {\n            raiseEvent = false;\n            this._checkSessionIFrame.start(session.session_state);\n            logger2.debug(\"same sub still logged in at OP, session state has changed, restarting check session iframe; session_state\", session.session_state);\n            await this._userManager.events._raiseUserSessionChanged();\n          } else {\n            logger2.debug(\"different subject signed into OP\", session.sub);\n          }\n        } else {\n          logger2.debug(\"subject no longer signed into OP\");\n        }\n        if (raiseEvent) {\n          if (this._sub) {\n            await this._userManager.events._raiseUserSignedOut();\n          } else {\n            await this._userManager.events._raiseUserSignedIn();\n          }\n        } else {\n          logger2.debug(\"no change in session detected, no event to raise\");\n        }\n      } catch (err) {\n        if (this._sub) {\n          logger2.debug(\"Error calling queryCurrentSigninSession; raising signed out event\", err);\n          await this._userManager.events._raiseUserSignedOut();\n        }\n      }\n    };\n    if (!_userManager) {\n      this._logger.throw(new Error(\"No user manager passed\"));\n    }\n    this._userManager.events.addUserLoaded(this._start);\n    this._userManager.events.addUserUnloaded(this._stop);\n    this._init().catch((err) => {\n      this._logger.error(err);\n    });\n  }\n  async _init() {\n    this._logger.create(\"_init\");\n    const user = await this._userManager.getUser();\n    if (user) {\n      void this._start(user);\n    } else if (this._userManager.settings.monitorAnonymousSession) {\n      const session = await this._userManager.querySessionStatus();\n      if (session) {\n        const tmpUser = {\n          session_state: session.session_state,\n          profile: session.sub ? {\n            sub: session.sub\n          } : null\n        };\n        void this._start(tmpUser);\n      }\n    }\n  }\n};\n\n// src/User.ts\nvar User = class _User {\n  constructor(args) {\n    var _a;\n    this.id_token = args.id_token;\n    this.session_state = (_a = args.session_state) != null ? _a : null;\n    this.access_token = args.access_token;\n    this.refresh_token = args.refresh_token;\n    this.token_type = args.token_type;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.expires_at = args.expires_at;\n    this.state = args.userState;\n    this.url_state = args.url_state;\n  }\n  /** Computed number of seconds the access token has remaining. */\n  get expires_in() {\n    if (this.expires_at === void 0) {\n      return void 0;\n    }\n    return this.expires_at - Timer.getEpochTime();\n  }\n  set expires_in(value) {\n    if (value !== void 0) {\n      this.expires_at = Math.floor(value) + Timer.getEpochTime();\n    }\n  }\n  /** Computed value indicating if the access token is expired. */\n  get expired() {\n    const expires_in = this.expires_in;\n    if (expires_in === void 0) {\n      return void 0;\n    }\n    return expires_in <= 0;\n  }\n  /** Array representing the parsed values from the `scope`. */\n  get scopes() {\n    var _a, _b;\n    return (_b = (_a = this.scope) == null ? void 0 : _a.split(\" \")) != null ? _b : [];\n  }\n  toStorageString() {\n    new Logger(\"User\").create(\"toStorageString\");\n    return JSON.stringify({\n      id_token: this.id_token,\n      session_state: this.session_state,\n      access_token: this.access_token,\n      refresh_token: this.refresh_token,\n      token_type: this.token_type,\n      scope: this.scope,\n      profile: this.profile,\n      expires_at: this.expires_at\n    });\n  }\n  static fromStorageString(storageString) {\n    Logger.createStatic(\"User\", \"fromStorageString\");\n    return new _User(JSON.parse(storageString));\n  }\n};\n\n// src/navigators/AbstractChildWindow.ts\nvar messageSource = \"oidc-client\";\nvar AbstractChildWindow = class {\n  constructor() {\n    this._abort = new Event(\"Window navigation aborted\");\n    this._disposeHandlers = /* @__PURE__ */ new Set();\n    this._window = null;\n  }\n  async navigate(params) {\n    const logger2 = this._logger.create(\"navigate\");\n    if (!this._window) {\n      throw new Error(\"Attempted to navigate on a disposed window\");\n    }\n    logger2.debug(\"setting URL in window\");\n    this._window.location.replace(params.url);\n    const { url, keepOpen } = await new Promise((resolve, reject) => {\n      const listener = (e) => {\n        var _a;\n        const data = e.data;\n        const origin = (_a = params.scriptOrigin) != null ? _a : window.location.origin;\n        if (e.origin !== origin || (data == null ? void 0 : data.source) !== messageSource) {\n          return;\n        }\n        try {\n          const state = UrlUtils.readParams(data.url, params.response_mode).get(\"state\");\n          if (!state) {\n            logger2.warn(\"no state found in response url\");\n          }\n          if (e.source !== this._window && state !== params.state) {\n            return;\n          }\n        } catch (err) {\n          this._dispose();\n          reject(new Error(\"Invalid response from window\"));\n        }\n        resolve(data);\n      };\n      window.addEventListener(\"message\", listener, false);\n      this._disposeHandlers.add(() => window.removeEventListener(\"message\", listener, false));\n      this._disposeHandlers.add(this._abort.addHandler((reason) => {\n        this._dispose();\n        reject(reason);\n      }));\n    });\n    logger2.debug(\"got response from window\");\n    this._dispose();\n    if (!keepOpen) {\n      this.close();\n    }\n    return { url };\n  }\n  _dispose() {\n    this._logger.create(\"_dispose\");\n    for (const dispose of this._disposeHandlers) {\n      dispose();\n    }\n    this._disposeHandlers.clear();\n  }\n  static _notifyParent(parent, url, keepOpen = false, targetOrigin = window.location.origin) {\n    parent.postMessage({\n      source: messageSource,\n      url,\n      keepOpen\n    }, targetOrigin);\n  }\n};\n\n// src/UserManagerSettings.ts\nvar DefaultPopupWindowFeatures = {\n  location: false,\n  toolbar: false,\n  height: 640,\n  closePopupWindowAfterInSeconds: -1\n};\nvar DefaultPopupTarget = \"_blank\";\nvar DefaultAccessTokenExpiringNotificationTimeInSeconds = 60;\nvar DefaultCheckSessionIntervalInSeconds = 2;\nvar DefaultSilentRequestTimeoutInSeconds = 10;\nvar UserManagerSettingsStore = class extends OidcClientSettingsStore {\n  constructor(args) {\n    const {\n      popup_redirect_uri = args.redirect_uri,\n      popup_post_logout_redirect_uri = args.post_logout_redirect_uri,\n      popupWindowFeatures = DefaultPopupWindowFeatures,\n      popupWindowTarget = DefaultPopupTarget,\n      redirectMethod = \"assign\",\n      redirectTarget = \"self\",\n      iframeNotifyParentOrigin = args.iframeNotifyParentOrigin,\n      iframeScriptOrigin = args.iframeScriptOrigin,\n      requestTimeoutInSeconds,\n      silent_redirect_uri = args.redirect_uri,\n      silentRequestTimeoutInSeconds,\n      automaticSilentRenew = true,\n      validateSubOnSilentRenew = true,\n      includeIdTokenInSilentRenew = false,\n      monitorSession = false,\n      monitorAnonymousSession = false,\n      checkSessionIntervalInSeconds = DefaultCheckSessionIntervalInSeconds,\n      query_status_response_type = \"code\",\n      stopCheckSessionOnError = true,\n      revokeTokenTypes = [\"access_token\", \"refresh_token\"],\n      revokeTokensOnSignout = false,\n      includeIdTokenInSilentSignout = false,\n      accessTokenExpiringNotificationTimeInSeconds = DefaultAccessTokenExpiringNotificationTimeInSeconds,\n      userStore\n    } = args;\n    super(args);\n    this.popup_redirect_uri = popup_redirect_uri;\n    this.popup_post_logout_redirect_uri = popup_post_logout_redirect_uri;\n    this.popupWindowFeatures = popupWindowFeatures;\n    this.popupWindowTarget = popupWindowTarget;\n    this.redirectMethod = redirectMethod;\n    this.redirectTarget = redirectTarget;\n    this.iframeNotifyParentOrigin = iframeNotifyParentOrigin;\n    this.iframeScriptOrigin = iframeScriptOrigin;\n    this.silent_redirect_uri = silent_redirect_uri;\n    this.silentRequestTimeoutInSeconds = silentRequestTimeoutInSeconds || requestTimeoutInSeconds || DefaultSilentRequestTimeoutInSeconds;\n    this.automaticSilentRenew = automaticSilentRenew;\n    this.validateSubOnSilentRenew = validateSubOnSilentRenew;\n    this.includeIdTokenInSilentRenew = includeIdTokenInSilentRenew;\n    this.monitorSession = monitorSession;\n    this.monitorAnonymousSession = monitorAnonymousSession;\n    this.checkSessionIntervalInSeconds = checkSessionIntervalInSeconds;\n    this.stopCheckSessionOnError = stopCheckSessionOnError;\n    this.query_status_response_type = query_status_response_type;\n    this.revokeTokenTypes = revokeTokenTypes;\n    this.revokeTokensOnSignout = revokeTokensOnSignout;\n    this.includeIdTokenInSilentSignout = includeIdTokenInSilentSignout;\n    this.accessTokenExpiringNotificationTimeInSeconds = accessTokenExpiringNotificationTimeInSeconds;\n    if (userStore) {\n      this.userStore = userStore;\n    } else {\n      const store = typeof window !== \"undefined\" ? window.sessionStorage : new InMemoryWebStorage();\n      this.userStore = new WebStorageStateStore({ store });\n    }\n  }\n};\n\n// src/navigators/IFrameWindow.ts\nvar IFrameWindow = class _IFrameWindow extends AbstractChildWindow {\n  constructor({\n    silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds\n  }) {\n    super();\n    this._logger = new Logger(\"IFrameWindow\");\n    this._timeoutInSeconds = silentRequestTimeoutInSeconds;\n    this._frame = _IFrameWindow.createHiddenIframe();\n    this._window = this._frame.contentWindow;\n  }\n  static createHiddenIframe() {\n    const iframe = window.document.createElement(\"iframe\");\n    iframe.style.visibility = \"hidden\";\n    iframe.style.position = \"fixed\";\n    iframe.style.left = \"-1000px\";\n    iframe.style.top = \"0\";\n    iframe.width = \"0\";\n    iframe.height = \"0\";\n    window.document.body.appendChild(iframe);\n    return iframe;\n  }\n  async navigate(params) {\n    this._logger.debug(\"navigate: Using timeout of:\", this._timeoutInSeconds);\n    const timer = setTimeout(() => void this._abort.raise(new ErrorTimeout(\"IFrame timed out without a response\")), this._timeoutInSeconds * 1e3);\n    this._disposeHandlers.add(() => clearTimeout(timer));\n    return await super.navigate(params);\n  }\n  close() {\n    var _a;\n    if (this._frame) {\n      if (this._frame.parentNode) {\n        this._frame.addEventListener(\"load\", (ev) => {\n          var _a2;\n          const frame = ev.target;\n          (_a2 = frame.parentNode) == null ? void 0 : _a2.removeChild(frame);\n          void this._abort.raise(new Error(\"IFrame removed from DOM\"));\n        }, true);\n        (_a = this._frame.contentWindow) == null ? void 0 : _a.location.replace(\"about:blank\");\n      }\n      this._frame = null;\n    }\n    this._window = null;\n  }\n  static notifyParent(url, targetOrigin) {\n    return super._notifyParent(window.parent, url, false, targetOrigin);\n  }\n};\n\n// src/navigators/IFrameNavigator.ts\nvar IFrameNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"IFrameNavigator\");\n  }\n  async prepare({\n    silentRequestTimeoutInSeconds = this._settings.silentRequestTimeoutInSeconds\n  }) {\n    return new IFrameWindow({ silentRequestTimeoutInSeconds });\n  }\n  async callback(url) {\n    this._logger.create(\"callback\");\n    IFrameWindow.notifyParent(url, this._settings.iframeNotifyParentOrigin);\n  }\n};\n\n// src/navigators/PopupWindow.ts\nvar checkForPopupClosedInterval = 500;\nvar second = 1e3;\nvar PopupWindow = class extends AbstractChildWindow {\n  constructor({\n    popupWindowTarget = DefaultPopupTarget,\n    popupWindowFeatures = {},\n    popupSignal\n  }) {\n    super();\n    this._logger = new Logger(\"PopupWindow\");\n    const centeredPopup = PopupUtils.center({ ...DefaultPopupWindowFeatures, ...popupWindowFeatures });\n    this._window = window.open(void 0, popupWindowTarget, PopupUtils.serialize(centeredPopup));\n    if (popupSignal) {\n      popupSignal.addEventListener(\"abort\", () => {\n        var _a;\n        void this._abort.raise(new Error((_a = popupSignal.reason) != null ? _a : \"Popup aborted\"));\n      });\n    }\n    if (popupWindowFeatures.closePopupWindowAfterInSeconds && popupWindowFeatures.closePopupWindowAfterInSeconds > 0) {\n      setTimeout(() => {\n        if (!this._window || typeof this._window.closed !== \"boolean\" || this._window.closed) {\n          void this._abort.raise(new Error(\"Popup blocked by user\"));\n          return;\n        }\n        this.close();\n      }, popupWindowFeatures.closePopupWindowAfterInSeconds * second);\n    }\n  }\n  async navigate(params) {\n    var _a;\n    (_a = this._window) == null ? void 0 : _a.focus();\n    const popupClosedInterval = setInterval(() => {\n      if (!this._window || this._window.closed) {\n        void this._abort.raise(new Error(\"Popup closed by user\"));\n      }\n    }, checkForPopupClosedInterval);\n    this._disposeHandlers.add(() => clearInterval(popupClosedInterval));\n    return await super.navigate(params);\n  }\n  close() {\n    if (this._window) {\n      if (!this._window.closed) {\n        this._window.close();\n        void this._abort.raise(new Error(\"Popup closed\"));\n      }\n    }\n    this._window = null;\n  }\n  static notifyOpener(url, keepOpen) {\n    if (!window.opener) {\n      throw new Error(\"No window.opener. Can't complete notification.\");\n    }\n    return super._notifyParent(window.opener, url, keepOpen);\n  }\n};\n\n// src/navigators/PopupNavigator.ts\nvar PopupNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"PopupNavigator\");\n  }\n  async prepare({\n    popupWindowFeatures = this._settings.popupWindowFeatures,\n    popupWindowTarget = this._settings.popupWindowTarget,\n    popupSignal\n  }) {\n    return new PopupWindow({ popupWindowFeatures, popupWindowTarget, popupSignal });\n  }\n  async callback(url, { keepOpen = false }) {\n    this._logger.create(\"callback\");\n    PopupWindow.notifyOpener(url, keepOpen);\n  }\n};\n\n// src/navigators/RedirectNavigator.ts\nvar RedirectNavigator = class {\n  constructor(_settings) {\n    this._settings = _settings;\n    this._logger = new Logger(\"RedirectNavigator\");\n  }\n  async prepare({\n    redirectMethod = this._settings.redirectMethod,\n    redirectTarget = this._settings.redirectTarget\n  }) {\n    var _a;\n    this._logger.create(\"prepare\");\n    let targetWindow = window.self;\n    if (redirectTarget === \"top\") {\n      targetWindow = (_a = window.top) != null ? _a : window.self;\n    }\n    const redirect = targetWindow.location[redirectMethod].bind(targetWindow.location);\n    let abort;\n    return {\n      navigate: async (params) => {\n        this._logger.create(\"navigate\");\n        const promise = new Promise((resolve, reject) => {\n          abort = reject;\n        });\n        redirect(params.url);\n        return await promise;\n      },\n      close: () => {\n        this._logger.create(\"close\");\n        abort == null ? void 0 : abort(new Error(\"Redirect aborted\"));\n        targetWindow.stop();\n      }\n    };\n  }\n  async callback() {\n    return;\n  }\n};\n\n// src/UserManagerEvents.ts\nvar UserManagerEvents = class extends AccessTokenEvents {\n  constructor(settings) {\n    super({ expiringNotificationTimeInSeconds: settings.accessTokenExpiringNotificationTimeInSeconds });\n    this._logger = new Logger(\"UserManagerEvents\");\n    this._userLoaded = new Event(\"User loaded\");\n    this._userUnloaded = new Event(\"User unloaded\");\n    this._silentRenewError = new Event(\"Silent renew error\");\n    this._userSignedIn = new Event(\"User signed in\");\n    this._userSignedOut = new Event(\"User signed out\");\n    this._userSessionChanged = new Event(\"User session changed\");\n  }\n  async load(user, raiseEvent = true) {\n    super.load(user);\n    if (raiseEvent) {\n      await this._userLoaded.raise(user);\n    }\n  }\n  async unload() {\n    super.unload();\n    await this._userUnloaded.raise();\n  }\n  /**\n   * Add callback: Raised when a user session has been established (or re-established).\n   */\n  addUserLoaded(cb) {\n    return this._userLoaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been established (or re-established).\n   */\n  removeUserLoaded(cb) {\n    return this._userLoaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when a user session has been terminated.\n   */\n  addUserUnloaded(cb) {\n    return this._userUnloaded.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when a user session has been terminated.\n   */\n  removeUserUnloaded(cb) {\n    return this._userUnloaded.removeHandler(cb);\n  }\n  /**\n   * Add callback: Raised when the automatic silent renew has failed.\n   */\n  addSilentRenewError(cb) {\n    return this._silentRenewError.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the automatic silent renew has failed.\n   */\n  removeSilentRenewError(cb) {\n    return this._silentRenewError.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseSilentRenewError(e) {\n    await this._silentRenewError.raise(e);\n  }\n  /**\n   * Add callback: Raised when the user is signed in (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedIn(cb) {\n    return this._userSignedIn.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user is signed in (when `monitorSession` is set).\n   */\n  removeUserSignedIn(cb) {\n    this._userSignedIn.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedIn() {\n    await this._userSignedIn.raise();\n  }\n  /**\n   * Add callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSignedOut(cb) {\n    return this._userSignedOut.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n   */\n  removeUserSignedOut(cb) {\n    this._userSignedOut.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSignedOut() {\n    await this._userSignedOut.raise();\n  }\n  /**\n   * Add callback: Raised when the user session changed (when `monitorSession` is set).\n   * @see {@link UserManagerSettings.monitorSession}\n   */\n  addUserSessionChanged(cb) {\n    return this._userSessionChanged.addHandler(cb);\n  }\n  /**\n   * Remove callback: Raised when the user session changed (when `monitorSession` is set).\n   */\n  removeUserSessionChanged(cb) {\n    this._userSessionChanged.removeHandler(cb);\n  }\n  /**\n   * @internal\n   */\n  async _raiseUserSessionChanged() {\n    await this._userSessionChanged.raise();\n  }\n};\n\n// src/SilentRenewService.ts\nvar SilentRenewService = class {\n  constructor(_userManager) {\n    this._userManager = _userManager;\n    this._logger = new Logger(\"SilentRenewService\");\n    this._isStarted = false;\n    this._retryTimer = new Timer(\"Retry Silent Renew\");\n    this._tokenExpiring = async () => {\n      const logger2 = this._logger.create(\"_tokenExpiring\");\n      try {\n        await this._userManager.signinSilent();\n        logger2.debug(\"silent token renewal successful\");\n      } catch (err) {\n        if (err instanceof ErrorTimeout) {\n          logger2.warn(\"ErrorTimeout from signinSilent:\", err, \"retry in 5s\");\n          this._retryTimer.init(5);\n          return;\n        }\n        logger2.error(\"Error from signinSilent:\", err);\n        await this._userManager.events._raiseSilentRenewError(err);\n      }\n    };\n  }\n  async start() {\n    const logger2 = this._logger.create(\"start\");\n    if (!this._isStarted) {\n      this._isStarted = true;\n      this._userManager.events.addAccessTokenExpiring(this._tokenExpiring);\n      this._retryTimer.addHandler(this._tokenExpiring);\n      try {\n        await this._userManager.getUser();\n      } catch (err) {\n        logger2.error(\"getUser error\", err);\n      }\n    }\n  }\n  stop() {\n    if (this._isStarted) {\n      this._retryTimer.cancel();\n      this._retryTimer.removeHandler(this._tokenExpiring);\n      this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring);\n      this._isStarted = false;\n    }\n  }\n};\n\n// src/RefreshState.ts\nvar RefreshState = class {\n  constructor(args) {\n    this.refresh_token = args.refresh_token;\n    this.id_token = args.id_token;\n    this.session_state = args.session_state;\n    this.scope = args.scope;\n    this.profile = args.profile;\n    this.data = args.state;\n  }\n};\n\n// src/UserManager.ts\nvar UserManager = class {\n  constructor(settings, redirectNavigator, popupNavigator, iframeNavigator) {\n    this._logger = new Logger(\"UserManager\");\n    this.settings = new UserManagerSettingsStore(settings);\n    this._client = new OidcClient(settings);\n    this._redirectNavigator = redirectNavigator != null ? redirectNavigator : new RedirectNavigator(this.settings);\n    this._popupNavigator = popupNavigator != null ? popupNavigator : new PopupNavigator(this.settings);\n    this._iframeNavigator = iframeNavigator != null ? iframeNavigator : new IFrameNavigator(this.settings);\n    this._events = new UserManagerEvents(this.settings);\n    this._silentRenewService = new SilentRenewService(this);\n    if (this.settings.automaticSilentRenew) {\n      this.startSilentRenew();\n    }\n    this._sessionMonitor = null;\n    if (this.settings.monitorSession) {\n      this._sessionMonitor = new SessionMonitor(this);\n    }\n  }\n  /**\n   * Get object used to register for events raised by the `UserManager`.\n   */\n  get events() {\n    return this._events;\n  }\n  /**\n   * Get object used to access the metadata configuration of the identity provider.\n   */\n  get metadataService() {\n    return this._client.metadataService;\n  }\n  /**\n   * Load the `User` object for the currently authenticated user.\n   *\n   * @returns A promise\n   */\n  async getUser() {\n    const logger2 = this._logger.create(\"getUser\");\n    const user = await this._loadUser();\n    if (user) {\n      logger2.info(\"user loaded\");\n      await this._events.load(user, false);\n      return user;\n    }\n    logger2.info(\"user not found in storage\");\n    return null;\n  }\n  /**\n   * Remove from any storage the currently authenticated user.\n   *\n   * @returns A promise\n   */\n  async removeUser() {\n    const logger2 = this._logger.create(\"removeUser\");\n    await this.storeUser(null);\n    logger2.info(\"user removed from storage\");\n    await this._events.unload();\n  }\n  /**\n   * Trigger a redirect of the current window to the authorization endpoint.\n   *\n   * @returns A promise\n   *\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinRedirect(args = {}) {\n    var _a;\n    this._logger.create(\"signinRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const handle = await this._redirectNavigator.prepare({ redirectMethod });\n    await this._signinStart({\n      request_type: \"si:r\",\n      dpopJkt,\n      ...requestArgs\n    }, handle);\n  }\n  /**\n   * Process the response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise containing the authenticated `User`.\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinRedirectCallback\");\n    const user = await this._signinEnd(url);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger the signin with user/password.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws {@link ErrorResponse} In cases of wrong authentication.\n   */\n  async signinResourceOwnerCredentials({\n    username,\n    password,\n    skipUserInfo = false\n  }) {\n    const logger2 = this._logger.create(\"signinResourceOwnerCredential\");\n    const signinResponse = await this._client.processResourceOwnerPasswordCredentials({\n      username,\n      password,\n      skipUserInfo,\n      extraTokenParams: this.settings.extraTokenParams\n    });\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse);\n    if (user.profile && user.profile.sub) {\n      logger2.info(\"success, signed in subject\", user.profile.sub);\n    } else {\n      logger2.info(\"no subject\");\n    }\n    return user;\n  }\n  /**\n   * Trigger a request (via a popup window) to the authorization endpoint.\n   *\n   * @returns A promise containing the authenticated `User`.\n   * @throws `Error` In cases of wrong authentication.\n   */\n  async signinPopup(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signinPopup\");\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No popup_redirect_uri configured\"));\n    }\n    const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget, popupSignal });\n    const user = await this._signin({\n      request_type: \"si:p\",\n      redirect_uri: url,\n      display: \"popup\",\n      dpopJkt,\n      ...requestArgs\n    }, handle);\n    if (user) {\n      if (user.profile && user.profile.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  /**\n   * Notify the opening window of response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signinPopupCallback\");\n    await this._popupNavigator.callback(url, { keepOpen });\n    logger2.info(\"success\");\n  }\n  /**\n   * Trigger a silent request (via refresh token or an iframe) to the authorization endpoint.\n   *\n   * @returns A promise that contains the authenticated `User`.\n   */\n  async signinSilent(args = {}) {\n    var _a, _b;\n    const logger2 = this._logger.create(\"signinSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    let user = await this._loadUser();\n    if (user == null ? void 0 : user.refresh_token) {\n      logger2.debug(\"using refresh token\");\n      const state = new RefreshState(user);\n      return await this._useRefreshToken({\n        state,\n        redirect_uri: requestArgs.redirect_uri,\n        resource: requestArgs.resource,\n        extraTokenParams: requestArgs.extraTokenParams,\n        timeoutInSeconds: silentRequestTimeoutInSeconds\n      });\n    }\n    let dpopJkt;\n    if ((_a = this.settings.dpop) == null ? void 0 : _a.bind_authorization_code) {\n      dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n    }\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    let verifySub;\n    if (user && this.settings.validateSubOnSilentRenew) {\n      logger2.debug(\"subject prior to silent renew:\", user.profile.sub);\n      verifySub = user.profile.sub;\n    }\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    user = await this._signin({\n      request_type: \"si:s\",\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      dpopJkt,\n      ...requestArgs\n    }, handle, verifySub);\n    if (user) {\n      if ((_b = user.profile) == null ? void 0 : _b.sub) {\n        logger2.info(\"success, signed in subject\", user.profile.sub);\n      } else {\n        logger2.info(\"no subject\");\n      }\n    }\n    return user;\n  }\n  async _useRefreshToken(args) {\n    const response = await this._client.useRefreshToken({\n      timeoutInSeconds: this.settings.silentRequestTimeoutInSeconds,\n      ...args\n    });\n    const user = new User({ ...args.state, ...response });\n    await this.storeUser(user);\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   *\n   * Notify the parent window of response (callback) from the authorization endpoint.\n   * It is recommended to use {@link UserManager.signinCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signinCallback}\n   */\n  async signinSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signinSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process any response (callback) from the authorization endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signinRedirectCallback}\n   * - {@link UserManager.signinPopupCallback}\n   * - {@link UserManager.signinSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signin cannot be processed.\n   */\n  async signinCallback(url = window.location.href) {\n    const { state } = await this._client.readSigninResponseState(url);\n    switch (state.request_type) {\n      case \"si:r\":\n        return await this.signinRedirectCallback(url);\n      case \"si:p\":\n        await this.signinPopupCallback(url);\n        break;\n      case \"si:s\":\n        await this.signinSilentCallback(url);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n    return void 0;\n  }\n  /**\n   * Process any response (callback) from the end session endpoint, by dispatching the request_type\n   * and executing one of the following functions:\n   * - {@link UserManager.signoutRedirectCallback}\n   * - {@link UserManager.signoutPopupCallback}\n   * - {@link UserManager.signoutSilentCallback}\n   *\n   * @throws `Error` If request_type is unknown or signout cannot be processed.\n   */\n  async signoutCallback(url = window.location.href, keepOpen = false) {\n    const { state } = await this._client.readSignoutResponseState(url);\n    if (!state) {\n      return void 0;\n    }\n    switch (state.request_type) {\n      case \"so:r\":\n        return await this.signoutRedirectCallback(url);\n      case \"so:p\":\n        await this.signoutPopupCallback(url, keepOpen);\n        break;\n      case \"so:s\":\n        await this.signoutSilentCallback(url);\n        break;\n      default:\n        throw new Error(\"invalid response_type in state\");\n    }\n    return void 0;\n  }\n  /**\n   * Query OP for user's current signin status.\n   *\n   * @returns A promise object with session_state and subject identifier.\n   */\n  async querySessionStatus(args = {}) {\n    const logger2 = this._logger.create(\"querySessionStatus\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const url = this.settings.silent_redirect_uri;\n    if (!url) {\n      logger2.throw(new Error(\"No silent_redirect_uri configured\"));\n    }\n    const user = await this._loadUser();\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    const navResponse = await this._signinStart({\n      request_type: \"si:s\",\n      // this acts like a signin silent\n      redirect_uri: url,\n      prompt: \"none\",\n      id_token_hint: this.settings.includeIdTokenInSilentRenew ? user == null ? void 0 : user.id_token : void 0,\n      response_type: this.settings.query_status_response_type,\n      scope: \"openid\",\n      skipUserInfo: true,\n      ...requestArgs\n    }, handle);\n    try {\n      const extraHeaders = {};\n      const signinResponse = await this._client.processSigninResponse(navResponse.url, extraHeaders);\n      logger2.debug(\"got signin response\");\n      if (signinResponse.session_state && signinResponse.profile.sub) {\n        logger2.info(\"success for subject\", signinResponse.profile.sub);\n        return {\n          session_state: signinResponse.session_state,\n          sub: signinResponse.profile.sub\n        };\n      }\n      logger2.info(\"success, user not authenticated\");\n      return null;\n    } catch (err) {\n      if (this.settings.monitorAnonymousSession && err instanceof ErrorResponse) {\n        switch (err.error) {\n          case \"login_required\":\n          case \"consent_required\":\n          case \"interaction_required\":\n          case \"account_selection_required\":\n            logger2.info(\"success for anonymous user\");\n            return {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              session_state: err.session_state\n            };\n        }\n      }\n      throw err;\n    }\n  }\n  async _signin(args, handle, verifySub) {\n    const navResponse = await this._signinStart(args, handle);\n    return await this._signinEnd(navResponse.url, verifySub);\n  }\n  async _signinStart(args, handle) {\n    const logger2 = this._logger.create(\"_signinStart\");\n    try {\n      const signinRequest = await this._client.createSigninRequest(args);\n      logger2.debug(\"got signin request\");\n      return await handle.navigate({\n        url: signinRequest.url,\n        state: signinRequest.state.id,\n        response_mode: signinRequest.state.response_mode,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signinEnd(url, verifySub) {\n    const logger2 = this._logger.create(\"_signinEnd\");\n    const extraHeaders = {};\n    const signinResponse = await this._client.processSigninResponse(url, extraHeaders);\n    logger2.debug(\"got signin response\");\n    const user = await this._buildUser(signinResponse, verifySub);\n    return user;\n  }\n  async _buildUser(signinResponse, verifySub) {\n    const logger2 = this._logger.create(\"_buildUser\");\n    const user = new User(signinResponse);\n    if (verifySub) {\n      if (verifySub !== user.profile.sub) {\n        logger2.debug(\"current user does not match user returned from signin. sub from signin:\", user.profile.sub);\n        throw new ErrorResponse({ ...signinResponse, error: \"login_required\" });\n      }\n      logger2.debug(\"current user matches user returned from signin\");\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n    return user;\n  }\n  /**\n   * Trigger a redirect of the current window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutRedirect(args = {}) {\n    const logger2 = this._logger.create(\"signoutRedirect\");\n    const {\n      redirectMethod,\n      ...requestArgs\n    } = args;\n    const handle = await this._redirectNavigator.prepare({ redirectMethod });\n    await this._signoutStart({\n      request_type: \"so:r\",\n      post_logout_redirect_uri: this.settings.post_logout_redirect_uri,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise containing signout response\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutRedirectCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutRedirectCallback\");\n    const response = await this._signoutEnd(url);\n    logger2.info(\"success\");\n    return response;\n  }\n  /**\n   * Trigger a redirect of a popup window to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutPopup(args = {}) {\n    const logger2 = this._logger.create(\"signoutPopup\");\n    const {\n      popupWindowFeatures,\n      popupWindowTarget,\n      popupSignal,\n      ...requestArgs\n    } = args;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget, popupSignal });\n    await this._signout({\n      request_type: \"so:p\",\n      post_logout_redirect_uri: url,\n      // we're putting a dummy entry in here because we\n      // need a unique id from the state for notification\n      // to the parent window, which is necessary if we\n      // plan to return back to the client after signout\n      // and so we can close the popup after signout\n      state: url == null ? void 0 : {},\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Process response (callback) from the end session endpoint from a popup window.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutPopupCallback(url = window.location.href, keepOpen = false) {\n    const logger2 = this._logger.create(\"signoutPopupCallback\");\n    await this._popupNavigator.callback(url, { keepOpen });\n    logger2.info(\"success\");\n  }\n  async _signout(args, handle) {\n    const navResponse = await this._signoutStart(args, handle);\n    return await this._signoutEnd(navResponse.url);\n  }\n  async _signoutStart(args = {}, handle) {\n    var _a;\n    const logger2 = this._logger.create(\"_signoutStart\");\n    try {\n      const user = await this._loadUser();\n      logger2.debug(\"loaded current user from storage\");\n      if (this.settings.revokeTokensOnSignout) {\n        await this._revokeInternal(user);\n      }\n      const id_token = args.id_token_hint || user && user.id_token;\n      if (id_token) {\n        logger2.debug(\"setting id_token_hint in signout request\");\n        args.id_token_hint = id_token;\n      }\n      await this.removeUser();\n      logger2.debug(\"user removed, creating signout request\");\n      const signoutRequest = await this._client.createSignoutRequest(args);\n      logger2.debug(\"got signout request\");\n      return await handle.navigate({\n        url: signoutRequest.url,\n        state: (_a = signoutRequest.state) == null ? void 0 : _a.id,\n        scriptOrigin: this.settings.iframeScriptOrigin\n      });\n    } catch (err) {\n      logger2.debug(\"error after preparing navigator, closing navigator window\");\n      handle.close();\n      throw err;\n    }\n  }\n  async _signoutEnd(url) {\n    const logger2 = this._logger.create(\"_signoutEnd\");\n    const signoutResponse = await this._client.processSignoutResponse(url);\n    logger2.debug(\"got signout response\");\n    return signoutResponse;\n  }\n  /**\n   * Trigger a silent request (via an iframe) to the end session endpoint.\n   *\n   * @returns A promise\n   */\n  async signoutSilent(args = {}) {\n    var _a;\n    const logger2 = this._logger.create(\"signoutSilent\");\n    const {\n      silentRequestTimeoutInSeconds,\n      ...requestArgs\n    } = args;\n    const id_token_hint = this.settings.includeIdTokenInSilentSignout ? (_a = await this._loadUser()) == null ? void 0 : _a.id_token : void 0;\n    const url = this.settings.popup_post_logout_redirect_uri;\n    const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n    await this._signout({\n      request_type: \"so:s\",\n      post_logout_redirect_uri: url,\n      id_token_hint,\n      ...requestArgs\n    }, handle);\n    logger2.info(\"success\");\n  }\n  /**\n   * Notify the parent window of response (callback) from the end session endpoint.\n   * It is recommended to use {@link UserManager.signoutCallback} instead.\n   *\n   * @returns A promise\n   *\n   * @see {@link UserManager.signoutCallback}\n   */\n  async signoutSilentCallback(url = window.location.href) {\n    const logger2 = this._logger.create(\"signoutSilentCallback\");\n    await this._iframeNavigator.callback(url);\n    logger2.info(\"success\");\n  }\n  async revokeTokens(types) {\n    const user = await this._loadUser();\n    await this._revokeInternal(user, types);\n  }\n  async _revokeInternal(user, types = this.settings.revokeTokenTypes) {\n    const logger2 = this._logger.create(\"_revokeInternal\");\n    if (!user) return;\n    const typesPresent = types.filter((type) => typeof user[type] === \"string\");\n    if (!typesPresent.length) {\n      logger2.debug(\"no need to revoke due to no token(s)\");\n      return;\n    }\n    for (const type of typesPresent) {\n      await this._client.revokeToken(\n        user[type],\n        // eslint-disable-line @typescript-eslint/no-non-null-assertion\n        type\n      );\n      logger2.info(`${type} revoked successfully`);\n      if (type !== \"access_token\") {\n        user[type] = null;\n      }\n    }\n    await this.storeUser(user);\n    logger2.debug(\"user stored\");\n    await this._events.load(user);\n  }\n  /**\n   * Enables silent renew for the `UserManager`.\n   */\n  startSilentRenew() {\n    this._logger.create(\"startSilentRenew\");\n    void this._silentRenewService.start();\n  }\n  /**\n   * Disables silent renew for the `UserManager`.\n   */\n  stopSilentRenew() {\n    this._silentRenewService.stop();\n  }\n  get _userStoreKey() {\n    return `user:${this.settings.authority}:${this.settings.client_id}`;\n  }\n  async _loadUser() {\n    const logger2 = this._logger.create(\"_loadUser\");\n    const storageString = await this.settings.userStore.get(this._userStoreKey);\n    if (storageString) {\n      logger2.debug(\"user storageString loaded\");\n      return User.fromStorageString(storageString);\n    }\n    logger2.debug(\"no user storageString\");\n    return null;\n  }\n  async storeUser(user) {\n    const logger2 = this._logger.create(\"storeUser\");\n    if (user) {\n      logger2.debug(\"storing user\");\n      const storageString = user.toStorageString();\n      await this.settings.userStore.set(this._userStoreKey, storageString);\n    } else {\n      this._logger.debug(\"removing user\");\n      await this.settings.userStore.remove(this._userStoreKey);\n      if (this.settings.dpop) {\n        await this.settings.dpop.store.remove(this.settings.client_id);\n      }\n    }\n  }\n  /**\n   * Removes stale state entries in storage for incomplete authorize requests.\n   */\n  async clearStaleState() {\n    await this._client.clearStaleState();\n  }\n  /**\n   * Dynamically generates a DPoP proof for a given user, URL and optional Http method.\n   * This method is useful when you need to make a request to a resource server\n   * with fetch or similar, and you need to include a DPoP proof in a DPoP header.\n   * @param url - The URL to generate the DPoP proof for\n   * @param user - The user to generate the DPoP proof for\n   * @param httpMethod - Optional, defaults to \"GET\"\n   * @param nonce - Optional nonce provided by the resource server\n   *\n   * @returns A promise containing the DPoP proof or undefined if DPoP is not enabled/no user is found.\n   */\n  async dpopProof(url, user, httpMethod, nonce) {\n    var _a, _b;\n    const dpopState = await ((_b = (_a = this.settings.dpop) == null ? void 0 : _a.store) == null ? void 0 : _b.get(this.settings.client_id));\n    if (dpopState) {\n      return await CryptoUtils.generateDPoPProof({\n        url,\n        accessToken: user == null ? void 0 : user.access_token,\n        httpMethod,\n        keyPair: dpopState.keys,\n        nonce\n      });\n    }\n    return void 0;\n  }\n  async generateDPoPJkt(dpopSettings) {\n    let dpopState = await dpopSettings.store.get(this.settings.client_id);\n    if (!dpopState) {\n      const dpopKeys = await CryptoUtils.generateDPoPKeys();\n      dpopState = new DPoPState(dpopKeys);\n      await dpopSettings.store.set(this.settings.client_id, dpopState);\n    }\n    return await CryptoUtils.generateDPoPJkt(dpopState.keys);\n  }\n};\n\n// package.json\nvar version = \"3.1.0\";\n\n// src/Version.ts\nvar Version = version;\n\n// src/IndexedDbDPoPStore.ts\nvar IndexedDbDPoPStore = class {\n  constructor() {\n    this._dbName = \"oidc\";\n    this._storeName = \"dpop\";\n  }\n  async set(key, value) {\n    const store = await this.createStore(this._dbName, this._storeName);\n    await store(\"readwrite\", (str) => {\n      str.put(value, key);\n      return this.promisifyRequest(str.transaction);\n    });\n  }\n  async get(key) {\n    const store = await this.createStore(this._dbName, this._storeName);\n    return await store(\"readonly\", (str) => {\n      return this.promisifyRequest(str.get(key));\n    });\n  }\n  async remove(key) {\n    const item = await this.get(key);\n    const store = await this.createStore(this._dbName, this._storeName);\n    await store(\"readwrite\", (str) => {\n      return this.promisifyRequest(str.delete(key));\n    });\n    return item;\n  }\n  async getAllKeys() {\n    const store = await this.createStore(this._dbName, this._storeName);\n    return await store(\"readonly\", (str) => {\n      return this.promisifyRequest(str.getAllKeys());\n    });\n  }\n  promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n      request.oncomplete = request.onsuccess = () => resolve(request.result);\n      request.onabort = request.onerror = () => reject(request.error);\n    });\n  }\n  async createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const db = await this.promisifyRequest(request);\n    return async (txMode, callback) => {\n      const tx = db.transaction(storeName, txMode);\n      const store = tx.objectStore(storeName);\n      return await callback(store);\n    };\n  }\n};\nexport {\n  AccessTokenEvents,\n  CheckSessionIFrame,\n  DPoPState,\n  ErrorResponse,\n  ErrorTimeout,\n  InMemoryWebStorage,\n  IndexedDbDPoPStore,\n  Log,\n  Logger,\n  MetadataService,\n  OidcClient,\n  OidcClientSettingsStore,\n  SessionMonitor,\n  SigninResponse,\n  SigninState,\n  SignoutResponse,\n  State,\n  User,\n  UserManager,\n  UserManagerSettingsStore,\n  Version,\n  WebStorageStateStore\n};\n//# sourceMappingURL=oidc-client-ts.js.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}