{"ast":null,"code":"var _jsxFileName = \"/home/user/Task-Manager-Frontend/src/App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"react-oidc-context\";\nimport { Alert, Snackbar, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport { AppBar, Toolbar, Typography, Button, Container, TextField, Grid, Card, CardContent, CardActions, Select, MenuItem, FormControl, InputLabel, Box, Paper, IconButton } from \"@mui/material\";\nimport { Lock as LockIcon, Edit as EditIcon } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$(),\n    _auth$user5;\n  const auth = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    assignee: \"\",\n    deadline: \"\",\n    status: \"PENDING\"\n  });\n  const [error, setError] = useState(\"\");\n  const [teamMembers, setTeamMembers] = useState([]);\n  const API_URLS = {\n    fetchTask: \"https://71aos5nio2.execute-api.eu-west-1.amazonaws.com/getTask\",\n    createTask: \"https://plaaw9qjn7.execute-api.eu-west-1.amazonaws.com/createTask\",\n    updateTask: \"https://rlyzlu0dl0.execute-api.eu-west-1.amazonaws.com/updateTask\",\n    deleteTask: \"https://1b4916boze.execute-api.eu-west-1.amazonaws.com/delete\",\n    fetchUsers: \"https://your-api-url/getUsers\",\n    sendNotification: \"https://yjja5gnwql.execute-api.eu-west-1.amazonaws.com/sendNotification\"\n  };\n\n  // Separate useEffect for authentication and role setting\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      var _auth$user;\n      const username = (_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.profile[\"cognito:username\"];\n      const role = username === \"admin\" ? \"ADMIN\" : \"MEMBER\";\n      setUserRole(role);\n      console.log(`Logged in as ${role}`);\n    }\n  }, [auth.isAuthenticated, auth.user]);\n\n  // Separate useEffect for fetching tasks after role is set\n  useEffect(() => {\n    if (auth.isAuthenticated && userRole) {\n      console.log(\"Fetching tasks for role:\", userRole);\n      fetchTasks();\n      if (userRole === 'ADMIN') {\n        fetchTeamMembers();\n      }\n    }\n  }, [auth.isAuthenticated, userRole]);\n  const fetchUserRole = () => {\n    var _auth$user2;\n    // In a real application, the username and roles would typically come from your authentication system.\n    const username = (_auth$user2 = auth.user) === null || _auth$user2 === void 0 ? void 0 : _auth$user2.profile[\"cognito:username\"];\n    if (username === \"admin\") {\n      // Assign 'ADMIN' role if username matches 'admin'\n      setUserRole(\"ADMIN\");\n      console.log(\"Logged in as admin\");\n    } else {\n      // Default to 'MEMBER' role otherwise\n      setUserRole(\"MEMBER\");\n      console.log(\"Logged in as a normal user without admin privileges\");\n    }\n  };\n  const titleRef = useRef();\n  const descriptionRef = useRef();\n  const assigneeRef = useRef();\n  const deadlineRef = useRef();\n  const isAdmin = () => userRole === 'ADMIN';\n  const fetchUsers = async () => {\n    try {\n      var _auth$user3;\n      const response = await axios.get(API_URLS.fetchUsers, {\n        headers: {\n          Authorization: `Bearer ${(_auth$user3 = auth.user) === null || _auth$user3 === void 0 ? void 0 : _auth$user3.access_token}`\n        }\n      });\n      setUsers(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch users\");\n    }\n  };\n\n  // Add new state for notifications\n  const [notifications, setNotifications] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n\n  // Function to check if a deadline is approaching (within 3 days)\n  const isDeadlineApproaching = deadline => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    const diffTime = deadlineDate - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays <= 3 && diffDays >= 0;\n  };\n\n  // Function to check if a deadline has passed\n  const isDeadlinePassed = deadline => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    return deadlineDate < today;\n  };\n\n  // Function to get card background color based on deadline\n  const getCardColor = (deadline, status) => {\n    if (status === \"COMPLETED\") return \"#e8f5e9\"; // Light green for completed tasks\n    if (isDeadlinePassed(deadline)) return \"#ffebee\"; // Red for passed deadline\n    if (isDeadlineApproaching(deadline)) return \"#fff3e0\"; // Orange for approaching deadline\n    return \"white\"; // Default color\n  };\n\n  // Function to send email notification via SNS\n  const sendDeadlineNotification = async task => {\n    try {\n      const response = await axios.post(API_URLS.sendNotification, {\n        email: task.assignee,\n        taskTitle: task.title,\n        deadline: task.deadline,\n        message: `Task \"${task.title}\" is due on ${new Date(task.deadline).toLocaleDateString()}. Please complete it soon.`\n      });\n      console.log(\"Notification sent successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Failed to send notification:\", error);\n      setError(\"Failed to send email notification\");\n    }\n  };\n  const fetchTasks = async () => {\n    try {\n      var _auth$user4;\n      console.log(\"Fetching tasks...\");\n      const url = new URL(API_URLS.fetchTask);\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Fetched tasks:\", data);\n\n      // Filter tasks based on user role and assignee\n      const userEmail = (_auth$user4 = auth.user) === null || _auth$user4 === void 0 ? void 0 : _auth$user4.profile.email;\n      const relevantTasks = userRole === 'ADMIN' ? data : data.filter(task => task.assignee === userEmail);\n\n      // Check for approaching deadlines and send notifications\n      const approachingDeadlines = relevantTasks.filter(task => isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\");\n\n      // Send email notifications for approaching deadlines\n      for (const task of approachingDeadlines) {\n        await sendDeadlineNotification(task);\n      }\n\n      // Set UI notifications\n      if (approachingDeadlines.length > 0) {\n        setNotificationMessage(`You have ${approachingDeadlines.length} task(s) with approaching deadlines! Check your email for details.`);\n        setShowNotification(true);\n      }\n      setTasks(relevantTasks);\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err);\n      setError(err.message || \"Failed to fetch tasks\");\n    }\n  };\n  const fetchTeamMembers = async () => {\n    try {\n      const response = await fetch('https://vwjwg4yut4.execute-api.eu-west-1.amazonaws.com/user');\n      if (!response.ok) {\n        throw new Error('Failed to fetch team members');\n      }\n      const data = await response.json();\n      console.log(data);\n      console.log(data.users);\n      const members = data.users.filter(user => user);\n      console.log({\n        members\n      });\n      setTeamMembers(members);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const handleCreateTask = async () => {\n    if (!isAdmin()) return;\n    const newTask = {\n      title: titleRef.current.value,\n      description: descriptionRef.current.value,\n      assignee: assigneeRef.current.value,\n      deadline: deadlineRef.current.value,\n      status: \"PENDING\"\n    };\n    try {\n      const response = await axios.post(API_URLS.createTask, newTask, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setError(\"\");\n      console.log(\"Task created:\", response.data);\n      fetchTasks(); // Refresh tasks after creating a new one\n    } catch (err) {\n      setError(\"Failed to create task\");\n      console.error(\"Error creating task:\", err);\n    }\n  };\n  const handleUpdateTask = async (taskId, newStatus) => {\n    if (!isAdmin()) return;\n    try {\n      const response = await axios.put(API_URLS.updateTask, {\n        status: newStatus,\n        id: taskId\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Task updated:\", response.data);\n      fetchTasks(); // Refresh all tasks after update\n    } catch (err) {\n      console.error(\"Failed to update task:\", err.message);\n      setError(\"Failed to update task\");\n    }\n  };\n  const notifyTask = async data => {\n    const response = await fetch(\"https://efd8swtncb.execute-api.eu-west-1.amazonaws.com/notify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const result = await response.json();\n    console.log(result);\n  };\n  const handleDeleteTask = async taskId => {\n    if (!isAdmin()) return;\n    try {\n      await axios.delete(API_URLS.deleteTask, {\n        data: {\n          TaskID: taskId\n        },\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      fetchTasks(); // Refresh tasks after deletion\n    } catch (err) {\n      console.error(\"Error deleting task:\", err);\n      setError(\"Failed to delete task\");\n    }\n  };\n  useEffect(() => {\n    fetchTeamMembers();\n  }, []);\n  const AdminTaskCreation = () => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Title\",\n      inputRef: titleRef,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      label: \"Description\",\n      inputRef: descriptionRef,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      margin: \"normal\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Assignee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        inputRef: assigneeRef,\n        defaultValue: \"\",\n        children: teamMembers.map(user => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: user.email,\n          children: user.email\n        }, user.email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      type: \"date\",\n      label: \"Deadline\",\n      inputRef: deadlineRef,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleCreateTask,\n      sx: {\n        mt: 2\n      },\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n  const SignInPage = () => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      overflow: 'hidden',\n      backgroundImage: 'linear-gradient(rgba(33, 150, 243, 0.8), rgba(33, 203, 243, 0.8)), url(\"./assets/bg.jpg\")',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        background: 'transparent',\n        boxShadow: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1,\n            color: 'white'\n          },\n          children: \"Task Management App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        gap: 3,\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 4,\n          textAlign: 'center',\n          boxShadow: '0 8px 24px rgba(0,0,0,0.1)',\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(LockIcon, {\n            size: 48,\n            className: \"mx-auto mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            sx: {\n              mb: 3\n            },\n            children: \"Welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"text.secondary\",\n            sx: {\n              mb: 4\n            },\n            children: \"Please sign in to access your task management dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            onClick: () => auth.signinRedirect(),\n            sx: {\n              py: 1.5,\n              px: 4,\n              borderRadius: 2,\n              textTransform: 'none',\n              fontSize: '1.1rem'\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 3,\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          borderRadius: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Key Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'grid',\n              gridTemplateColumns: {\n                xs: '1fr',\n                sm: '1fr 1fr'\n              },\n              gap: 2,\n              mt: 1\n            },\n            children: ['Task Creation and Assignment', 'Deadline Management', 'Progress Tracking', 'Team Collaboration'].map((feature, index) => /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              sx: {\n                p: 2,\n                backgroundColor: 'rgba(33, 150, 243, 0.05)',\n                borderRadius: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: feature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n  const [editingTask, setEditingTask] = useState(null);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n  // Add new function to handle task updates by regular users\n  const handleUserUpdateTask = async (taskId, updatedData) => {\n    try {\n      const response = await axios.put(API_URLS.updateTask, {\n        id: taskId,\n        ...updatedData\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const updatedTask = response.data;\n      setTasks(prevTasks => prevTasks.map(task => task.TaskID === taskId ? {\n        ...task,\n        ...updatedData\n      } : task));\n      setEditDialogOpen(false);\n      setEditingTask(null);\n      console.log(\"Task successfully updated:\", updatedTask);\n    } catch (err) {\n      console.error(\"Failed to update task:\", err.message);\n      setError(\"Failed to update task\");\n    }\n  };\n  const EditTaskDialog = ({\n    task,\n    open,\n    onClose\n  }) => {\n    _s();\n    const [editedTask, setEditedTask] = useState(task);\n    const handleSubmit = () => {\n      handleUserUpdateTask(task.TaskID, editedTask);\n      onClose();\n    };\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: onClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Title\",\n            value: editedTask.title,\n            onChange: e => setEditedTask({\n              ...editedTask,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Description\",\n            multiline: true,\n            rows: 4,\n            value: editedTask.description,\n            onChange: e => setEditedTask({\n              ...editedTask,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            type: \"date\",\n            label: \"Deadline\",\n            value: editedTask.deadline,\n            onChange: e => setEditedTask({\n              ...editedTask,\n              deadline: e.target.value\n            }),\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: editedTask.status,\n              onChange: e => setEditedTask({\n                ...editedTask,\n                status: e.target.value\n              }),\n              label: \"Status\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"PENDING\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"IN_PROGRESS\",\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"COMPLETED\",\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this);\n  };\n  _s(EditTaskDialog, \"onDjxgjkBKvKtHTUfCxYVBt4Ga4=\");\n  const TaskCard = ({\n    task\n  }) => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 2,\n      mr: 2,\n      minWidth: 300,\n      maxWidth: 345,\n      backgroundColor: getCardColor(task.deadline, task.status),\n      transition: 'transform 0.2s',\n      '&:hover': {\n        transform: 'translateY(-4px)',\n        boxShadow: '0 4px 20px rgba(0,0,0,0.12)'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            fontWeight: 600\n          },\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), !isAdmin() && /*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: () => {\n            setEditingTask(task);\n            setEditDialogOpen(true);\n          },\n          sx: {\n            ml: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mb: 2\n        },\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 1,\n          p: 1,\n          backgroundColor: 'rgba(0,0,0,0.03)',\n          borderRadius: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            fontWeight: 500\n          },\n          children: [\"Status: \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          color: isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\" ? 'error.main' : 'text.secondary'\n        },\n        children: [\"Deadline: \", new Date(task.deadline).toLocaleDateString(), isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\" && \" (Approaching!)\", isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\" && \" (Overdue!)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), isAdmin() && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        sx: {\n          mt: 1\n        },\n        children: [\"Assignee: \", task.assignee]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), isAdmin() && /*#__PURE__*/_jsxDEV(CardActions, {\n      sx: {\n        flexWrap: 'wrap',\n        gap: 1,\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        color: \"success\",\n        onClick: () => handleUpdateTask(task.TaskID, \"COMPLETED\"),\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        color: \"warning\",\n        onClick: () => handleUpdateTask(task.TaskID, \"IN_PROGRESS\"),\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        color: \"error\",\n        onClick: () => handleDeleteTask(task.TaskID),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 555,\n    columnNumber: 5\n  }, this);\n  const TaskList = () => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      sx: {\n        mb: 4\n      },\n      children: isAdmin() ? \"All Tasks\" : \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 3\n      },\n      children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"No tasks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 11\n      }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n        task: task\n      }, task.TaskID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 654,\n    columnNumber: 5\n  }, this);\n  if (auth.isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this);\n  }\n  if (!auth.isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(SignInPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      backgroundColor: '#f5f5f5'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: '#1976d2'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            flexGrow: 1\n          },\n          children: [\"Task Management App (\", userRole, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: () => auth.removeUser(),\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        sx: {\n          mb: 4\n        },\n        children: [\"Welcome, \", (_auth$user5 = auth.user) === null || _auth$user5 === void 0 ? void 0 : _auth$user5.profile[\"cognito:username\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [isAdmin() && /*#__PURE__*/_jsxDEV(AdminTaskCreation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showNotification,\n        autoHideDuration: 6000,\n        onClose: () => setShowNotification(false),\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: () => setShowNotification(false),\n          severity: \"warning\",\n          sx: {\n            width: '100%'\n          },\n          children: notificationMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 7\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(EditTaskDialog, {\n      task: editingTask,\n      open: editDialogOpen,\n      onClose: () => {\n        setEditDialogOpen(false);\n        setEditingTask(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 692,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"ngypxa6G4lMflgodIHHjiNgYWcI=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","useAuth","Alert","Snackbar","Dialog","DialogTitle","DialogContent","DialogActions","AppBar","Toolbar","Typography","Button","Container","TextField","Grid","Card","CardContent","CardActions","Select","MenuItem","FormControl","InputLabel","Box","Paper","IconButton","Lock","LockIcon","Edit","EditIcon","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","_auth$user5","auth","tasks","setTasks","users","setUsers","userRole","setUserRole","newTask","setNewTask","title","description","assignee","deadline","status","error","setError","teamMembers","setTeamMembers","API_URLS","fetchTask","createTask","updateTask","deleteTask","fetchUsers","sendNotification","isAuthenticated","_auth$user","username","user","profile","role","console","log","fetchTasks","fetchTeamMembers","fetchUserRole","_auth$user2","titleRef","descriptionRef","assigneeRef","deadlineRef","isAdmin","_auth$user3","response","get","headers","Authorization","access_token","data","err","notifications","setNotifications","showNotification","setShowNotification","notificationMessage","setNotificationMessage","isDeadlineApproaching","deadlineDate","Date","today","diffTime","diffDays","Math","ceil","isDeadlinePassed","getCardColor","sendDeadlineNotification","task","post","email","taskTitle","message","toLocaleDateString","_auth$user4","url","URL","fetch","ok","Error","json","userEmail","relevantTasks","filter","approachingDeadlines","length","members","handleCreateTask","current","value","handleUpdateTask","taskId","newStatus","put","id","notifyTask","method","body","JSON","stringify","result","handleDeleteTask","delete","TaskID","AdminTaskCreation","item","xs","md","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","inputRef","margin","defaultValue","map","type","InputLabelProps","shrink","color","onClick","sx","mt","SignInPage","height","overflow","backgroundImage","backgroundSize","backgroundPosition","display","flexDirection","position","background","boxShadow","flexGrow","maxWidth","flex","justifyContent","gap","py","p","textAlign","borderRadius","size","className","gutterBottom","mb","signinRedirect","px","textTransform","fontSize","gridTemplateColumns","sm","feature","index","elevation","backgroundColor","editingTask","setEditingTask","editDialogOpen","setEditDialogOpen","handleUserUpdateTask","updatedData","updatedTask","prevTasks","EditTaskDialog","open","onClose","editedTask","setEditedTask","handleSubmit","pt","onChange","e","target","multiline","rows","TaskCard","mr","minWidth","transition","transform","alignItems","fontWeight","ml","flexWrap","TaskList","isLoading","minHeight","removeUser","container","spacing","severity","autoHideDuration","anchorOrigin","vertical","horizontal","width","_c","$RefreshReg$"],"sources":["/home/user/Task-Manager-Frontend/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"react-oidc-context\";\nimport { Alert, Snackbar, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  Container,\n  TextField,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Box,\n  Paper,\n  IconButton,\n} from \"@mui/material\";\nimport { Lock as LockIcon, Edit as EditIcon } from 'lucide-react';\n\nfunction App() {\n  const auth = useAuth();\n  const [tasks, setTasks] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userRole, setUserRole] = useState('');\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    assignee: \"\",\n    deadline: \"\",\n    status: \"PENDING\"\n  });\n  const [error, setError] = useState(\"\");\n  const [teamMembers, setTeamMembers] = useState([]);\n\n  const API_URLS = {\n    fetchTask: \"https://71aos5nio2.execute-api.eu-west-1.amazonaws.com/getTask\",\n    createTask: \"https://plaaw9qjn7.execute-api.eu-west-1.amazonaws.com/createTask\",\n    updateTask: \"https://rlyzlu0dl0.execute-api.eu-west-1.amazonaws.com/updateTask\",\n    deleteTask: \"https://1b4916boze.execute-api.eu-west-1.amazonaws.com/delete\",\n    fetchUsers: \"https://your-api-url/getUsers\",\n    sendNotification: \"https://yjja5gnwql.execute-api.eu-west-1.amazonaws.com/sendNotification\"\n  };\n\n  // Separate useEffect for authentication and role setting\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      const username = auth.user?.profile[\"cognito:username\"];\n      const role = username === \"admin\" ? \"ADMIN\" : \"MEMBER\";\n      setUserRole(role);\n      console.log(`Logged in as ${role}`);\n    }\n  }, [auth.isAuthenticated, auth.user]);\n\n  // Separate useEffect for fetching tasks after role is set\n  useEffect(() => {\n    if (auth.isAuthenticated && userRole) {\n      console.log(\"Fetching tasks for role:\", userRole);\n      fetchTasks();\n      if (userRole === 'ADMIN') {\n        fetchTeamMembers();\n      }\n    }\n  }, [auth.isAuthenticated, userRole]);\n\n\n  const fetchUserRole = () => {\n    // In a real application, the username and roles would typically come from your authentication system.\n    const username = auth.user?.profile[\"cognito:username\"];\n\n    if (username === \"admin\") {\n      // Assign 'ADMIN' role if username matches 'admin'\n      setUserRole(\"ADMIN\");\n      console.log(\"Logged in as admin\");\n    } else {\n      // Default to 'MEMBER' role otherwise\n      setUserRole(\"MEMBER\");\n      console.log(\"Logged in as a normal user without admin privileges\");\n    }\n  };\n\n\n\n  const titleRef = useRef();\n  const descriptionRef = useRef();\n  const assigneeRef = useRef();\n  const deadlineRef = useRef();\n\n  const isAdmin = () => userRole === 'ADMIN';\n\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get(API_URLS.fetchUsers, {\n        headers: { Authorization: `Bearer ${auth.user?.access_token}` },\n      });\n      setUsers(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch users\");\n    }\n  };\n\n\n\n  // Add new state for notifications\n  const [notifications, setNotifications] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n\n  // Function to check if a deadline is approaching (within 3 days)\n  const isDeadlineApproaching = (deadline) => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    const diffTime = deadlineDate - today;\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    return diffDays <= 3 && diffDays >= 0;\n  };\n\n  // Function to check if a deadline has passed\n  const isDeadlinePassed = (deadline) => {\n    const deadlineDate = new Date(deadline);\n    const today = new Date();\n    return deadlineDate < today;\n  };\n\n  // Function to get card background color based on deadline\n  const getCardColor = (deadline, status) => {\n    if (status === \"COMPLETED\") return \"#e8f5e9\"; // Light green for completed tasks\n    if (isDeadlinePassed(deadline)) return \"#ffebee\"; // Red for passed deadline\n    if (isDeadlineApproaching(deadline)) return \"#fff3e0\"; // Orange for approaching deadline\n    return \"white\"; // Default color\n  };\n\n\n  // Function to send email notification via SNS\n  const sendDeadlineNotification = async (task) => {\n    try {\n      const response = await axios.post(API_URLS.sendNotification, {\n        email: task.assignee,\n        taskTitle: task.title,\n        deadline: task.deadline,\n        message: `Task \"${task.title}\" is due on ${new Date(task.deadline).toLocaleDateString()}. Please complete it soon.`\n      });\n      console.log(\"Notification sent successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Failed to send notification:\", error);\n      setError(\"Failed to send email notification\");\n    }\n  };\n\n  const fetchTasks = async () => {\n    try {\n      console.log(\"Fetching tasks...\");\n      const url = new URL(API_URLS.fetchTask);\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log(\"Fetched tasks:\", data);\n\n      // Filter tasks based on user role and assignee\n      const userEmail = auth.user?.profile.email;\n      const relevantTasks = userRole === 'ADMIN' ? data : data.filter(task => task.assignee === userEmail);\n\n      // Check for approaching deadlines and send notifications\n      const approachingDeadlines = relevantTasks.filter(\n        task => isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\"\n      );\n\n      // Send email notifications for approaching deadlines\n      for (const task of approachingDeadlines) {\n        await sendDeadlineNotification(task);\n      }\n\n      // Set UI notifications\n      if (approachingDeadlines.length > 0) {\n        setNotificationMessage(`You have ${approachingDeadlines.length} task(s) with approaching deadlines! Check your email for details.`);\n        setShowNotification(true);\n      }\n\n      setTasks(relevantTasks);\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err);\n      setError(err.message || \"Failed to fetch tasks\");\n    }\n  };\n\n  const fetchTeamMembers = async () => {\n    try {\n      const response = await fetch('https://vwjwg4yut4.execute-api.eu-west-1.amazonaws.com/user');\n      if (!response.ok) {\n        throw new Error('Failed to fetch team members');\n      }\n      const data = await response.json();\n      console.log(data)\n      console.log(data.users)\n      const members = data.users.filter((user) => user);\n      console.log({ members })\n      setTeamMembers(members);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const handleCreateTask = async () => {\n    if (!isAdmin()) return;\n\n    const newTask = {\n      title: titleRef.current.value,\n      description: descriptionRef.current.value,\n      assignee: assigneeRef.current.value,\n      deadline: deadlineRef.current.value,\n      status: \"PENDING\",\n    };\n\n    try {\n      const response = await axios.post(API_URLS.createTask, newTask, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setError(\"\");\n      console.log(\"Task created:\", response.data);\n      fetchTasks(); // Refresh tasks after creating a new one\n    } catch (err) {\n      setError(\"Failed to create task\");\n      console.error(\"Error creating task:\", err);\n    }\n  };\n\n\n  const handleUpdateTask = async (taskId, newStatus) => {\n    if (!isAdmin()) return;\n\n    try {\n      const response = await axios.put(\n        API_URLS.updateTask,\n        { status: newStatus, id: taskId },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          }\n        }\n      );\n\n      console.log(\"Task updated:\", response.data);\n      fetchTasks(); // Refresh all tasks after update\n    } catch (err) {\n      console.error(\"Failed to update task:\", err.message);\n      setError(\"Failed to update task\");\n    }\n  };\n\n\n\n  const notifyTask = async (data) => {\n    const response = await fetch(\"https://efd8swtncb.execute-api.eu-west-1.amazonaws.com/notify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    });\n    const result = await response.json();\n    console.log(result);\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    if (!isAdmin()) return;\n    try {\n      await axios.delete(API_URLS.deleteTask, {\n        data: { TaskID: taskId },\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      fetchTasks(); // Refresh tasks after deletion\n    } catch (err) {\n      console.error(\"Error deleting task:\", err);\n      setError(\"Failed to delete task\");\n    }\n  };\n\n  useEffect(() => {\n    fetchTeamMembers();\n  }, []);\n\n  const AdminTaskCreation = () => (\n\n    <Grid item xs={12} md={6}>\n      <Typography variant=\"h5\">Create Task</Typography>\n\n      {/* Title Input */}\n      <TextField\n        fullWidth\n        label=\"Title\"\n        inputRef={titleRef}\n        margin=\"normal\"\n      />\n\n      {/* Description Input */}\n      <TextField\n        fullWidth\n        label=\"Description\"\n        inputRef={descriptionRef}\n        margin=\"normal\"\n      />\n\n      {/* Assignee Select */}\n      <FormControl fullWidth margin=\"normal\">\n        <InputLabel>Assignee</InputLabel>\n        <Select\n          inputRef={assigneeRef}\n          defaultValue=\"\"\n        >\n          {teamMembers.map((user) => (\n            <MenuItem key={user.email} value={user.email}>\n              {user.email}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      {/* Deadline Input */}\n      <TextField\n        fullWidth\n        type=\"date\"\n        label=\"Deadline\"\n        inputRef={deadlineRef}\n        margin=\"normal\"\n        InputLabelProps={{ shrink: true }}\n      />\n\n      {/* Create Task Button */}\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleCreateTask}\n        sx={{ mt: 2 }}\n      >\n        Create Task\n      </Button>\n\n      {/* Error Message */}\n      {error && <Typography color=\"error\">{error}</Typography>}\n    </Grid>\n  );\n\n\n  const SignInPage = () => (\n    <Box\n      sx={{\n        height: '100vh',\n        overflow: 'hidden',\n        \n        backgroundImage: 'linear-gradient(rgba(33, 150, 243, 0.8), rgba(33, 203, 243, 0.8)), url(\"./assets/bg.jpg\")',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        display: 'flex',\n        flexDirection: 'column'\n      }}\n    >\n      <AppBar position=\"static\" sx={{ background: 'transparent', boxShadow: 'none' }}>\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1, color: 'white' }}>\n            Task Management App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      \n      <Container \n        maxWidth=\"sm\" \n        sx={{ \n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          gap: 3,\n          py: 4\n        }}\n      >\n        <Card sx={{ \n          p: 4, \n          textAlign: 'center',\n          boxShadow: '0 8px 24px rgba(0,0,0,0.1)',\n          borderRadius: 2\n        }}>\n          <CardContent>\n            <LockIcon size={48} className=\"mx-auto mb-4\" />\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 3 }}>\n              Welcome\n            </Typography>\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\n              Please sign in to access your task management dashboard\n            </Typography>\n            <Button \n              variant=\"contained\" \n              size=\"large\"\n              onClick={() => auth.signinRedirect()}\n              sx={{\n                py: 1.5,\n                px: 4,\n                borderRadius: 2,\n                textTransform: 'none',\n                fontSize: '1.1rem'\n              }}\n            >\n              Sign In\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card sx={{ \n          p: 3,\n          boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          borderRadius: 2\n        }}>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              Key Features\n            </Typography>\n            <Box sx={{ \n              display: 'grid', \n              gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr' }, \n              gap: 2,\n              mt: 1 \n            }}>\n              {[\n                'Task Creation and Assignment',\n                'Deadline Management',\n                'Progress Tracking',\n                'Team Collaboration'\n              ].map((feature, index) => (\n                <Paper \n                  elevation={0}\n                  key={index}\n                  sx={{ \n                    p: 2,\n                    backgroundColor: 'rgba(33, 150, 243, 0.05)',\n                    borderRadius: 1\n                  }}\n                >\n                  <Typography variant=\"body2\">{feature}</Typography>\n                </Paper>\n              ))}\n            </Box>\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n\n  const [editingTask, setEditingTask] = useState(null);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n  // Add new function to handle task updates by regular users\n  const handleUserUpdateTask = async (taskId, updatedData) => {\n    try {\n      const response = await axios.put(\n        API_URLS.updateTask,\n        {\n          id: taskId,\n          ...updatedData\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          }\n        }\n      );\n\n      const updatedTask = response.data;\n\n      setTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.TaskID === taskId ? { ...task, ...updatedData } : task\n        )\n      );\n\n      setEditDialogOpen(false);\n      setEditingTask(null);\n      console.log(\"Task successfully updated:\", updatedTask);\n    } catch (err) {\n      console.error(\"Failed to update task:\", err.message);\n      setError(\"Failed to update task\");\n    }\n  };\n\n  const EditTaskDialog = ({ task, open, onClose }) => {\n    const [editedTask, setEditedTask] = useState(task);\n\n    const handleSubmit = () => {\n      handleUserUpdateTask(task.TaskID, editedTask);\n      onClose();\n    };\n\n    return (\n      <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Edit Task</DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <TextField\n              fullWidth\n              label=\"Title\"\n              value={editedTask.title}\n              onChange={(e) => setEditedTask({ ...editedTask, title: e.target.value })}\n            />\n            <TextField\n              fullWidth\n              label=\"Description\"\n              multiline\n              rows={4}\n              value={editedTask.description}\n              onChange={(e) => setEditedTask({ ...editedTask, description: e.target.value })}\n            />\n            <TextField\n              fullWidth\n              type=\"date\"\n              label=\"Deadline\"\n              value={editedTask.deadline}\n              onChange={(e) => setEditedTask({ ...editedTask, deadline: e.target.value })}\n              InputLabelProps={{ shrink: true }}\n            />\n            <FormControl fullWidth>\n              <InputLabel>Status</InputLabel>\n              <Select\n                value={editedTask.status}\n                onChange={(e) => setEditedTask({ ...editedTask, status: e.target.value })}\n                label=\"Status\"\n              >\n                <MenuItem value=\"PENDING\">Pending</MenuItem>\n                <MenuItem value=\"IN_PROGRESS\">In Progress</MenuItem>\n                <MenuItem value=\"COMPLETED\">Completed</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose}>Cancel</Button>\n          <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n\n  const TaskCard = ({ task }) => (\n    <Card\n      sx={{\n        mb: 2,\n        mr: 2,\n        minWidth: 300,\n        maxWidth: 345,\n        backgroundColor: getCardColor(task.deadline, task.status),\n        transition: 'transform 0.2s',\n        '&:hover': {\n          transform: 'translateY(-4px)',\n          boxShadow: '0 4px 20px rgba(0,0,0,0.12)'\n        }\n      }}\n    >\n      <CardContent>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\n          <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 600 }}>\n            {task.title}\n          </Typography>\n          {!isAdmin() && (\n            <IconButton\n              size=\"small\"\n              onClick={() => {\n                setEditingTask(task);\n                setEditDialogOpen(true);\n              }}\n              sx={{ ml: 1 }}\n            >\n              <EditIcon size={20} />\n            </IconButton>\n          )}\n        </Box>\n        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n          {task.description}\n        </Typography>\n        <Box sx={{\n          display: 'flex',\n          alignItems: 'center',\n          mb: 1,\n          p: 1,\n          backgroundColor: 'rgba(0,0,0,0.03)',\n          borderRadius: 1\n        }}>\n          <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n            Status: {task.status}\n          </Typography>\n        </Box>\n        <Typography\n          variant=\"body2\"\n          sx={{\n            color: isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\"\n              ? 'error.main'\n              : 'text.secondary'\n          }}\n        >\n          Deadline: {new Date(task.deadline).toLocaleDateString()}\n          {isDeadlineApproaching(task.deadline) && task.status !== \"COMPLETED\" &&\n            \" (Approaching!)\"}\n          {isDeadlinePassed(task.deadline) && task.status !== \"COMPLETED\" &&\n            \" (Overdue!)\"}\n        </Typography>\n        {isAdmin() && (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n            Assignee: {task.assignee}\n          </Typography>\n        )}\n      </CardContent>\n      {isAdmin() && (\n        <CardActions sx={{ flexWrap: 'wrap', gap: 1, p: 2 }}>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => handleUpdateTask(task.TaskID, \"COMPLETED\")}\n          >\n            Complete\n          </Button>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"warning\"\n            onClick={() => handleUpdateTask(task.TaskID, \"IN_PROGRESS\")}\n          >\n            In Progress\n          </Button>\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"error\"\n            onClick={() => handleDeleteTask(task.TaskID)}\n          >\n            Delete\n          </Button>\n        </CardActions>\n      )}\n    </Card>\n  );\n\n  const TaskList = () => (\n    <Box sx={{ p: 4 }}>\n      <Typography variant=\"h5\" gutterBottom sx={{ mb: 4 }}>\n        {isAdmin() ? \"All Tasks\" : \"My Tasks\"}\n      </Typography>\n      <Box sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: 3\n      }}>\n        {tasks.length === 0 ? (\n          <Typography color=\"text.secondary\">No tasks available</Typography>\n        ) : (\n          tasks.map((task) => (\n            <TaskCard key={task.TaskID} task={task} />\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n\n  if (auth.isLoading) {\n    return (\n      <Box sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh'\n      }}>\n        <Typography variant=\"h6\">Loading...</Typography>\n      </Box>\n    );\n  }\n\n  if (!auth.isAuthenticated) {\n    return <SignInPage />;\n  }\n\n  return (\n    <Box sx={{ minHeight: '100vh', backgroundColor: '#f5f5f5' }}>\n      <AppBar position=\"static\" sx={{ backgroundColor: '#1976d2' }}>\n        <Toolbar>\n          <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n            Task Management App ({userRole})\n          </Typography>\n          <Button color=\"inherit\" onClick={() => auth.removeUser()}>\n            Sign Out\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"xl\" sx={{ mt: 4 }}>\n        <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\n          Welcome, {auth.user?.profile[\"cognito:username\"]}\n        </Typography>\n        <Grid container spacing={3}>\n          {isAdmin() && <AdminTaskCreation />}\n          <Grid item xs={12}>\n            <TaskList />\n          </Grid>\n        </Grid>\n        {error && (\n          <Alert severity=\"error\" sx={{ mt: 2 }}>\n            {error}\n          </Alert>\n        )}\n        <Snackbar\n          open={showNotification}\n          autoHideDuration={6000}\n          onClose={() => setShowNotification(false)}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        >\n          <Alert\n            onClose={() => setShowNotification(false)}\n            severity=\"warning\"\n            sx={{ width: '100%' }}\n          >\n            {notificationMessage}\n          </Alert>\n        </Snackbar>\n      </Container>\n      {editingTask && (\n        <EditTaskDialog\n          task={editingTask}\n          open={editDialogOpen}\n          onClose={() => {\n            setEditDialogOpen(false);\n            setEditingTask(null);\n          }}\n        />\n      )}\n    </Box>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}